{"version":3,"sources":["webpack:///0-d946c3b3a46575c00341.js","webpack:///./src/app/modules/shared/tv-maze.provider.ts","webpack:///./src/app/modules/shared/local-storage.provider.ts","webpack:///./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopoverOptions.provider.js","webpack:///./node_modules/positioning/dist/positioning.js","webpack:///./node_modules/angular-async-cache/async-cache.provider.js","webpack:///./node_modules/angular-async-cache/drivers/memory-driver.provider.js","webpack:///./node_modules/angular-async-cache/async-cache-options.provider.js","webpack:///./node_modules/@angular/common/esm5/http.js","webpack:///./node_modules/angular-async-cache/drivers/local-storage-driver.provider.js","webpack:///./node_modules/angular-async-cache/cached-http.provider.js","webpack:///./node_modules/angular-async-cache/async-cache.module.js","webpack:///./node_modules/angular-async-cache/async-cache.pipe.js","webpack:///./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopoverWindow.component.ngfactory.js","webpack:///./node_modules/rxjs/add/operator/mergeMap.js","webpack:///./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopover.module.js","webpack:///./src/app/modules/shared/index.ts","webpack:///./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopoverWindow.component.js","webpack:///./src/app/modules/shared/sortable-header.directive.ts","webpack:///./src/app/modules/shared/show-list.component.ts","webpack:///./node_modules/angular-confirmation-popover/dist/esm/src/focus.directive.js","webpack:///./src/app/modules/shared/show-list.component.ngfactory.js","webpack:///./src/app/modules/shared/replace.pipe.ts","webpack:///./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopover.directive.js","webpack:///./src/app/modules/shared/order-by.pipe.ts","webpack:///./src/app/modules/shared/sortable-header.directive.ngfactory.js","webpack:///./node_modules/rxjs/add/observable/merge.js","webpack:///./node_modules/rxjs/add/observable/forkJoin.js","webpack:///./node_modules/rxjs/observable/forkJoin.js","webpack:///./node_modules/lodash.get/index.js","webpack:///./node_modules/rxjs/add/observable/fromPromise.js","webpack:///./node_modules/rxjs/add/observable/of.js","webpack:///./node_modules/symbol-observable/index.js","webpack:///./node_modules/symbol-observable/lib/index.js","webpack:///./node_modules/symbol-observable/lib/ponyfill.js","webpack:///./node_modules/rxjs/observable/ForkJoinObservable.js"],"names":["webpackJsonp","176","module","__webpack_exports__","__webpack_require__","d","TVMaze","__WEBPACK_IMPORTED_MODULE_0__angular_common_http__","__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__","n","http","this","prototype","search","query","get","BASE_URL","params","set","map","shows","show","getEpisodes","id","177","LocalStorage","getItem","key","defaultValue","localStorage","JSON","parse","setItem","value","stringify","removeItem","178","ConfirmationPopoverOptions","ConfirmationPopoverWindowOptions","__WEBPACK_IMPORTED_MODULE_0__angular_core__","__extends","extendStatics","Object","setPrototypeOf","__proto__","Array","b","p","hasOwnProperty","__","constructor","create","confirmText","cancelText","confirmButtonType","cancelButtonType","placement","hideConfirmButton","hideCancelButton","popoverClass","appendToBody","_super","apply","arguments","decorators","type","ctorParameters","179","Positioning","getAllStyles","element","window","getComputedStyle","getStyle","prop","isStaticPositioned","offsetParent","offsetParentEl","document","documentElement","position","round","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","Math","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","positionElements","hostElement","targetElement","hostElPosition","targetElStyles","targetElBCR","placementPrimary","split","placementSecondary","targetElPosition","parseFloat","marginBottom","marginRight","180","AsyncCache","__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromPromise__","__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__","__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_merge__","__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__","__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_mergeMap__","__WEBPACK_IMPORTED_MODULE_7_symbol_observable__","__WEBPACK_IMPORTED_MODULE_7_symbol_observable___default","__WEBPACK_IMPORTED_MODULE_8__async_cache_options_provider__","isPromise","fn","then","catch","isObservable","a","anyToObservable","fromPromise","of","defaults","wrap","cacheKey","userOptions","getAsyncValue","options","assign","Error","observer","promise","error","result","next","complete","err","driver","has","flatMap","existsInCache","cacheAndReturnAsyncValue","bypassCache","getCachedValue","fromCacheAndReplay","merge","181","MemoryDriver","Symbol","Map","delete","clear","keys","from","182","AsyncCacheOptions","__WEBPACK_IMPORTED_MODULE_0__drivers_memory_driver_provider__","overrides","183","paramParser","rawParams","codec","map$$1","length","forEach","param","eqIdx","indexOf","_a","decodeKey","slice","decodeValue","val","list","push","standardEncoding","v","encodeURIComponent","replace","mightHaveBody","method","isArrayBuffer","ArrayBuffer","isBlob","Blob","isFormData","FormData","addBody","body","headers","observe","reportProgress","responseType","withCredentials","getResponseUrl","xhr","responseURL","test","getAllResponseHeaders","getResponseHeader","interceptingHandler","backend","interceptors","reduceRight","interceptor","HttpInterceptorHandler","jsonpCallbackContext","HttpBackend","HttpHandler","HttpClient","HTTP_INTERCEPTORS","HttpClientModule","HttpClientXsrfModule","HttpParams","HttpXhrBackend","XhrFactory","HttpXsrfTokenExtractor","BrowserXhr","HttpXsrfCookieExtractor","HttpXsrfInterceptor","XSRF_COOKIE_NAME","XSRF_HEADER_NAME","__WEBPACK_IMPORTED_MODULE_1_rxjs_observable_of__","__WEBPACK_IMPORTED_MODULE_2_rxjs_operator_concatMap__","__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_filter__","__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__","__WEBPACK_IMPORTED_MODULE_5_tslib__","__WEBPACK_IMPORTED_MODULE_6__angular_common__","__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__","HttpHeaders","_this","normalizedNames","lazyUpdate","lazyInit","line","index","name_1","toLowerCase","trim","maybeSetNormalizedName","name","values","init","getAll","append","clone","op","lcName","copyFrom","update","applyUpdate","other","concat","base","undefined","toDelete_1","existing","filter","HttpUrlEncodingCodec","encodeKey","k","encodeValue","decodeURIComponent","updates","cloneFrom","encoder","fromString","fromObject","isArray","res","toString","eKey","join","base_1","idx","splice","HttpRequest","url","third","fourth","toUpperCase","urlWithParams","qIdx","sep","serializeBody","detectContentTypeHeader","setHeaders","reduce","setParams","HttpEventType","Sent","UploadProgress","ResponseHeader","DownloadProgress","Response","User","HttpResponseBase","defaultStatus","defaultStatusText","status","statusText","ok","HttpHeaderResponse","call","HttpResponse","HttpErrorResponse","message","handler","request","first","req","events$","handle","res$","event","head","jsonp","callbackParam","patch","post","put","intercept","NoopInterceptor","nextRequestId","JsonpCallbackContext","JsonpClientBackend","callbackMap","nextCallback","callback","node","createElement","src","finished","cancelled","data","cleanup","parentNode","removeChild","onLoad","onError","addEventListener","appendChild","removeEventListener","args","JsonpInterceptor","XSSI_PREFIX","build","XMLHttpRequest","xhrFactory","open","setRequestHeader","detectedType","reqBody","headerResponse","partialFromXhr","response","responseText","originalBody","text","sentHeaders","onDownProgress","progressEvent","loaded","lengthComputable","total","partialText","onUpProgress","progress","upload","send","abort","doc","platform","cookieName","lastCookieString","lastToken","parseCount","getToken","cookieString","cookie","tokenService","headerName","lcUrl","startsWith","token","disable","ngModule","providers","provide","useClass","withOptions","useValue","useExisting","multi","imports","useFactory","deps","HttpClientJsonpModule","184","LocalStorageDriver","DEFAULT_KEY_PREFIX","keyPrefix","getInternalKey","_i","i","getExternalKey","suffix","RegExp","185","CachedHttp","__WEBPACK_IMPORTED_MODULE_1__angular_common_http__","__WEBPACK_IMPORTED_MODULE_2__async_cache_provider__","asyncCache","asyncCacheOptions","result$","186","memoryDriverFactory","memory_driver_provider","localStorageDriverFactory","local_storage_driver_provider","cacheOptionFactory","async_cache_options_provider","core","async_cache_provider","async_cache_pipe_AsyncCachePipe","AsyncCachePipe","transform","cached_http_provider","async_cache_module_AsyncCacheModule","AsyncCacheModule","forRoot","cacheOptions","declarations","exports","188","View_ConfirmationPopoverWindow_2","_l","__WEBPACK_IMPORTED_MODULE_1__angular_common__","klass","ngClass","col-xs-offset-3 col-offset-3","_v","en","$event","ad","parent","context","onConfirm","clickEvent","__WEBPACK_IMPORTED_MODULE_2__focus_directive__","mwlFocus","_ck","focusButton","View_ConfirmationPopoverWindow_3","onCancel","View_ConfirmationPopoverWindow_1","ngIf","title","View_ConfirmationPopoverWindow_4","View_ConfirmationPopoverWindow_0","ngTemplateOutletContext","ngTemplateOutlet","_co","component","customTemplate","View_ConfirmationPopoverWindow_Host_0","RenderType_ConfirmationPopoverWindow","__WEBPACK_IMPORTED_MODULE_3__confirmationPopoverWindow_component__","__WEBPACK_IMPORTED_MODULE_4__confirmationPopoverOptions_provider__","ConfirmationPopoverWindowNgFactory","styles_ConfirmationPopoverWindow","encapsulation","styles","189","Observable_1","mergeMap_1","Observable","mergeMap","190","optionsFactory","__WEBPACK_IMPORTED_MODULE_6__confirmationPopoverOptions_provider__","USER_OPTIONS","ConfirmationPopoverModule","__WEBPACK_IMPORTED_MODULE_2_positioning__","__WEBPACK_IMPORTED_MODULE_3__confirmationPopover_directive__","__WEBPACK_IMPORTED_MODULE_4__confirmationPopoverWindow_component__","__WEBPACK_IMPORTED_MODULE_5__focus_directive__","entryComponents","191","asyncCacheOptionsFactory","__WEBPACK_IMPORTED_MODULE_0_angular_async_cache__","SharedModule","193","ConfirmationPopoverWindow","__WEBPACK_IMPORTED_MODULE_1__confirmationPopoverOptions_provider__","ngAfterViewInit","onAfterViewInit","template","194","SortableHeaderComponent","headerClicked","sort","field","fieldName","desc","195","ShowListComponent","__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__","__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__","__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_forkJoin__","tvMaze","unsubscribe","subscribedShows","subscribe","isSubscribed","some","subscribedShow","unsubscribeFromShow","emit","ngOnChanges","changeRecord","episodeRequests","forkJoin","showEpisodes","episodes","showIndex","nextEpisode","find","episode","Date","airstamp","getTime","now","202","Focus","elm","changes","nativeElement","focus","selector","propDecorators","203","View_ShowListComponent_1","$implicit","togglePopover","confirmationPopover_directive","confirmationPopoverOptions_provider","positioning","platform_browser","confirm","onClick","router","routerLink","image","medium","network","summary","View_ShowListComponent_0","order_by_pipe","Replace","common","sortable_header_directive_ngfactory","sortable_header_directive","ngForOf","View_ShowListComponent_Host_0","RenderType_ShowListComponent","show_list_component","local_storage_provider","tv_maze_provider","input","replaceWith","styles_ShowListComponent","204","ConfirmationPopover","__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__","__WEBPACK_IMPORTED_MODULE_2__confirmationPopoverWindow_component__","__WEBPACK_IMPORTED_MODULE_3__confirmationPopoverOptions_provider__","__WEBPACK_IMPORTED_MODULE_4_positioning__","viewContainerRef","defaultOptions","cfr","renderer","isDisabled","isOpen","isOpenChange","cancel","popover","eventListeners","ngOnInit","currentValue","showPopover","hidePopover","ngOnDestroy","onDocumentClick","contains","target","location","listen","positionPopover","options_1","popoverTitle","popoverMessage","componentFactory","resolveComponentFactory","binding","resolve","contextInjector","parentInjector","childInjector","fromResolvedProviders","createComponent","popoverElement","children","popoverPosition","setStyle","destroy","205","OrderBy","__WEBPACK_IMPORTED_MODULE_1_lodash_get__","__WEBPACK_IMPORTED_MODULE_1_lodash_get___default","206","View_SortableHeaderComponent_0","View_SortableHeaderComponent_Host_0","RenderType_SortableHeaderComponent","__WEBPACK_IMPORTED_MODULE_1__sortable_header_directive__","styles_SortableHeaderComponent","207","__WEBPACK_IMPORTED_MODULE_1__drivers_local_storage_driver_provider__","__WEBPACK_IMPORTED_MODULE_3__async_cache_options_provider__","208","merge_1","209","forkJoin_1","210","ForkJoinObservable_1","ForkJoinObservable","226","global","getValue","object","isHostObject","e","Hash","entries","entry","hashClear","__data__","nativeCreate","hashDelete","hashGet","HASH_UNDEFINED","hashHas","hashSet","ListCache","listCacheClear","listCacheDelete","assocIndexOf","pop","listCacheGet","listCacheHas","listCacheSet","MapCache","mapCacheClear","hash","string","mapCacheDelete","getMapData","mapCacheGet","mapCacheHas","mapCacheSet","array","eq","baseGet","path","isKey","castPath","toKey","baseIsNative","isObject","isMasked","isFunction","reIsNative","reIsHostCtor","toSource","baseToString","isSymbol","symbolToString","INFINITY","stringToPath","isKeyable","getNative","reIsPlainProp","reIsDeepProp","func","maskSrcKey","funcToString","memoize","resolver","TypeError","FUNC_ERROR_TEXT","memoized","cache","Cache","tag","objectToString","funcTag","genTag","isObjectLike","symbolTag","reLeadingDot","rePropName","reRegExpChar","reEscapeChar","freeGlobal","freeSelf","self","root","Function","arrayProto","funcProto","objectProto","coreJsData","uid","exec","IE_PROTO","symbolProto","match","number","quote","227","fromPromise_1","228","of_1","229","230","defineProperty","_ponyfill","_ponyfill2","obj","__esModule","default","231","symbolObservablePonyfill","_Symbol","observable","232","EmptyObservable_1","isArray_1","subscribeToResult_1","OuterSubscriber_1","sources","resultSelector","EmptyObservable","_subscribe","subscriber","ForkJoinSubscriber","destination","completed","haveValues","len","source","innerSubscription","subscribeToResult","outerIndex","add","notifyNext","outerValue","innerValue","innerIndex","innerSub","_hasValue","notifyComplete","OuterSubscriber"],"mappings":"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","file":"0-d946c3b3a46575c00341.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 176:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return TVMaze; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_common_http__ = __webpack_require__(183);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__ = __webpack_require__(83);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_add_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_angular_async_cache__ = __webpack_require__(207);\n\n\n\nvar TVMaze = /** @class */ (function () {\n    function TVMaze(http) {\n        this.http = http;\n    }\n    TVMaze.prototype.search = function (query) {\n        return this.http\n            .get(TVMaze.BASE_URL + \"search/shows\", {\n            params: new __WEBPACK_IMPORTED_MODULE_0__angular_common_http__[\"g\" /* HttpParams */]().set('q', query)\n        })\n            .map(function (shows) {\n            return shows.map(function (show) { return show.show; });\n        });\n    };\n    TVMaze.prototype.getEpisodes = function (id) {\n        return this.http.get(TVMaze.BASE_URL + \"shows/\" + id + \"/episodes\");\n    };\n    TVMaze.BASE_URL = 'https://api.tvmaze.com/';\n    return TVMaze;\n}());\n\n\n\n/***/ }),\n\n/***/ 177:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LocalStorage; });\nvar LocalStorage = /** @class */ (function () {\n    function LocalStorage() {\n    }\n    LocalStorage.prototype.getItem = function (key, defaultValue) {\n        if (localStorage.getItem(key)) {\n            return JSON.parse(localStorage.getItem(key));\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    LocalStorage.prototype.setItem = function (key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    };\n    LocalStorage.prototype.removeItem = function (key) {\n        localStorage.removeItem(key);\n    };\n    return LocalStorage;\n}());\n\n\n\n/***/ }),\n\n/***/ 178:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ConfirmationPopoverOptions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return ConfirmationPopoverWindowOptions; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n\nvar ConfirmationPopoverOptions = (function () {\n    function ConfirmationPopoverOptions() {\n        this.confirmText = 'Confirm';\n        this.cancelText = 'Cancel';\n        this.confirmButtonType = 'success';\n        this.cancelButtonType = 'default';\n        this.placement = 'top';\n        this.hideConfirmButton = false;\n        this.hideCancelButton = false;\n        this.popoverClass = '';\n        this.appendToBody = false;\n    }\n    return ConfirmationPopoverOptions;\n}());\n\n/**\n * @private\n */\nvar ConfirmationPopoverWindowOptions = (function (_super) {\n    __extends(ConfirmationPopoverWindowOptions, _super);\n    function ConfirmationPopoverWindowOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConfirmationPopoverWindowOptions.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    ConfirmationPopoverWindowOptions.ctorParameters = function () { return []; };\n    return ConfirmationPopoverWindowOptions;\n}(ConfirmationPopoverOptions));\n\n//# sourceMappingURL=confirmationPopoverOptions.provider.js.map\n\n/***/ }),\n\n/***/ 179:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Positioning; });\n/* unused harmony export positionElements */\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nvar Positioning = (function () {\n    function Positioning() {\n    }\n    Positioning.prototype.getAllStyles = function (element) { return window.getComputedStyle(element); };\n    Positioning.prototype.getStyle = function (element, prop) { return this.getAllStyles(element)[prop]; };\n    Positioning.prototype.isStaticPositioned = function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    Positioning.prototype.offsetParent = function (element) {\n        var offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    Positioning.prototype.position = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elPosition;\n        var parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n        }\n        else {\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    Positioning.prototype.offset = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elBcr = element.getBoundingClientRect();\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        var targetElStyles = this.getAllStyles(targetElement);\n        var targetElBCR = targetElement.getBoundingClientRect();\n        var placementPrimary = placement.split('-')[0] || 'top';\n        var placementSecondary = placement.split('-')[1] || 'center';\n        var targetElPosition = {\n            'height': targetElBCR.height || targetElement.offsetHeight,\n            'width': targetElBCR.width || targetElement.offsetWidth,\n            'top': 0,\n            'bottom': targetElBCR.height || targetElement.offsetHeight,\n            'left': 0,\n            'right': targetElBCR.width || targetElement.offsetWidth\n        };\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.top =\n                    hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height;\n                break;\n            case 'left':\n                targetElPosition.left =\n                    hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width;\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                targetElPosition.top = hostElPosition.top;\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                targetElPosition.left = hostElPosition.left;\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n                }\n                else {\n                    targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n                }\n                break;\n        }\n        targetElPosition.top = Math.round(targetElPosition.top);\n        targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        targetElPosition.left = Math.round(targetElPosition.left);\n        targetElPosition.right = Math.round(targetElPosition.right);\n        return targetElPosition;\n    };\n    return Positioning;\n}());\n\nvar positionService = new Positioning();\nfunction positionElements(hostElement, targetElement, placement, appendToBody) {\n    var pos = positionService.positionElements(hostElement, targetElement, placement, appendToBody);\n    targetElement.style.top = pos.top + \"px\";\n    targetElement.style.left = pos.left + \"px\";\n}\n//# sourceMappingURL=positioning.js.map\n\n/***/ }),\n\n/***/ 180:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AsyncCache; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromPromise__ = __webpack_require__(227);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromPromise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_add_observable_fromPromise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__ = __webpack_require__(228);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_add_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_merge__ = __webpack_require__(208);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_merge___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_observable_merge__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__ = __webpack_require__(83);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_mergeMap__ = __webpack_require__(189);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_mergeMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_rxjs_add_operator_mergeMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_symbol_observable__ = __webpack_require__(229);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_symbol_observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_symbol_observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__async_cache_options_provider__ = __webpack_require__(182);\n\n\n\n\n\n\n\n\n\nvar isPromise = function (fn) { return fn && typeof fn.then === 'function' && typeof fn.catch === 'function'; };\nvar isObservable = function (fn) { return fn && fn[__WEBPACK_IMPORTED_MODULE_7_symbol_observable___default.a]; };\nvar anyToObservable = function (fn) {\n    if (isObservable(fn)) {\n        return fn;\n    }\n    else if (isPromise(fn)) {\n        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].fromPromise(fn);\n    }\n    else {\n        return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].of(fn);\n    }\n};\nvar AsyncCache = (function () {\n    function AsyncCache(defaults) {\n        this.defaults = defaults;\n    }\n    AsyncCache.prototype.wrap = function (value, cacheKey, userOptions) {\n        if (userOptions === void 0) { userOptions = {}; }\n        var getAsyncValue;\n        var options = Object.assign({}, this.defaults, userOptions);\n        if (isObservable(value)) {\n            getAsyncValue = value;\n        }\n        else if (typeof value === 'function') {\n            getAsyncValue = __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].create(function (observer) {\n                var promise = value();\n                if (!isPromise(promise)) {\n                    return observer.error('The function you passed to the async cache didn\\'t return a promise');\n                }\n                promise.then(function (result) {\n                    observer.next(result);\n                    observer.complete();\n                }).catch(function (err) {\n                    observer.error(err);\n                });\n            });\n        }\n        else {\n            throw new Error('Value can only be an observable or a function that returns a promise');\n        }\n        return anyToObservable(options.driver.has(cacheKey)).flatMap(function (existsInCache) {\n            var cacheAndReturnAsyncValue = function () { return getAsyncValue.flatMap(function (value) {\n                return anyToObservable(options.driver.set(cacheKey, value)).map(function () { return value; });\n            }); };\n            if (existsInCache && !options.bypassCache) {\n                var getCachedValue = anyToObservable(options.driver.get(cacheKey));\n                if (options.fromCacheAndReplay) {\n                    return __WEBPACK_IMPORTED_MODULE_1_rxjs_Observable__[\"Observable\"].merge(getCachedValue, cacheAndReturnAsyncValue());\n                }\n                else {\n                    return getCachedValue;\n                }\n            }\n            else {\n                return cacheAndReturnAsyncValue();\n            }\n        });\n    };\n    AsyncCache.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    AsyncCache.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_8__async_cache_options_provider__[\"a\" /* AsyncCacheOptions */], },\n    ]; };\n    return AsyncCache;\n}());\n\n//# sourceMappingURL=async-cache.provider.js.map\n\n/***/ }),\n\n/***/ 181:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return MemoryDriver; });\nvar cacheKey = Symbol('cache key');\nvar MemoryDriver = (function () {\n    function MemoryDriver() {\n        this[cacheKey] = new Map();\n    }\n    MemoryDriver.prototype.has = function (key) {\n        return this[cacheKey].has(key);\n    };\n    MemoryDriver.prototype.get = function (key) {\n        return this[cacheKey].get(key);\n    };\n    MemoryDriver.prototype.set = function (key, value) {\n        return this[cacheKey].set(key, value);\n    };\n    MemoryDriver.prototype.delete = function (key) {\n        return this[cacheKey].delete(key);\n    };\n    MemoryDriver.prototype.clear = function () {\n        return this[cacheKey].clear();\n    };\n    MemoryDriver.prototype.keys = function () {\n        return Array.from(this[cacheKey].keys());\n    };\n    return MemoryDriver;\n}());\n\n//# sourceMappingURL=memory-driver.provider.js.map\n\n/***/ }),\n\n/***/ 182:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return AsyncCacheOptions; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__drivers_memory_driver_provider__ = __webpack_require__(181);\n\nvar AsyncCacheOptions = (function () {\n    function AsyncCacheOptions(overrides) {\n        if (overrides === void 0) { overrides = {}; }\n        this.driver = new __WEBPACK_IMPORTED_MODULE_0__drivers_memory_driver_provider__[\"a\" /* MemoryDriver */]();\n        this.fromCacheAndReplay = false;\n        Object.assign(this, overrides);\n    }\n    return AsyncCacheOptions;\n}());\n\n//# sourceMappingURL=async-cache-options.provider.js.map\n\n/***/ }),\n\n/***/ 183:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return HttpBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"f\", function() { return HttpHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return HttpClient; });\n/* unused harmony export HttpHeaders */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return HTTP_INTERCEPTORS; });\n/* unused harmony export JsonpClientBackend */\n/* unused harmony export JsonpInterceptor */\n/* unused harmony export HttpClientJsonpModule */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"d\", function() { return HttpClientModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"e\", function() { return HttpClientXsrfModule; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"p\", function() { return interceptingHandler; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"g\", function() { return HttpParams; });\n/* unused harmony export HttpUrlEncodingCodec */\n/* unused harmony export HttpRequest */\n/* unused harmony export HttpErrorResponse */\n/* unused harmony export HttpEventType */\n/* unused harmony export HttpHeaderResponse */\n/* unused harmony export HttpResponse */\n/* unused harmony export HttpResponseBase */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"h\", function() { return HttpXhrBackend; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"j\", function() { return XhrFactory; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"i\", function() { return HttpXsrfTokenExtractor; });\n/* unused harmony export ɵa */\n/* unused harmony export ɵb */\n/* unused harmony export ɵc */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"k\", function() { return BrowserXhr; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"n\", function() { return HttpXsrfCookieExtractor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"o\", function() { return HttpXsrfInterceptor; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"l\", function() { return XSRF_COOKIE_NAME; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"m\", function() { return XSRF_HEADER_NAME; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_observable_of__ = __webpack_require__(55);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_rxjs_observable_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_rxjs_observable_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_operator_concatMap__ = __webpack_require__(89);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_rxjs_operator_concatMap___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_rxjs_operator_concatMap__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_filter__ = __webpack_require__(86);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_filter___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_operator_filter__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__ = __webpack_require__(56);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_tslib__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__angular_common__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__);\n/**\n * @license Angular v5.1.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n\n\n\n\n\n\n\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@stable\n * @abstract\n */\nvar HttpHandler = /** @class */ (function () {\n    function HttpHandler() {\n    }\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@stable\n * @abstract\n */\nvar HttpBackend = /** @class */ (function () {\n    function HttpBackend() {\n    }\n    return HttpBackend;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@stable\n */\nvar HttpHeaders = /** @class */ (function () {\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var /** @type {?} */ index = line.indexOf(':');\n                    if (index > 0) {\n                        var /** @type {?} */ name_1 = line.slice(0, index);\n                        var /** @type {?} */ key = name_1.toLowerCase();\n                        var /** @type {?} */ value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name_1, key);\n                        if (_this.headers.has(key)) {\n                            /** @type {?} */ ((_this.headers.get(key))).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var /** @type {?} */ values = headers[name];\n                    var /** @type {?} */ key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     */\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     */\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = /**\n     * @param {?} update\n     * @return {?}\n     */\n    function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = /**\n     * @param {?} update\n     * @return {?}\n     */\n    function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = /** @type {?} */ ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = /** @type {?} */ (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A codec for encoding and decoding parameters in URLs.\n *\n * Used by `HttpParams`.\n *\n * \\@stable\n *\n * @record\n */\n\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@stable\n */\nvar HttpUrlEncodingCodec = /** @class */ (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = /**\n     * @param {?} k\n     * @return {?}\n     */\n    function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = /**\n     * @param {?} v\n     * @return {?}\n     */\n    function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = /**\n     * @param {?} k\n     * @return {?}\n     */\n    function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = /**\n     * @param {?} v\n     * @return {?}\n     */\n    function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Options used to construct an `HttpParams` instance.\n * @record\n */\n\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable - all mutation operations return a new instance.\n *\n * \\@stable\n */\nvar HttpParams = /** @class */ (function () {\n    function HttpParams(options) {\n        if (options === void 0) { options = /** @type {?} */ ({}); }\n        var _this = this;\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(\"Cannot specify both fromString and fromObject.\");\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(function (key) {\n                var /** @type {?} */ value = (/** @type {?} */ (options.fromObject))[key]; /** @type {?} */\n                ((_this.map)).set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     */\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        this.init();\n        return /** @type {?} */ ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     */\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        this.init();\n        var /** @type {?} */ res = /** @type {?} */ ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     */\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        this.init();\n        return /** @type {?} */ ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     */\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     */\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     */\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     */\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return /** @type {?} */ ((/** @type {?} */ ((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); }).join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = /**\n     * @param {?} update\n     * @return {?}\n     */\n    function (update) {\n        var /** @type {?} */ clone = new HttpParams(/** @type {?} */ ({ encoder: this.encoder }));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return ((_this.map)).set(key, /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? /** @type {?} */ ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = /** @type {?} */ ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                /** @type {?} */ ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                /** @type {?} */ ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            /** @type {?} */ ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@stable\n */\nvar HttpRequest = /** @class */ (function () {\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var /** @type {?} */ options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? /** @type {?} */ (third) : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = /** @type {?} */ (third);\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var /** @type {?} */ params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var /** @type {?} */ qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var /** @type {?} */ sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return (/** @type {?} */ (this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = /**\n     * @param {?=} update\n     * @return {?}\n     */\n    function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar HttpEventType = {\n    /**\n       * The request was sent out over the wire.\n       */\n    Sent: 0,\n    /**\n       * An upload progress event was received.\n       */\n    UploadProgress: 1,\n    /**\n       * The response status code and headers were received.\n       */\n    ResponseHeader: 2,\n    /**\n       * A download progress event was received.\n       */\n    DownloadProgress: 3,\n    /**\n       * The full response including the body was received.\n       */\n    Response: 4,\n    /**\n       * A custom event from an interceptor or a backend.\n       */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base interface for progress events.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A download progress event.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An upload progress event.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An event indicating that the request was sent to the server. Useful\n * when a request may be retried multiple times, to distinguish between\n * retries on the final event stream.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A user-defined event.\n *\n * Grouping all custom events under this type ensures they will be handled\n * and forwarded by all implementations of interceptors.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An error that represents a failed attempt to JSON.parse text coming back\n * from the server.\n *\n * It bundles the Error object with the actual response body that failed to parse.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@stable\n * @abstract\n */\nvar HttpResponseBase = /** @class */ (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@stable\n */\nvar HttpHeaderResponse = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_5_tslib__[\"b\" /* __extends */])(HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@stable\n */\nvar HttpResponse = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_5_tslib__[\"b\" /* __extends */])(HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body !== undefined ? init.body : null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = /**\n     * @param {?=} update\n     * @return {?}\n     */\n    function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@stable\n */\nvar HttpErrorResponse = /** @class */ (function (_super) {\n    Object(__WEBPACK_IMPORTED_MODULE_5_tslib__[\"b\" /* __extends */])(HttpErrorResponse, _super);\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@stable\n */\nvar HttpClient = /** @class */ (function () {\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     */\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = /** @type {?} */ (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            // Figure out the headers.\n            var /** @type {?} */ headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            var /** @type {?} */ params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams(/** @type {?} */ ({ fromObject: options.params }));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), (options.body !== undefined ? options.body : null), {\n                headers: headers,\n                params: params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = __WEBPACK_IMPORTED_MODULE_2_rxjs_operator_concatMap__[\"concatMap\"].call(Object(__WEBPACK_IMPORTED_MODULE_1_rxjs_observable_of__[\"of\"])(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = __WEBPACK_IMPORTED_MODULE_3_rxjs_operator_filter__[\"filter\"].call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__[\"map\"].call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return __WEBPACK_IMPORTED_MODULE_4_rxjs_operator_map__[\"map\"].call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    HttpClient.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    HttpClient.ctorParameters = function () { return [\n        { type: HttpHandler, },\n    ]; };\n    return HttpClient;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Intercepts `HttpRequest` and handles them.\n *\n * Most interceptors will transform the outgoing request before passing it to the\n * next interceptor in the chain, by calling `next.handle(transformedReq)`.\n *\n * In rare cases, interceptors may wish to completely handle a request themselves,\n * and not delegate to the remainder of the chain. This behavior is allowed.\n *\n * \\@stable\n * @record\n */\n\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@stable\n */\nvar HttpInterceptorHandler = /** @class */ (function () {\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = /**\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@stable\n */\nvar HTTP_INTERCEPTORS = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"InjectionToken\"]('HTTP_INTERCEPTORS');\nvar NoopInterceptor = /** @class */ (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    function (req, next) {\n        return next.handle(req);\n    };\n    NoopInterceptor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    NoopInterceptor.ctorParameters = function () { return []; };\n    return NoopInterceptor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@stable\n * @abstract\n */\nvar JsonpCallbackContext = /** @class */ (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@stable\n */\nvar JsonpClientBackend = /** @class */ (function () {\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     */\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"](function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    JsonpClientBackend.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    JsonpClientBackend.ctorParameters = function () { return [\n        { type: JsonpCallbackContext, },\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"d\" /* DOCUMENT */],] },] },\n    ]; };\n    return JsonpClientBackend;\n}());\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@stable\n */\nvar JsonpInterceptor = /** @class */ (function () {\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    JsonpInterceptor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    JsonpInterceptor.ctorParameters = function () { return [\n        { type: JsonpClientBackend, },\n    ]; };\n    return JsonpInterceptor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@stable\n * @abstract\n */\nvar XhrFactory = /** @class */ (function () {\n    function XhrFactory() {\n    }\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@stable\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((new XMLHttpRequest())); };\n    BrowserXhr.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    BrowserXhr.ctorParameters = function () { return []; };\n    return BrowserXhr;\n}());\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@stable\n */\nvar HttpXhrBackend = /** @class */ (function () {\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     */\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new __WEBPACK_IMPORTED_MODULE_7_rxjs_Observable__[\"Observable\"](function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var /** @type {?} */ responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = /** @type {?} */ (((responseType !== 'json') ? responseType : 'text'));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    var /** @type {?} */ originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (/** @type {?} */ error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = /** @type {?} */ ({ error: error, text: body });\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    HttpXhrBackend.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    HttpXhrBackend.ctorParameters = function () { return [\n        { type: XhrFactory, },\n    ]; };\n    return HttpXhrBackend;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"InjectionToken\"]('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"InjectionToken\"]('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@stable\n * @abstract\n */\nvar HttpXsrfTokenExtractor = /** @class */ (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = /** @class */ (function () {\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = /**\n     * @return {?}\n     */\n    function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = Object(__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"x\" /* ɵparseCookieValue */])(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    HttpXsrfCookieExtractor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    HttpXsrfCookieExtractor.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_6__angular_common__[\"d\" /* DOCUMENT */],] },] },\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"PLATFORM_ID\"],] },] },\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [XSRF_COOKIE_NAME,] },] },\n    ]; };\n    return HttpXsrfCookieExtractor;\n}());\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = /** @class */ (function () {\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    HttpXsrfInterceptor.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    HttpXsrfInterceptor.ctorParameters = function () { return [\n        { type: HttpXsrfTokenExtractor, },\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [XSRF_HEADER_NAME,] },] },\n    ]; };\n    return HttpXsrfInterceptor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@stable\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n * \\@stable\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@stable\n */\nvar HttpClientXsrfModule = /** @class */ (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     */\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     */\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    HttpClientXsrfModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    providers: [\n                        HttpXsrfInterceptor,\n                        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpClientXsrfModule.ctorParameters = function () { return []; };\n    return HttpClientXsrfModule;\n}());\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@stable\n */\nvar HttpClientModule = /** @class */ (function () {\n    function HttpClientModule() {\n    }\n    HttpClientModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    imports: [\n                        HttpClientXsrfModule.withOptions({\n                            cookieName: 'XSRF-TOKEN',\n                            headerName: 'X-XSRF-TOKEN',\n                        }),\n                    ],\n                    providers: [\n                        HttpClient,\n                        // HttpHandler is the backend + interceptors and is constructed\n                        // using the interceptingHandler factory function.\n                        {\n                            provide: HttpHandler,\n                            useFactory: interceptingHandler,\n                            deps: [HttpBackend, [new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Optional\"](), new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"](HTTP_INTERCEPTORS)]],\n                        },\n                        HttpXhrBackend,\n                        { provide: HttpBackend, useExisting: HttpXhrBackend },\n                        BrowserXhr,\n                        { provide: XhrFactory, useExisting: BrowserXhr },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpClientModule.ctorParameters = function () { return []; };\n    return HttpClientModule;\n}());\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n * \\@stable\n */\nvar HttpClientJsonpModule = /** @class */ (function () {\n    function HttpClientJsonpModule() {\n    }\n    HttpClientJsonpModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    providers: [\n                        JsonpClientBackend,\n                        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpClientJsonpModule.ctorParameters = function () { return []; };\n    return HttpClientJsonpModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\n\n//# sourceMappingURL=http.js.map\n\n\n/***/ }),\n\n/***/ 184:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return LocalStorageDriver; });\nvar DEFAULT_KEY_PREFIX = 'async-cache-';\nvar LocalStorageDriver = (function () {\n    function LocalStorageDriver(options) {\n        if (options === void 0) { options = { keyPrefix: DEFAULT_KEY_PREFIX }; }\n        this.options = options;\n    }\n    LocalStorageDriver.prototype.has = function (key) {\n        return localStorage.hasOwnProperty(this.getInternalKey(key));\n    };\n    LocalStorageDriver.prototype.get = function (key) {\n        return JSON.parse(localStorage.getItem(this.getInternalKey(key)));\n    };\n    LocalStorageDriver.prototype.set = function (key, value) {\n        return localStorage.setItem(this.getInternalKey(key), JSON.stringify(value));\n    };\n    LocalStorageDriver.prototype.delete = function (key) {\n        return localStorage.removeItem(this.getInternalKey(key));\n    };\n    LocalStorageDriver.prototype.clear = function () {\n        for (var _i = 0, _a = this.keys(); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.delete(key);\n        }\n        return;\n    };\n    LocalStorageDriver.prototype.keys = function () {\n        var _this = this;\n        var keys = [];\n        for (var i = 0; i < localStorage.length; i++) {\n            keys.push(localStorage.key(i));\n        }\n        return keys.filter(function (key) { return key.startsWith(_this.options.keyPrefix); }).map(function (key) { return _this.getExternalKey(key); });\n    };\n    LocalStorageDriver.prototype.getInternalKey = function (suffix) {\n        return \"\" + this.options.keyPrefix + suffix;\n    };\n    LocalStorageDriver.prototype.getExternalKey = function (key) {\n        return key.replace(new RegExp('^' + this.options.keyPrefix), '');\n    };\n    return LocalStorageDriver;\n}());\n\n//# sourceMappingURL=local-storage-driver.provider.js.map\n\n/***/ }),\n\n/***/ 185:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return CachedHttp; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common_http__ = __webpack_require__(183);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__async_cache_provider__ = __webpack_require__(180);\n\n\n\nvar CachedHttp = (function () {\n    function CachedHttp(http, asyncCache) {\n        this.http = http;\n        this.asyncCache = asyncCache;\n    }\n    CachedHttp.prototype.get = function (url, options, asyncCacheOptions) {\n        var result$ = this.http.get(url, options);\n        var cacheKey = url;\n        if (options && options.params) {\n            cacheKey += '?' + options.params.toString();\n        }\n        return this.asyncCache.wrap(result$, cacheKey, asyncCacheOptions);\n    };\n    CachedHttp.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Injectable\"] },\n    ];\n    /** @nocollapse */\n    CachedHttp.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__angular_common_http__[\"c\" /* HttpClient */], },\n        { type: __WEBPACK_IMPORTED_MODULE_2__async_cache_provider__[\"a\" /* AsyncCache */], },\n    ]; };\n    return CachedHttp;\n}());\n\n//# sourceMappingURL=cached-http.provider.js.map\n\n/***/ }),\n\n/***/ 186:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/esm5/core.js\nvar core = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./node_modules/angular-async-cache/drivers/local-storage-driver.provider.js\nvar local_storage_driver_provider = __webpack_require__(184);\n\n// EXTERNAL MODULE: ./node_modules/angular-async-cache/drivers/memory-driver.provider.js\nvar memory_driver_provider = __webpack_require__(181);\n\n// EXTERNAL MODULE: ./node_modules/angular-async-cache/async-cache-options.provider.js\nvar async_cache_options_provider = __webpack_require__(182);\n\n// EXTERNAL MODULE: ./node_modules/angular-async-cache/async-cache.provider.js\nvar async_cache_provider = __webpack_require__(180);\n\n// CONCATENATED MODULE: ./node_modules/angular-async-cache/async-cache.pipe.js\n\n\nvar async_cache_pipe_AsyncCachePipe = (function () {\n    function AsyncCachePipe(asyncCache) {\n        this.asyncCache = asyncCache;\n    }\n    AsyncCachePipe.prototype.transform = function (value, cacheKey, options) {\n        return this.asyncCache.wrap(value, cacheKey, options);\n    };\n    AsyncCachePipe.decorators = [\n        { type: core[\"Pipe\"], args: [{\n                    name: 'asyncCache'\n                },] },\n    ];\n    /** @nocollapse */\n    AsyncCachePipe.ctorParameters = function () { return [\n        { type: async_cache_provider[\"a\" /* AsyncCache */], },\n    ]; };\n    return AsyncCachePipe;\n}());\n\n//# sourceMappingURL=async-cache.pipe.js.map\n// EXTERNAL MODULE: ./node_modules/angular-async-cache/cached-http.provider.js\nvar cached_http_provider = __webpack_require__(185);\n\n// CONCATENATED MODULE: ./node_modules/angular-async-cache/async-cache.module.js\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = memoryDriverFactory;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = localStorageDriverFactory;\n/* unused harmony export cacheOptionFactory */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return async_cache_module_AsyncCacheModule; });\n\n\n\n\n\n\n\nfunction memoryDriverFactory(options) {\n    return options.driver instanceof memory_driver_provider[\"a\" /* MemoryDriver */] ? options.driver : new memory_driver_provider[\"a\" /* MemoryDriver */]();\n}\nfunction localStorageDriverFactory(options) {\n    return options.driver instanceof local_storage_driver_provider[\"a\" /* LocalStorageDriver */] ? options.driver : new local_storage_driver_provider[\"a\" /* LocalStorageDriver */]();\n}\nfunction cacheOptionFactory() {\n    return new async_cache_options_provider[\"a\" /* AsyncCacheOptions */]();\n}\nvar async_cache_module_AsyncCacheModule = (function () {\n    function AsyncCacheModule() {\n    }\n    AsyncCacheModule.forRoot = function (cacheOptions) {\n        if (cacheOptions === void 0) { cacheOptions = {\n            provide: async_cache_options_provider[\"a\" /* AsyncCacheOptions */],\n            useFactory: cacheOptionFactory\n        }; }\n        return {\n            ngModule: AsyncCacheModule,\n            providers: [{\n                    provide: local_storage_driver_provider[\"a\" /* LocalStorageDriver */],\n                    useFactory: localStorageDriverFactory,\n                    deps: [async_cache_options_provider[\"a\" /* AsyncCacheOptions */]]\n                }, {\n                    provide: memory_driver_provider[\"a\" /* MemoryDriver */],\n                    useFactory: memoryDriverFactory,\n                    deps: [async_cache_options_provider[\"a\" /* AsyncCacheOptions */]]\n                },\n                cacheOptions,\n                async_cache_provider[\"a\" /* AsyncCache */],\n                cached_http_provider[\"a\" /* CachedHttp */]\n            ]\n        };\n    };\n    AsyncCacheModule.decorators = [\n        { type: core[\"NgModule\"], args: [{\n                    declarations: [async_cache_pipe_AsyncCachePipe],\n                    exports: [async_cache_pipe_AsyncCachePipe]\n                },] },\n    ];\n    /** @nocollapse */\n    AsyncCacheModule.ctorParameters = function () { return []; };\n    return AsyncCacheModule;\n}());\n\n//# sourceMappingURL=async-cache.module.js.map\n\n/***/ }),\n\n/***/ 188:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export RenderType_ConfirmationPopoverWindow */\n/* unused harmony export View_ConfirmationPopoverWindow_0 */\n/* unused harmony export View_ConfirmationPopoverWindow_Host_0 */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ConfirmationPopoverWindowNgFactory; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__focus_directive__ = __webpack_require__(202);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__confirmationPopoverWindow_component__ = __webpack_require__(193);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__confirmationPopoverOptions_provider__ = __webpack_require__(178);\n/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \n\n\n\n\n\nvar styles_ConfirmationPopoverWindow = [\".popover[_ngcontent-%COMP%] {\\n      display: block;\\n    }\\n    .bs-popover-top[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-popover-bottom[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%] {\\n      left: 50%;\\n    }\\n    .bs-popover-left[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-popover-right[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%] {\\n      top: 50%;\\n    }\\n    .btn[_ngcontent-%COMP%] {\\n      transition: none;\\n    }\"];\nvar RenderType_ConfirmationPopoverWindow = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵcrt\"]({ encapsulation: 0, styles: styles_ConfirmationPopoverWindow, data: {} });\n\nfunction View_ConfirmationPopoverWindow_2(_l) { return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵvid\"](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](0, 0, null, null, 7, \"div\", [[\"class\", \"col-xs-6 col-6\"]], null, null, null, null, null)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](1, 278528, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"j\" /* NgClass */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"IterableDiffers\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"KeyValueDiffers\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"]], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵpod\"](2, { \"col-xs-offset-3 col-offset-3\": 0 }), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n              \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](4, 0, null, null, 2, \"button\", [[\"type\", \"button\"]], [[8, \"className\", 0], [8, \"innerHTML\", 1]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (_v.parent.context.options.onConfirm({ clickEvent: $event }) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](5, 540672, null, 0, __WEBPACK_IMPORTED_MODULE_2__focus_directive__[\"a\" /* Focus */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]], { mwlFocus: [0, \"mwlFocus\"] }, null), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n              \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n            \"]))], function (_ck, _v) { var currVal_0 = \"col-xs-6 col-6\"; var currVal_1 = _ck(_v, 2, 0, _v.parent.context.options.hideCancelButton); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_4 = (_v.parent.context.options.focusButton === \"confirm\"); _ck(_v, 5, 0, currVal_4); }, function (_ck, _v) { var currVal_2 = (\"btn btn-block btn-\" + _v.parent.context.options.confirmButtonType); var currVal_3 = _v.parent.context.options.confirmText; _ck(_v, 4, 0, currVal_2, currVal_3); }); }\nfunction View_ConfirmationPopoverWindow_3(_l) { return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵvid\"](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](0, 0, null, null, 7, \"div\", [[\"class\", \"col-xs-6 col-6\"]], null, null, null, null, null)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](1, 278528, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"j\" /* NgClass */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"IterableDiffers\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"KeyValueDiffers\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"]], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵpod\"](2, { \"col-xs-offset-3 col-offset-3\": 0 }), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n              \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](4, 0, null, null, 2, \"button\", [[\"type\", \"button\"]], [[8, \"className\", 0], [8, \"innerHTML\", 1]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (_v.parent.context.options.onCancel({ clickEvent: $event }) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](5, 540672, null, 0, __WEBPACK_IMPORTED_MODULE_2__focus_directive__[\"a\" /* Focus */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"]], { mwlFocus: [0, \"mwlFocus\"] }, null), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n              \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n            \"]))], function (_ck, _v) { var currVal_0 = \"col-xs-6 col-6\"; var currVal_1 = _ck(_v, 2, 0, _v.parent.context.options.hideConfirmButton); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_4 = (_v.parent.context.options.focusButton === \"cancel\"); _ck(_v, 5, 0, currVal_4); }, function (_ck, _v) { var currVal_2 = (\"btn btn-block btn-\" + _v.parent.context.options.cancelButtonType); var currVal_3 = _v.parent.context.options.cancelText; _ck(_v, 4, 0, currVal_2, currVal_3); }); }\nfunction View_ConfirmationPopoverWindow_1(_l) { return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵvid\"](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n      \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](1, 0, null, null, 21, \"div\", [], null, null, null, null, null)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](2, 278528, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"j\" /* NgClass */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"IterableDiffers\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"KeyValueDiffers\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"]], { ngClass: [0, \"ngClass\"] }, null), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵpad\"](3, 5), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n        \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](5, 0, null, null, 0, \"div\", [[\"class\", \"popover-arrow arrow\"]], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n        \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](7, 0, null, null, 0, \"h3\", [[\"class\", \"popover-title popover-header\"]], [[8, \"innerHTML\", 1]], null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n        \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](9, 0, null, null, 12, \"div\", [[\"class\", \"popover-content popover-body\"]], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](11, 0, null, null, 0, \"p\", [], [[8, \"innerHTML\", 1]], null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](13, 0, null, null, 7, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n            \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵand\"](16777216, null, null, 1, null, View_ConfirmationPopoverWindow_2)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](16, 16384, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"l\" /* NgIf */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"]], { ngIf: [0, \"ngIf\"] }, null), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n            \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵand\"](16777216, null, null, 1, null, View_ConfirmationPopoverWindow_3)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](19, 16384, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"l\" /* NgIf */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"TemplateRef\"]], { ngIf: [0, \"ngIf\"] }, null), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n        \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n      \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n    \"]))], function (_ck, _v) { var currVal_0 = _ck(_v, 3, 0, \"popover\", _v.context.options.placement, (\"popover-\" + _v.context.options.placement), (\"bs-popover-\" + _v.context.options.placement), _v.context.options.popoverClass); _ck(_v, 2, 0, currVal_0); var currVal_3 = !_v.context.options.hideConfirmButton; _ck(_v, 16, 0, currVal_3); var currVal_4 = !_v.context.options.hideCancelButton; _ck(_v, 19, 0, currVal_4); }, function (_ck, _v) { var currVal_1 = _v.context.options.title; _ck(_v, 7, 0, currVal_1); var currVal_2 = _v.context.options.message; _ck(_v, 11, 0, currVal_2); }); }\nfunction View_ConfirmationPopoverWindow_4(_l) { return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵvid\"](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n    \"]))], null, null); }\nfunction View_ConfirmationPopoverWindow_0(_l) { return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵvid\"](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n    \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵand\"](0, [[\"defaultTemplate\", 2]], null, 0, null, View_ConfirmationPopoverWindow_1)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n    \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵand\"](16777216, null, null, 2, null, View_ConfirmationPopoverWindow_4)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](4, 540672, null, 0, __WEBPACK_IMPORTED_MODULE_1__angular_common__[\"q\" /* NgTemplateOutlet */], [__WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"]], { ngTemplateOutletContext: [0, \"ngTemplateOutletContext\"], ngTemplateOutlet: [1, \"ngTemplateOutlet\"] }, null), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵpod\"](5, { options: 0 }), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n  \"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 5, 0, _co.options); var currVal_1 = (_co.options.customTemplate || __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵnov\"](_v, 1)); _ck(_v, 4, 0, currVal_0, currVal_1); }, null); }\nfunction View_ConfirmationPopoverWindow_Host_0(_l) { return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵvid\"](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_ConfirmationPopoverWindow_0, RenderType_ConfirmationPopoverWindow)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](1, 4243456, null, 0, __WEBPACK_IMPORTED_MODULE_3__confirmationPopoverWindow_component__[\"a\" /* ConfirmationPopoverWindow */], [__WEBPACK_IMPORTED_MODULE_4__confirmationPopoverOptions_provider__[\"b\" /* ConfirmationPopoverWindowOptions */]], null, null)], null, null); }\nvar ConfirmationPopoverWindowNgFactory = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵccf\"](\"ng-component\", __WEBPACK_IMPORTED_MODULE_3__confirmationPopoverWindow_component__[\"a\" /* ConfirmationPopoverWindow */], View_ConfirmationPopoverWindow_Host_0, {}, {}, []);\n\n//# sourceMappingURL=confirmationPopoverWindow.component.ngfactory.js.map\n\n/***/ }),\n\n/***/ 189:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar mergeMap_1 = __webpack_require__(91);\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n/***/ }),\n\n/***/ 190:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return USER_OPTIONS; });\n/* harmony export (immutable) */ __webpack_exports__[\"c\"] = optionsFactory;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ConfirmationPopoverModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_common__ = __webpack_require__(18);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_positioning__ = __webpack_require__(179);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__confirmationPopover_directive__ = __webpack_require__(204);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__confirmationPopoverWindow_component__ = __webpack_require__(193);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__focus_directive__ = __webpack_require__(202);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__confirmationPopoverOptions_provider__ = __webpack_require__(178);\n\n\n\n\n\n\n\nvar USER_OPTIONS = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"InjectionToken\"]('confirmation popover user options');\nfunction optionsFactory(userOptions) {\n    var options = new __WEBPACK_IMPORTED_MODULE_6__confirmationPopoverOptions_provider__[\"a\" /* ConfirmationPopoverOptions */]();\n    Object.assign(options, userOptions);\n    return options;\n}\nvar ConfirmationPopoverModule = (function () {\n    function ConfirmationPopoverModule() {\n    }\n    ConfirmationPopoverModule.forRoot = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: ConfirmationPopoverModule,\n            providers: [{\n                    provide: USER_OPTIONS,\n                    useValue: options\n                }, {\n                    provide: __WEBPACK_IMPORTED_MODULE_6__confirmationPopoverOptions_provider__[\"a\" /* ConfirmationPopoverOptions */],\n                    useFactory: optionsFactory,\n                    deps: [USER_OPTIONS]\n                }, __WEBPACK_IMPORTED_MODULE_2_positioning__[\"a\" /* Positioning */]]\n        };\n    };\n    ConfirmationPopoverModule.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"NgModule\"], args: [{\n                    declarations: [__WEBPACK_IMPORTED_MODULE_3__confirmationPopover_directive__[\"a\" /* ConfirmationPopover */], __WEBPACK_IMPORTED_MODULE_4__confirmationPopoverWindow_component__[\"a\" /* ConfirmationPopoverWindow */], __WEBPACK_IMPORTED_MODULE_5__focus_directive__[\"a\" /* Focus */]],\n                    imports: [__WEBPACK_IMPORTED_MODULE_1__angular_common__[\"c\" /* CommonModule */]],\n                    exports: [__WEBPACK_IMPORTED_MODULE_3__confirmationPopover_directive__[\"a\" /* ConfirmationPopover */], __WEBPACK_IMPORTED_MODULE_5__focus_directive__[\"a\" /* Focus */]],\n                    entryComponents: [__WEBPACK_IMPORTED_MODULE_4__confirmationPopoverWindow_component__[\"a\" /* ConfirmationPopoverWindow */]]\n                },] },\n    ];\n    /** @nocollapse */\n    ConfirmationPopoverModule.ctorParameters = function () { return []; };\n    return ConfirmationPopoverModule;\n}());\n\n//# sourceMappingURL=confirmationPopover.module.js.map\n\n/***/ }),\n\n/***/ 191:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = asyncCacheOptionsFactory;\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SharedModule; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_angular_async_cache__ = __webpack_require__(207);\n\nfunction asyncCacheOptionsFactory() {\n    return new __WEBPACK_IMPORTED_MODULE_0_angular_async_cache__[\"a\" /* AsyncCacheOptions */]({\n        driver: new __WEBPACK_IMPORTED_MODULE_0_angular_async_cache__[\"b\" /* LocalStorageDriver */](),\n        fromCacheAndReplay: true\n    });\n}\nvar SharedModule = /** @class */ (function () {\n    function SharedModule() {\n    }\n    return SharedModule;\n}());\n\n\n\n/***/ }),\n\n/***/ 193:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ConfirmationPopoverWindow; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__confirmationPopoverOptions_provider__ = __webpack_require__(178);\n\n\n/**\n * @private\n */\nvar ConfirmationPopoverWindow = (function () {\n    function ConfirmationPopoverWindow(options) {\n        this.options = options;\n    }\n    ConfirmationPopoverWindow.prototype.ngAfterViewInit = function () {\n        this.options.onAfterViewInit();\n    };\n    ConfirmationPopoverWindow.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Component\"], args: [{\n                    styles: [\"\\n    .popover {\\n      display: block;\\n    }\\n    .bs-popover-top .arrow, .bs-popover-bottom .arrow {\\n      left: 50%;\\n    }\\n    .bs-popover-left .arrow, .bs-popover-right .arrow {\\n      top: 50%;\\n    }\\n    .btn {\\n      transition: none;\\n    }\\n  \"],\n                    template: \"\\n    <ng-template #defaultTemplate let-options=\\\"options\\\">\\n      <div [ngClass]=\\\"[\\n        'popover',\\n        options.placement,\\n        'popover-' + options.placement,\\n        'bs-popover-' + options.placement,\\n        options.popoverClass\\n      ]\\\">\\n        <div class=\\\"popover-arrow arrow\\\"></div>\\n        <h3 class=\\\"popover-title popover-header\\\" [innerHTML]=\\\"options.title\\\"></h3>\\n        <div class=\\\"popover-content popover-body\\\">\\n          <p [innerHTML]=\\\"options.message\\\"></p>\\n          <div class=\\\"row\\\">\\n            <div\\n              class=\\\"col-xs-6 col-6\\\"\\n              [ngClass]=\\\"{'col-xs-offset-3 col-offset-3': options.hideCancelButton}\\\"\\n              *ngIf=\\\"!options.hideConfirmButton\\\">\\n              <button\\n                type=\\\"button\\\"\\n                [mwlFocus]=\\\"options.focusButton === 'confirm'\\\"\\n                [class]=\\\"'btn btn-block btn-' + options.confirmButtonType\\\"\\n                (click)=\\\"options.onConfirm({clickEvent: $event})\\\"\\n                [innerHtml]=\\\"options.confirmText\\\">\\n              </button>\\n            </div>\\n            <div\\n              class=\\\"col-xs-6 col-6\\\"\\n              [ngClass]=\\\"{'col-xs-offset-3 col-offset-3': options.hideConfirmButton}\\\"\\n              *ngIf=\\\"!options.hideCancelButton\\\">\\n              <button\\n                type=\\\"button\\\"\\n                [mwlFocus]=\\\"options.focusButton === 'cancel'\\\"\\n                [class]=\\\"'btn btn-block btn-' + options.cancelButtonType\\\"\\n                (click)=\\\"options.onCancel({clickEvent: $event})\\\"\\n                [innerHtml]=\\\"options.cancelText\\\">\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"options.customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{options: options}\\\">\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    ConfirmationPopoverWindow.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_1__confirmationPopoverOptions_provider__[\"b\" /* ConfirmationPopoverWindowOptions */], },\n    ]; };\n    return ConfirmationPopoverWindow;\n}());\n\n//# sourceMappingURL=confirmationPopoverWindow.component.js.map\n\n/***/ }),\n\n/***/ 194:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return SortableHeaderComponent; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n\nvar SortableHeaderComponent = /** @class */ (function () {\n    function SortableHeaderComponent() {\n    }\n    SortableHeaderComponent.prototype.headerClicked = function () {\n        if (this.sort.field === this.fieldName) {\n            if (this.sort.desc === true) {\n                this.sort.desc = false;\n                this.sort.field = null;\n            }\n            else {\n                this.sort.desc = true;\n            }\n        }\n        else {\n            this.sort.field = this.fieldName;\n            this.sort.desc = false;\n        }\n    };\n    return SortableHeaderComponent;\n}());\n\n\n\n/***/ }),\n\n/***/ 195:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ShowListComponent; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__tv_maze_provider__ = __webpack_require__(176);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__local_storage_provider__ = __webpack_require__(177);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__ = __webpack_require__(83);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_rxjs_add_operator_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_forkJoin__ = __webpack_require__(209);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_forkJoin___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_rxjs_add_observable_forkJoin__);\n\n\n\n\n\n\nvar ShowListComponent = /** @class */ (function () {\n    function ShowListComponent(localStorage, tvMaze) {\n        this.localStorage = localStorage;\n        this.tvMaze = tvMaze;\n        this.unsubscribe = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        this.sort = {\n            field: null,\n            desc: false\n        };\n        this.subscribedShows = localStorage.getItem('subscribedShows', []);\n    }\n    ShowListComponent.prototype.subscribe = function (show) {\n        this.subscribedShows.push(show);\n        this.localStorage.setItem('subscribedShows', this.subscribedShows);\n    };\n    ShowListComponent.prototype.isSubscribed = function (show) {\n        return this.subscribedShows.some(function (subscribedShow) { return subscribedShow.id === show.id; });\n    };\n    ShowListComponent.prototype.unsubscribeFromShow = function (show) {\n        this.subscribedShows = this.subscribedShows.filter(function (subscribedShow) { return subscribedShow.id !== show.id; });\n        this.localStorage.setItem('subscribedShows', this.subscribedShows);\n        this.unsubscribe.emit(show);\n    };\n    ShowListComponent.prototype.ngOnChanges = function (changeRecord) {\n        var _this = this;\n        if (changeRecord.shows && this.shows) {\n            var episodeRequests = this.shows.map(function (show) { return _this.tvMaze.getEpisodes(show.id); });\n            __WEBPACK_IMPORTED_MODULE_3_rxjs_Observable__[\"Observable\"].forkJoin(episodeRequests).subscribe(function (showEpisodes) {\n                showEpisodes.forEach(function (episodes, showIndex) {\n                    _this.shows[showIndex].nextEpisode = episodes.find(function (episode) {\n                        return new Date(episode.airstamp).getTime() > Date.now();\n                    });\n                });\n            });\n        }\n    };\n    return ShowListComponent;\n}());\n\n\n\n/***/ }),\n\n/***/ 202:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Focus; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n\n/**\n * A helper directive to focus buttons. You will only need this if using a custom template\n */\nvar Focus = (function () {\n    function Focus(elm) {\n        this.elm = elm;\n    }\n    Focus.prototype.ngOnChanges = function (changes) {\n        if (changes.mwlFocus && this.mwlFocus === true) {\n            this.elm.nativeElement.focus();\n        }\n    };\n    Focus.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[mwlFocus]'\n                },] },\n    ];\n    /** @nocollapse */\n    Focus.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n    ]; };\n    Focus.propDecorators = {\n        'mwlFocus': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n    };\n    return Focus;\n}());\n\n//# sourceMappingURL=focus.directive.js.map\n\n/***/ }),\n\n/***/ 203:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXTERNAL MODULE: ./node_modules/@angular/core/esm5/core.js\nvar core = __webpack_require__(6);\n\n// EXTERNAL MODULE: ./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopover.directive.js\nvar confirmationPopover_directive = __webpack_require__(204);\n\n// EXTERNAL MODULE: ./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopoverOptions.provider.js\nvar confirmationPopoverOptions_provider = __webpack_require__(178);\n\n// EXTERNAL MODULE: ./node_modules/positioning/dist/positioning.js\nvar positioning = __webpack_require__(179);\n\n// EXTERNAL MODULE: ./node_modules/@angular/platform-browser/esm5/platform-browser.js\nvar platform_browser = __webpack_require__(19);\n\n// EXTERNAL MODULE: ./node_modules/@angular/router/esm5/router.js\nvar router = __webpack_require__(27);\n\n// EXTERNAL MODULE: ./src/app/modules/shared/order-by.pipe.ts\nvar order_by_pipe = __webpack_require__(205);\n\n// CONCATENATED MODULE: ./src/app/modules/shared/replace.pipe.ts\n\nvar Replace = /** @class */ (function () {\n    function Replace() {\n    }\n    Replace.prototype.transform = function (input, find, replaceWith) {\n        if (input === void 0) { input = ''; }\n        if (find === void 0) { find = ''; }\n        if (replaceWith === void 0) { replaceWith = ''; }\n        return input.replace(find, replaceWith);\n    };\n    return Replace;\n}());\n\n\n// EXTERNAL MODULE: ./node_modules/@angular/common/esm5/common.js\nvar common = __webpack_require__(18);\n\n// EXTERNAL MODULE: ./src/app/modules/shared/sortable-header.directive.ngfactory.js\nvar sortable_header_directive_ngfactory = __webpack_require__(206);\n\n// EXTERNAL MODULE: ./src/app/modules/shared/sortable-header.directive.ts\nvar sortable_header_directive = __webpack_require__(194);\n\n// EXTERNAL MODULE: ./src/app/modules/shared/show-list.component.ts\nvar show_list_component = __webpack_require__(195);\n\n// EXTERNAL MODULE: ./src/app/modules/shared/local-storage.provider.ts\nvar local_storage_provider = __webpack_require__(177);\n\n// EXTERNAL MODULE: ./src/app/modules/shared/tv-maze.provider.ts\nvar tv_maze_provider = __webpack_require__(176);\n\n// CONCATENATED MODULE: ./src/app/modules/shared/show-list.component.ngfactory.js\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RenderType_ShowListComponent; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = View_ShowListComponent_0;\n/* unused harmony export View_ShowListComponent_Host_0 */\n/* unused harmony export ShowListComponentNgFactory */\n/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar styles_ShowListComponent = [];\nvar RenderType_ShowListComponent = core[\"ɵcrt\"]({ encapsulation: 2, styles: styles_ShowListComponent, data: {} });\n\nfunction View_ShowListComponent_1(_l) { return core[\"ɵvid\"](0, [(_l()(), core[\"ɵeld\"](0, 0, null, null, 46, \"tr\", [], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](2, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](3, null, [\"\", \"\"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](5, 0, null, null, 4, \"td\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n            \"])), (_l()(), core[\"ɵeld\"](7, 0, null, null, 1, \"img\", [[\"width\", \"60\"]], [[8, \"src\", 4]], null, null, null, null)), core[\"ɵppd\"](8, 3), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](11, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](12, null, [\"\", \"\"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](14, 0, null, null, 0, \"td\", [], [[8, \"innerHTML\", 1]], null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](16, 0, null, null, 4, \"td\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n            \"])), (_l()(), core[\"ɵeld\"](18, 0, null, null, 1, \"span\", [[\"class\", \"badge\"]], [[2, \"badge-success\", null], [2, \"badge-danger\", null]], null, null, null, null)), (_l()(), core[\"ɵted\"](19, null, [\"\\n               \", \"\\n             \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](22, 0, null, null, 8, \"td\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n            \"])), (_l()(), core[\"ɵeld\"](24, 0, null, null, 2, \"span\", [], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), core[\"ɵted\"](25, null, [\"\", \"\"])), core[\"ɵppd\"](26, 2), (_l()(), core[\"ɵted\"](-1, null, [\"\\n            \"])), (_l()(), core[\"ɵeld\"](28, 0, null, null, 1, \"span\", [], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"Unknown\"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](32, 0, null, null, 13, \"td\", [[\"style\", \"width: 270px\"]], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n            \"])), (_l()(), core[\"ɵeld\"](34, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-success\"]], [[8, \"hidden\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.subscribe(_v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n              Subscribe\\n            \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n            \"])), (_l()(), core[\"ɵeld\"](37, 16777216, null, null, 2, \"button\", [[\"class\", \"btn btn-danger\"], [\"message\", \"Are you sure you would like to unsubscribe from this show?\"], [\"mwlConfirmationPopover\", \"\"], [\"title\", \"Unsubscribe\"]], [[8, \"hidden\", 0]], [[null, \"confirm\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (core[\"ɵnov\"](_v, 38).togglePopover() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"confirm\" === en)) {\n        var pd_1 = (_co.unsubscribeFromShow(_v.context.$implicit) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), core[\"ɵdid\"](38, 737280, null, 0, confirmationPopover_directive[\"a\" /* ConfirmationPopover */], [core[\"ViewContainerRef\"], core[\"ElementRef\"], confirmationPopoverOptions_provider[\"a\" /* ConfirmationPopoverOptions */], core[\"ComponentFactoryResolver\"], positioning[\"a\" /* Positioning */], core[\"Renderer2\"], platform_browser[\"b\" /* DOCUMENT */]], { title: [0, \"title\"], message: [1, \"message\"] }, { confirm: \"confirm\" }), (_l()(), core[\"ɵted\"](-1, null, [\"\\n              Unsubscribe\\n            \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n            \"])), (_l()(), core[\"ɵeld\"](41, 0, null, null, 3, \"button\", [[\"class\", \"btn btn-info\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (core[\"ɵnov\"](_v, 42).onClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), core[\"ɵdid\"](42, 16384, null, 0, router[\"m\" /* RouterLink */], [router[\"l\" /* Router */], router[\"a\" /* ActivatedRoute */], [8, null], core[\"Renderer2\"], core[\"ElementRef\"]], { routerLink: [0, \"routerLink\"] }, null), core[\"ɵpad\"](43, 2), (_l()(), core[\"ɵted\"](-1, null, [\"\\n              Episodes\\n            \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n        \"]))], function (_ck, _v) { var currVal_13 = \"Unsubscribe\"; var currVal_14 = \"Are you sure you would like to unsubscribe from this show?\"; _ck(_v, 38, 0, currVal_13, currVal_14); var currVal_15 = _ck(_v, 43, 0, \"/episodes\", _v.context.$implicit.id); _ck(_v, 42, 0, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = !((_v.context.$implicit.image == null) ? null : _v.context.$implicit.image.medium); _ck(_v, 0, 0, currVal_0); var currVal_1 = _v.context.$implicit.name; _ck(_v, 3, 0, currVal_1); var currVal_2 = core[\"ɵunv\"](_v, 7, 0, _ck(_v, 8, 0, core[\"ɵnov\"](_v.parent, 1), ((_v.context.$implicit.image == null) ? null : _v.context.$implicit.image.medium), \"http://\", \"https://\")); _ck(_v, 7, 0, currVal_2); var currVal_3 = ((_v.context.$implicit.network == null) ? null : _v.context.$implicit.network.name); _ck(_v, 12, 0, currVal_3); var currVal_4 = _v.context.$implicit.summary; _ck(_v, 14, 0, currVal_4); var currVal_5 = (_v.context.$implicit.status === \"Running\"); var currVal_6 = (_v.context.$implicit.status !== \"Running\"); _ck(_v, 18, 0, currVal_5, currVal_6); var currVal_7 = _v.context.$implicit.status; _ck(_v, 19, 0, currVal_7); var currVal_8 = !((_v.context.$implicit == null) ? null : ((_v.context.$implicit.nextEpisode == null) ? null : _v.context.$implicit.nextEpisode.airstamp)); _ck(_v, 24, 0, currVal_8); var currVal_9 = core[\"ɵunv\"](_v, 25, 0, _ck(_v, 26, 0, core[\"ɵnov\"](_v.parent, 2), ((_v.context.$implicit == null) ? null : ((_v.context.$implicit.nextEpisode == null) ? null : _v.context.$implicit.nextEpisode.airstamp)), \"fullDate\")); _ck(_v, 25, 0, currVal_9); var currVal_10 = ((_v.context.$implicit == null) ? null : ((_v.context.$implicit.nextEpisode == null) ? null : _v.context.$implicit.nextEpisode.airstamp)); _ck(_v, 28, 0, currVal_10); var currVal_11 = _co.isSubscribed(_v.context.$implicit); _ck(_v, 34, 0, currVal_11); var currVal_12 = !_co.isSubscribed(_v.context.$implicit); _ck(_v, 37, 0, currVal_12); }); }\nfunction View_ShowListComponent_0(_l) { return core[\"ɵvid\"](0, [core[\"ɵpid\"](0, order_by_pipe[\"a\" /* OrderBy */], []), core[\"ɵpid\"](0, Replace, []), core[\"ɵpid\"](0, common[\"e\" /* DatePipe */], [core[\"LOCALE_ID\"]]), (_l()(), core[\"ɵted\"](-1, null, [\"\\n    \"])), (_l()(), core[\"ɵeld\"](4, 0, null, null, 38, \"table\", [[\"class\", \"table\"]], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n      \"])), (_l()(), core[\"ɵeld\"](6, 0, null, null, 28, \"thead\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n        \"])), (_l()(), core[\"ɵeld\"](8, 0, null, null, 25, \"tr\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](10, 0, null, null, 2, \"th\", [[\"mwlSortableHeader\", \"name\"]], null, null, null, sortable_header_directive_ngfactory[\"b\" /* View_SortableHeaderComponent_0 */], sortable_header_directive_ngfactory[\"a\" /* RenderType_SortableHeaderComponent */])), core[\"ɵdid\"](11, 49152, null, 0, sortable_header_directive[\"a\" /* SortableHeaderComponent */], [], { fieldName: [0, \"fieldName\"], sort: [1, \"sort\"] }, null), (_l()(), core[\"ɵted\"](-1, 0, [\"Name\"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](14, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"Image\"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](17, 0, null, null, 2, \"th\", [[\"mwlSortableHeader\", \"network.name\"]], null, null, null, sortable_header_directive_ngfactory[\"b\" /* View_SortableHeaderComponent_0 */], sortable_header_directive_ngfactory[\"a\" /* RenderType_SortableHeaderComponent */])), core[\"ɵdid\"](18, 49152, null, 0, sortable_header_directive[\"a\" /* SortableHeaderComponent */], [], { fieldName: [0, \"fieldName\"], sort: [1, \"sort\"] }, null), (_l()(), core[\"ɵted\"](-1, 0, [\"Network\"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](21, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"Summary\"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](24, 0, null, null, 2, \"th\", [[\"mwlSortableHeader\", \"status\"]], null, null, null, sortable_header_directive_ngfactory[\"b\" /* View_SortableHeaderComponent_0 */], sortable_header_directive_ngfactory[\"a\" /* RenderType_SortableHeaderComponent */])), core[\"ɵdid\"](25, 49152, null, 0, sortable_header_directive[\"a\" /* SortableHeaderComponent */], [], { fieldName: [0, \"fieldName\"], sort: [1, \"sort\"] }, null), (_l()(), core[\"ɵted\"](-1, 0, [\"Status\"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](28, 0, null, null, 2, \"th\", [[\"mwlSortableHeader\", \"nextEpisode.airstamp\"]], null, null, null, sortable_header_directive_ngfactory[\"b\" /* View_SortableHeaderComponent_0 */], sortable_header_directive_ngfactory[\"a\" /* RenderType_SortableHeaderComponent */])), core[\"ɵdid\"](29, 49152, null, 0, sortable_header_directive[\"a\" /* SortableHeaderComponent */], [], { fieldName: [0, \"fieldName\"], sort: [1, \"sort\"] }, null), (_l()(), core[\"ɵted\"](-1, 0, [\"Next episode\"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n          \"])), (_l()(), core[\"ɵeld\"](32, 0, null, null, 0, \"th\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n        \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n      \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n      \"])), (_l()(), core[\"ɵeld\"](36, 0, null, null, 5, \"tbody\", [], null, null, null, null, null)), (_l()(), core[\"ɵted\"](-1, null, [\"\\n        \"])), (_l()(), core[\"ɵand\"](16777216, null, null, 2, null, View_ShowListComponent_1)), core[\"ɵdid\"](39, 802816, null, 0, common[\"k\" /* NgForOf */], [core[\"ViewContainerRef\"], core[\"TemplateRef\"], core[\"IterableDiffers\"]], { ngForOf: [0, \"ngForOf\"] }, null), core[\"ɵppd\"](40, 3), (_l()(), core[\"ɵted\"](-1, null, [\"\\n      \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n    \"])), (_l()(), core[\"ɵted\"](-1, null, [\"\\n  \"]))], function (_ck, _v) { var _co = _v.component; var currVal_1 = \"name\"; var currVal_2 = _co.sort; _ck(_v, 11, 0, currVal_1, currVal_2); var currVal_3 = \"network.name\"; var currVal_4 = _co.sort; _ck(_v, 18, 0, currVal_3, currVal_4); var currVal_5 = \"status\"; var currVal_6 = _co.sort; _ck(_v, 25, 0, currVal_5, currVal_6); var currVal_7 = \"nextEpisode.airstamp\"; var currVal_8 = _co.sort; _ck(_v, 29, 0, currVal_7, currVal_8); var currVal_9 = core[\"ɵunv\"](_v, 39, 0, _ck(_v, 40, 0, core[\"ɵnov\"](_v, 0), _co.shows, _co.sort.field, _co.sort.desc)); _ck(_v, 39, 0, currVal_9); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (!_co.shows || (_co.shows.length === 0)); _ck(_v, 4, 0, currVal_0); }); }\nfunction View_ShowListComponent_Host_0(_l) { return core[\"ɵvid\"](0, [(_l()(), core[\"ɵeld\"](0, 0, null, null, 1, \"mwl-show-list\", [], null, null, null, View_ShowListComponent_0, RenderType_ShowListComponent)), core[\"ɵdid\"](1, 573440, null, 0, show_list_component[\"a\" /* ShowListComponent */], [local_storage_provider[\"a\" /* LocalStorage */], tv_maze_provider[\"a\" /* TVMaze */]], null, null)], null, null); }\nvar ShowListComponentNgFactory = core[\"ɵccf\"](\"mwl-show-list\", show_list_component[\"a\" /* ShowListComponent */], View_ShowListComponent_Host_0, { shows: \"shows\" }, { unsubscribe: \"unsubscribe\" }, []);\n\n//# sourceMappingURL=show-list.component.ngfactory.js.map\n\n/***/ }),\n\n/***/ 204:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return ConfirmationPopover; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__ = __webpack_require__(19);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__confirmationPopoverWindow_component__ = __webpack_require__(193);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__confirmationPopoverOptions_provider__ = __webpack_require__(178);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_positioning__ = __webpack_require__(179);\n\n\n\n\n\n/**\n * All properties can be set on the directive as attributes like so (use `ConfirmationPopoverModule.forRoot()` to configure them globally):\n * ```html\n * <button\n *  class=\"btn btn-default\"\n *  mwlConfirmationPopover\n *  [title]=\"title\"\n *  [message]=\"message\"\n *  placement=\"left\"\n *  (confirm)=\"confirmClicked = true\"\n *  (cancel)=\"cancelClicked = true\"\n *  [(isOpen)]=\"isOpen\">\n *   Show confirm popover!\n * </button>\n * ```\n */\nvar ConfirmationPopover = (function () {\n    /**\n     * @private\n     */\n    function ConfirmationPopover(viewContainerRef, elm, defaultOptions, cfr, position, renderer, document //tslint:disable-line\n    ) {\n        this.viewContainerRef = viewContainerRef;\n        this.elm = elm;\n        this.defaultOptions = defaultOptions;\n        this.cfr = cfr;\n        this.position = position;\n        this.renderer = renderer;\n        this.document = document; //tslint:disable-line\n        /**\n         * Whether to disable showing the popover. Default `false`.\n         */\n        this.isDisabled = false;\n        /**\n         * Will open or show the popover when changed.\n         * Can be sugared with `isOpenChange` to emulate 2-way binding like so `[(isOpen)]=\"isOpen\"`\n         */\n        this.isOpen = false;\n        /**\n         * Will emit when the popover is opened or closed\n         */\n        this.isOpenChange = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"](true);\n        /**\n         * An expression that is called when the confirm button is clicked.\n         */\n        this.confirm = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * An expression that is called when the cancel button is clicked.\n         */\n        this.cancel = new __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"EventEmitter\"]();\n        /**\n         * @private\n         */\n        this.popover = null;\n        /**\n         * @private\n         */\n        this.eventListeners = [];\n    }\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.ngOnInit = function () {\n        this.isOpenChange.emit(false);\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.ngOnChanges = function (changes) {\n        if (changes.isOpen) {\n            if (changes.isOpen.currentValue === true) {\n                this.showPopover();\n            }\n            else {\n                this.hidePopover();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.ngOnDestroy = function () {\n        this.hidePopover();\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.onConfirm = function (event) {\n        this.confirm.emit(event);\n        this.hidePopover();\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.onCancel = function (event) {\n        this.cancel.emit(event);\n        this.hidePopover();\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.togglePopover = function () {\n        if (!this.popover) {\n            this.showPopover();\n        }\n        else {\n            this.hidePopover();\n        }\n    };\n    ConfirmationPopover.prototype.onDocumentClick = function (event) {\n        if (this.popover && !this.elm.nativeElement.contains(event.target) && !this.popover.location.nativeElement.contains(event.target)) {\n            this.hidePopover();\n        }\n    };\n    ConfirmationPopover.prototype.showPopover = function () {\n        var _this = this;\n        if (!this.popover && !this.isDisabled) {\n            this.eventListeners = [\n                this.renderer.listen('document', 'click', function (event) { return _this.onDocumentClick(event); }),\n                this.renderer.listen('document', 'touchend', function (event) { return _this.onDocumentClick(event); }),\n                this.renderer.listen('window', 'resize', function () { return _this.positionPopover(); })\n            ];\n            var options_1 = new __WEBPACK_IMPORTED_MODULE_3__confirmationPopoverOptions_provider__[\"b\" /* ConfirmationPopoverWindowOptions */]();\n            Object.assign(options_1, this.defaultOptions, {\n                title: this.popoverTitle || this.title,\n                message: this.popoverMessage || this.message,\n                onConfirm: function (event) {\n                    _this.onConfirm(event);\n                },\n                onCancel: function (event) {\n                    _this.onCancel(event);\n                },\n                onAfterViewInit: function () {\n                    _this.positionPopover();\n                }\n            });\n            var optionalParams = [\n                'confirmText',\n                'cancelText',\n                'placement',\n                'confirmButtonType',\n                'cancelButtonType',\n                'focusButton',\n                'hideConfirmButton',\n                'hideCancelButton',\n                'popoverClass',\n                'appendToBody',\n                'customTemplate'\n            ];\n            optionalParams.forEach(function (param) {\n                if (typeof _this[param] !== 'undefined') {\n                    options_1[param] = _this[param];\n                }\n            });\n            var componentFactory = this.cfr.resolveComponentFactory(__WEBPACK_IMPORTED_MODULE_2__confirmationPopoverWindow_component__[\"a\" /* ConfirmationPopoverWindow */]);\n            var binding = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ReflectiveInjector\"].resolve([{\n                    provide: __WEBPACK_IMPORTED_MODULE_3__confirmationPopoverOptions_provider__[\"b\" /* ConfirmationPopoverWindowOptions */],\n                    useValue: options_1\n                }]);\n            var contextInjector = this.viewContainerRef.parentInjector;\n            var childInjector = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ReflectiveInjector\"].fromResolvedProviders(binding, contextInjector);\n            this.popover = this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, childInjector);\n            if (options_1.appendToBody) {\n                this.document.body.appendChild(this.popover.location.nativeElement);\n            }\n            this.isOpenChange.emit(true);\n        }\n    };\n    ConfirmationPopover.prototype.positionPopover = function () {\n        if (this.popover) {\n            var popoverElement = this.popover.location.nativeElement.children[0];\n            var popoverPosition = this.position.positionElements(this.elm.nativeElement, popoverElement, this.placement || this.defaultOptions.placement, this.appendToBody || this.defaultOptions.appendToBody);\n            this.renderer.setStyle(popoverElement, 'top', popoverPosition.top + \"px\");\n            this.renderer.setStyle(popoverElement, 'left', popoverPosition.left + \"px\");\n        }\n    };\n    ConfirmationPopover.prototype.hidePopover = function () {\n        if (this.popover) {\n            this.popover.destroy();\n            this.popover = null;\n            this.isOpenChange.emit(false);\n            this.eventListeners.forEach(function (fn) { return fn(); });\n            this.eventListeners = [];\n        }\n    };\n    ConfirmationPopover.decorators = [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Directive\"], args: [{\n                    selector: '[mwlConfirmationPopover]'\n                },] },\n    ];\n    /** @nocollapse */\n    ConfirmationPopover.ctorParameters = function () { return [\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ViewContainerRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ElementRef\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_3__confirmationPopoverOptions_provider__[\"a\" /* ConfirmationPopoverOptions */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ComponentFactoryResolver\"], },\n        { type: __WEBPACK_IMPORTED_MODULE_4_positioning__[\"a\" /* Positioning */], },\n        { type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Renderer2\"], },\n        { type: undefined, decorators: [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Inject\"], args: [__WEBPACK_IMPORTED_MODULE_1__angular_platform_browser__[\"b\" /* DOCUMENT */],] },] },\n    ]; };\n    ConfirmationPopover.propDecorators = {\n        'title': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'popoverTitle': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'message': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'popoverMessage': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'confirmText': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'cancelText': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'placement': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'confirmButtonType': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'cancelButtonType': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'focusButton': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'hideConfirmButton': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'hideCancelButton': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'isDisabled': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'isOpen': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'customTemplate': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'isOpenChange': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        'confirm': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        'cancel': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Output\"] },],\n        'popoverClass': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'appendToBody': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"Input\"] },],\n        'togglePopover': [{ type: __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"HostListener\"], args: ['click',] },],\n    };\n    return ConfirmationPopover;\n}());\n\n//# sourceMappingURL=confirmationPopover.directive.js.map\n\n/***/ }),\n\n/***/ 205:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return OrderBy; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_get__ = __webpack_require__(226);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_lodash_get___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_lodash_get__);\n\n\nvar OrderBy = /** @class */ (function () {\n    function OrderBy() {\n    }\n    OrderBy.prototype.transform = function (input, field, desc) {\n        if (desc === void 0) { desc = false; }\n        if (input && field) {\n            return Array.from(input).sort(function (a, b) {\n                if (__WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(a, field) < __WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(b, field)) {\n                    return desc ? 1 : -1;\n                }\n                if (__WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(a, field) > __WEBPACK_IMPORTED_MODULE_1_lodash_get___default()(b, field)) {\n                    return desc ? -1 : 1;\n                }\n                return 0;\n            });\n        }\n        return input;\n    };\n    return OrderBy;\n}());\n\n\n\n/***/ }),\n\n/***/ 206:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return RenderType_SortableHeaderComponent; });\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = View_SortableHeaderComponent_0;\n/* unused harmony export View_SortableHeaderComponent_Host_0 */\n/* unused harmony export SortableHeaderComponentNgFactory */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__angular_core__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__sortable_header_directive__ = __webpack_require__(194);\n/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \n\n\nvar styles_SortableHeaderComponent = [\"div[_ngcontent-%COMP%] {\\n      cursor: pointer;\\n      width: 80px;\\n    }\"];\nvar RenderType_SortableHeaderComponent = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵcrt\"]({ encapsulation: 0, styles: styles_SortableHeaderComponent, data: {} });\n\nfunction View_SortableHeaderComponent_0(_l) { return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵvid\"](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n    \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](1, 0, null, null, 9, \"div\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.headerClicked() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n      \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](3, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-sort\"]], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n      \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](5, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-sort-asc\"]], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n      \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](7, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-sort-desc\"]], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n      \"])), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵncd\"](null, 0), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n    \"])), (_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵted\"](-1, null, [\"\\n  \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.sort.field === _co.fieldName); _ck(_v, 3, 0, currVal_0); var currVal_1 = ((_co.sort.field !== _co.fieldName) || _co.sort.desc); _ck(_v, 5, 0, currVal_1); var currVal_2 = ((_co.sort.field !== _co.fieldName) || !_co.sort.desc); _ck(_v, 7, 0, currVal_2); }); }\nfunction View_SortableHeaderComponent_Host_0(_l) { return __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵvid\"](0, [(_l()(), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵeld\"](0, 0, null, null, 1, \"th\", [[\"mwlSortableHeader\", \"\"]], null, null, null, View_SortableHeaderComponent_0, RenderType_SortableHeaderComponent)), __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵdid\"](1, 49152, null, 0, __WEBPACK_IMPORTED_MODULE_1__sortable_header_directive__[\"a\" /* SortableHeaderComponent */], [], { fieldName: [0, \"fieldName\"] }, null)], function (_ck, _v) { var currVal_0 = \"\"; _ck(_v, 1, 0, currVal_0); }, null); }\nvar SortableHeaderComponentNgFactory = __WEBPACK_IMPORTED_MODULE_0__angular_core__[\"ɵccf\"](\"th[mwlSortableHeader]\", __WEBPACK_IMPORTED_MODULE_1__sortable_header_directive__[\"a\" /* SortableHeaderComponent */], View_SortableHeaderComponent_Host_0, { fieldName: \"mwlSortableHeader\", sort: \"sort\" }, {}, [\"*\"]);\n\n//# sourceMappingURL=sortable-header.directive.ngfactory.js.map\n\n/***/ }),\n\n/***/ 207:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__async_cache_module__ = __webpack_require__(186);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__drivers_local_storage_driver_provider__ = __webpack_require__(184);\n/* harmony namespace reexport (by used) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return __WEBPACK_IMPORTED_MODULE_1__drivers_local_storage_driver_provider__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__drivers_memory_driver_provider__ = __webpack_require__(181);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__async_cache_options_provider__ = __webpack_require__(182);\n/* harmony reexport (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return __WEBPACK_IMPORTED_MODULE_3__async_cache_options_provider__[\"a\"]; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__async_cache_provider__ = __webpack_require__(180);\n/* unused harmony namespace reexport */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__cached_http_provider__ = __webpack_require__(185);\n/* unused harmony namespace reexport */\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n/***/ }),\n\n/***/ 208:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar merge_1 = __webpack_require__(84);\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n/***/ }),\n\n/***/ 209:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar forkJoin_1 = __webpack_require__(210);\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n/***/ }),\n\n/***/ 210:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar ForkJoinObservable_1 = __webpack_require__(232);\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map\n\n/***/ }),\n\n/***/ 226:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(28)))\n\n/***/ }),\n\n/***/ 227:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar fromPromise_1 = __webpack_require__(85);\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n/***/ }),\n\n/***/ 228:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar Observable_1 = __webpack_require__(0);\nvar of_1 = __webpack_require__(55);\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n/***/ }),\n\n/***/ 229:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(230);\n\n\n/***/ }),\n\n/***/ 230:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ponyfill = __webpack_require__(231);\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar root = undefined; /* global window */\n\nif (typeof global !== 'undefined') {\n\troot = global;\n} else if (typeof window !== 'undefined') {\n\troot = window;\n}\n\nvar result = (0, _ponyfill2.default)(root);\nexports.default = result;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(28)))\n\n/***/ }),\n\n/***/ 231:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n/***/ }),\n\n/***/ 232:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = __webpack_require__(0);\nvar EmptyObservable_1 = __webpack_require__(29);\nvar isArray_1 = __webpack_require__(54);\nvar subscribeToResult_1 = __webpack_require__(52);\nvar OuterSubscriber_1 = __webpack_require__(53);\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    __extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Joins last values emitted by passed Observables.\n     *\n     * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n     *\n     * <img src=\"./img/forkJoin.png\" width=\"100%\">\n     *\n     * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n     * or directly as arguments. If no input Observables are provided, resulting stream will complete\n     * immediately.\n     *\n     * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n     * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n     * array will have `n` values, where first value is the last thing emitted by the first Observable,\n     * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n     * not emit more than once and it will complete after that. If you need to emit combined values not only\n     * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n     * or {@link zip} instead.\n     *\n     * In order for resulting array to have the same length as the number of input Observables, whenever any of\n     * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n     * and it will not emit anything either, even if it already has some last values from other Observables.\n     * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n     * unless at any point some other Observable completes without emitting value, which brings us back to\n     * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n     * have to emit something at least once and complete.\n     *\n     * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n     * will be immediately unsubscribed.\n     *\n     * Optionally `forkJoin` accepts project function, that will be called with values which normally\n     * would land in emitted array. Whatever is returned by project function, will appear in output\n     * Observable instead. This means that default project can be thought of as a function that takes\n     * all its arguments and puts them into an array. Note that project function will be called only\n     * when output Observable is supposed to emit a result.\n     *\n     * @example <caption>Use forkJoin with operator emitting immediately</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.of(1, 2, 3, 4),\n     *   Rx.Observable.of(5, 6, 7, 8)\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [4, 8]\n     * // \"This is how it ends!\"\n     *\n     *\n     * @example <caption>Use forkJoin with operator emitting after some time</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [2, 3] after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     *\n     * @example <caption>Use forkJoin with project function</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete\n     *   (n, m) => n + m\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // 5 after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     * @see {@link combineLatest}\n     * @see {@link zip}\n     *\n     * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments\n     * passed directly to the operator.\n     * @param {function} [project] Function that takes values emitted by input Observables and returns value\n     * that will appear in resulting Observable instead of default array.\n     * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n     * or value from project function.\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 0-d946c3b3a46575c00341.js","import { Injectable } from '@angular/core';\nimport { HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport { CachedHttp } from 'angular-async-cache';\nimport { Show, Episode } from '../../interfaces';\n\n@Injectable()\nexport class TVMaze {\n  static BASE_URL = 'https://api.tvmaze.com/';\n\n  constructor(private http: CachedHttp) {}\n\n  search(query: string): Observable<Show[]> {\n    return this.http\n      .get(`${TVMaze.BASE_URL}search/shows`, {\n        params: new HttpParams().set('q', query)\n      })\n      .map((shows: Array<{ show: Show }>) =>\n        shows.map((show: { show: Show }) => show.show)\n      );\n  }\n\n  getEpisodes(id: number): Observable<Episode[]> {\n    return this.http.get(`${TVMaze.BASE_URL}shows/${id}/episodes`);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/shared/tv-maze.provider.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class LocalStorage {\n  getItem(key: string, defaultValue?: any): any {\n    if (localStorage.getItem(key)) {\n      return JSON.parse(localStorage.getItem(key) as string);\n    } else {\n      return defaultValue;\n    }\n  }\n\n  setItem(key: string, value: any): void {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  removeItem(key: string): void {\n    localStorage.removeItem(key);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/shared/local-storage.provider.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\nvar ConfirmationPopoverOptions = (function () {\n    function ConfirmationPopoverOptions() {\n        this.confirmText = 'Confirm';\n        this.cancelText = 'Cancel';\n        this.confirmButtonType = 'success';\n        this.cancelButtonType = 'default';\n        this.placement = 'top';\n        this.hideConfirmButton = false;\n        this.hideCancelButton = false;\n        this.popoverClass = '';\n        this.appendToBody = false;\n    }\n    return ConfirmationPopoverOptions;\n}());\nexport { ConfirmationPopoverOptions };\n/**\n * @private\n */\nvar ConfirmationPopoverWindowOptions = (function (_super) {\n    __extends(ConfirmationPopoverWindowOptions, _super);\n    function ConfirmationPopoverWindowOptions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ConfirmationPopoverWindowOptions.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ConfirmationPopoverWindowOptions.ctorParameters = function () { return []; };\n    return ConfirmationPopoverWindowOptions;\n}(ConfirmationPopoverOptions));\nexport { ConfirmationPopoverWindowOptions };\n//# sourceMappingURL=confirmationPopoverOptions.provider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopoverOptions.provider.js\n// module id = 178\n// module chunks = 0","// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nvar Positioning = (function () {\n    function Positioning() {\n    }\n    Positioning.prototype.getAllStyles = function (element) { return window.getComputedStyle(element); };\n    Positioning.prototype.getStyle = function (element, prop) { return this.getAllStyles(element)[prop]; };\n    Positioning.prototype.isStaticPositioned = function (element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    };\n    Positioning.prototype.offsetParent = function (element) {\n        var offsetParentEl = element.offsetParent || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = offsetParentEl.offsetParent;\n        }\n        return offsetParentEl || document.documentElement;\n    };\n    Positioning.prototype.position = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elPosition;\n        var parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n        }\n        else {\n            var offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    };\n    Positioning.prototype.offset = function (element, round) {\n        if (round === void 0) { round = true; }\n        var elBcr = element.getBoundingClientRect();\n        var viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        var elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    };\n    Positioning.prototype.positionElements = function (hostElement, targetElement, placement, appendToBody) {\n        var hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        var targetElStyles = this.getAllStyles(targetElement);\n        var targetElBCR = targetElement.getBoundingClientRect();\n        var placementPrimary = placement.split('-')[0] || 'top';\n        var placementSecondary = placement.split('-')[1] || 'center';\n        var targetElPosition = {\n            'height': targetElBCR.height || targetElement.offsetHeight,\n            'width': targetElBCR.width || targetElement.offsetWidth,\n            'top': 0,\n            'bottom': targetElBCR.height || targetElement.offsetHeight,\n            'left': 0,\n            'right': targetElBCR.width || targetElement.offsetWidth\n        };\n        switch (placementPrimary) {\n            case 'top':\n                targetElPosition.top =\n                    hostElPosition.top - (targetElement.offsetHeight + parseFloat(targetElStyles.marginBottom));\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height;\n                break;\n            case 'left':\n                targetElPosition.left =\n                    hostElPosition.left - (targetElement.offsetWidth + parseFloat(targetElStyles.marginRight));\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width;\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                targetElPosition.top = hostElPosition.top;\n                break;\n            case 'bottom':\n                targetElPosition.top = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                targetElPosition.left = hostElPosition.left;\n                break;\n            case 'right':\n                targetElPosition.left = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    targetElPosition.left = hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2;\n                }\n                else {\n                    targetElPosition.top = hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2;\n                }\n                break;\n        }\n        targetElPosition.top = Math.round(targetElPosition.top);\n        targetElPosition.bottom = Math.round(targetElPosition.bottom);\n        targetElPosition.left = Math.round(targetElPosition.left);\n        targetElPosition.right = Math.round(targetElPosition.right);\n        return targetElPosition;\n    };\n    return Positioning;\n}());\nexport { Positioning };\nvar positionService = new Positioning();\nexport function positionElements(hostElement, targetElement, placement, appendToBody) {\n    var pos = positionService.positionElements(hostElement, targetElement, placement, appendToBody);\n    targetElement.style.top = pos.top + \"px\";\n    targetElement.style.left = pos.left + \"px\";\n}\n//# sourceMappingURL=positioning.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/positioning/dist/positioning.js\n// module id = 179\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/observable/fromPromise';\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/observable/merge';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/mergeMap';\nimport symbolObservable from 'symbol-observable';\nimport { AsyncCacheOptions } from './async-cache-options.provider';\nvar isPromise = function (fn) { return fn && typeof fn.then === 'function' && typeof fn.catch === 'function'; };\nvar isObservable = function (fn) { return fn && fn[symbolObservable]; };\nvar anyToObservable = function (fn) {\n    if (isObservable(fn)) {\n        return fn;\n    }\n    else if (isPromise(fn)) {\n        return Observable.fromPromise(fn);\n    }\n    else {\n        return Observable.of(fn);\n    }\n};\nvar AsyncCache = (function () {\n    function AsyncCache(defaults) {\n        this.defaults = defaults;\n    }\n    AsyncCache.prototype.wrap = function (value, cacheKey, userOptions) {\n        if (userOptions === void 0) { userOptions = {}; }\n        var getAsyncValue;\n        var options = Object.assign({}, this.defaults, userOptions);\n        if (isObservable(value)) {\n            getAsyncValue = value;\n        }\n        else if (typeof value === 'function') {\n            getAsyncValue = Observable.create(function (observer) {\n                var promise = value();\n                if (!isPromise(promise)) {\n                    return observer.error('The function you passed to the async cache didn\\'t return a promise');\n                }\n                promise.then(function (result) {\n                    observer.next(result);\n                    observer.complete();\n                }).catch(function (err) {\n                    observer.error(err);\n                });\n            });\n        }\n        else {\n            throw new Error('Value can only be an observable or a function that returns a promise');\n        }\n        return anyToObservable(options.driver.has(cacheKey)).flatMap(function (existsInCache) {\n            var cacheAndReturnAsyncValue = function () { return getAsyncValue.flatMap(function (value) {\n                return anyToObservable(options.driver.set(cacheKey, value)).map(function () { return value; });\n            }); };\n            if (existsInCache && !options.bypassCache) {\n                var getCachedValue = anyToObservable(options.driver.get(cacheKey));\n                if (options.fromCacheAndReplay) {\n                    return Observable.merge(getCachedValue, cacheAndReturnAsyncValue());\n                }\n                else {\n                    return getCachedValue;\n                }\n            }\n            else {\n                return cacheAndReturnAsyncValue();\n            }\n        });\n    };\n    AsyncCache.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    AsyncCache.ctorParameters = function () { return [\n        { type: AsyncCacheOptions, },\n    ]; };\n    return AsyncCache;\n}());\nexport { AsyncCache };\n//# sourceMappingURL=async-cache.provider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-async-cache/async-cache.provider.js\n// module id = 180\n// module chunks = 0","var cacheKey = Symbol('cache key');\nvar MemoryDriver = (function () {\n    function MemoryDriver() {\n        this[cacheKey] = new Map();\n    }\n    MemoryDriver.prototype.has = function (key) {\n        return this[cacheKey].has(key);\n    };\n    MemoryDriver.prototype.get = function (key) {\n        return this[cacheKey].get(key);\n    };\n    MemoryDriver.prototype.set = function (key, value) {\n        return this[cacheKey].set(key, value);\n    };\n    MemoryDriver.prototype.delete = function (key) {\n        return this[cacheKey].delete(key);\n    };\n    MemoryDriver.prototype.clear = function () {\n        return this[cacheKey].clear();\n    };\n    MemoryDriver.prototype.keys = function () {\n        return Array.from(this[cacheKey].keys());\n    };\n    return MemoryDriver;\n}());\nexport { MemoryDriver };\n//# sourceMappingURL=memory-driver.provider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-async-cache/drivers/memory-driver.provider.js\n// module id = 181\n// module chunks = 0","import { MemoryDriver } from './drivers/memory-driver.provider';\nvar AsyncCacheOptions = (function () {\n    function AsyncCacheOptions(overrides) {\n        if (overrides === void 0) { overrides = {}; }\n        this.driver = new MemoryDriver();\n        this.fromCacheAndReplay = false;\n        Object.assign(this, overrides);\n    }\n    return AsyncCacheOptions;\n}());\nexport { AsyncCacheOptions };\n//# sourceMappingURL=async-cache-options.provider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-async-cache/async-cache-options.provider.js\n// module id = 182\n// module chunks = 0","/**\n * @license Angular v5.1.2\n * (c) 2010-2017 Google, Inc. https://angular.io/\n * License: MIT\n */\nimport { Inject, Injectable, InjectionToken, NgModule, Optional, PLATFORM_ID } from '@angular/core';\nimport { of } from 'rxjs/observable/of';\nimport { concatMap } from 'rxjs/operator/concatMap';\nimport { filter } from 'rxjs/operator/filter';\nimport { map } from 'rxjs/operator/map';\nimport { __extends } from 'tslib';\nimport { DOCUMENT, ɵparseCookieValue } from '@angular/common';\nimport { Observable } from 'rxjs/Observable';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Transforms an `HttpRequest` into a stream of `HttpEvent`s, one of which will likely be a\n * `HttpResponse`.\n *\n * `HttpHandler` is injectable. When injected, the handler instance dispatches requests to the\n * first interceptor in the chain, which dispatches to the second, etc, eventually reaching the\n * `HttpBackend`.\n *\n * In an `HttpInterceptor`, the `HttpHandler` parameter is the next interceptor in the chain.\n *\n * \\@stable\n * @abstract\n */\nvar HttpHandler = /** @class */ (function () {\n    function HttpHandler() {\n    }\n    return HttpHandler;\n}());\n/**\n * A final `HttpHandler` which will dispatch the request via browser HTTP APIs to a backend.\n *\n * Interceptors sit between the `HttpClient` interface and the `HttpBackend`.\n *\n * When injected, `HttpBackend` dispatches requests directly to the backend, without going\n * through the interceptor chain.\n *\n * \\@stable\n * @abstract\n */\nvar HttpBackend = /** @class */ (function () {\n    function HttpBackend() {\n    }\n    return HttpBackend;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @record\n */\n/**\n * Immutable set of Http headers, with lazy parsing.\n * \\@stable\n */\nvar HttpHeaders = /** @class */ (function () {\n    function HttpHeaders(headers) {\n        var _this = this;\n        /**\n         * Internal map of lowercased header names to the normalized\n         * form of the name (the form seen first).\n         */\n        this.normalizedNames = new Map();\n        /**\n         * Queued updates to be materialized the next initialization.\n         */\n        this.lazyUpdate = null;\n        if (!headers) {\n            this.headers = new Map();\n        }\n        else if (typeof headers === 'string') {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                headers.split('\\n').forEach(function (line) {\n                    var /** @type {?} */ index = line.indexOf(':');\n                    if (index > 0) {\n                        var /** @type {?} */ name_1 = line.slice(0, index);\n                        var /** @type {?} */ key = name_1.toLowerCase();\n                        var /** @type {?} */ value = line.slice(index + 1).trim();\n                        _this.maybeSetNormalizedName(name_1, key);\n                        if (_this.headers.has(key)) {\n                            /** @type {?} */ ((_this.headers.get(key))).push(value);\n                        }\n                        else {\n                            _this.headers.set(key, [value]);\n                        }\n                    }\n                });\n            };\n        }\n        else {\n            this.lazyInit = function () {\n                _this.headers = new Map();\n                Object.keys(headers).forEach(function (name) {\n                    var /** @type {?} */ values = headers[name];\n                    var /** @type {?} */ key = name.toLowerCase();\n                    if (typeof values === 'string') {\n                        values = [values];\n                    }\n                    if (values.length > 0) {\n                        _this.headers.set(key, values);\n                        _this.maybeSetNormalizedName(name, key);\n                    }\n                });\n            };\n        }\n    }\n    /**\n     * Checks for existence of header by given name.\n     */\n    /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.has = /**\n     * Checks for existence of header by given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.init();\n        return this.headers.has(name.toLowerCase());\n    };\n    /**\n     * Returns first header that matches given name.\n     */\n    /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.get = /**\n     * Returns first header that matches given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.init();\n        var /** @type {?} */ values = this.headers.get(name.toLowerCase());\n        return values && values.length > 0 ? values[0] : null;\n    };\n    /**\n     * Returns the names of the headers\n     */\n    /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    HttpHeaders.prototype.keys = /**\n     * Returns the names of the headers\n     * @return {?}\n     */\n    function () {\n        this.init();\n        return Array.from(this.normalizedNames.values());\n    };\n    /**\n     * Returns list of header values for a given name.\n     */\n    /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    HttpHeaders.prototype.getAll = /**\n     * Returns list of header values for a given name.\n     * @param {?} name\n     * @return {?}\n     */\n    function (name) {\n        this.init();\n        return this.headers.get(name.toLowerCase()) || null;\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.append = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        return this.clone({ name: name, value: value, op: 'a' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.set = /**\n     * @param {?} name\n     * @param {?} value\n     * @return {?}\n     */\n    function (name, value) {\n        return this.clone({ name: name, value: value, op: 's' });\n    };\n    /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpHeaders.prototype.delete = /**\n     * @param {?} name\n     * @param {?=} value\n     * @return {?}\n     */\n    function (name, value) {\n        return this.clone({ name: name, value: value, op: 'd' });\n    };\n    /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    HttpHeaders.prototype.maybeSetNormalizedName = /**\n     * @param {?} name\n     * @param {?} lcName\n     * @return {?}\n     */\n    function (name, lcName) {\n        if (!this.normalizedNames.has(lcName)) {\n            this.normalizedNames.set(lcName, name);\n        }\n    };\n    /**\n     * @return {?}\n     */\n    HttpHeaders.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (!!this.lazyInit) {\n            if (this.lazyInit instanceof HttpHeaders) {\n                this.copyFrom(this.lazyInit);\n            }\n            else {\n                this.lazyInit();\n            }\n            this.lazyInit = null;\n            if (!!this.lazyUpdate) {\n                this.lazyUpdate.forEach(function (update) { return _this.applyUpdate(update); });\n                this.lazyUpdate = null;\n            }\n        }\n    };\n    /**\n     * @param {?} other\n     * @return {?}\n     */\n    HttpHeaders.prototype.copyFrom = /**\n     * @param {?} other\n     * @return {?}\n     */\n    function (other) {\n        var _this = this;\n        other.init();\n        Array.from(other.headers.keys()).forEach(function (key) {\n            _this.headers.set(key, /** @type {?} */ ((other.headers.get(key))));\n            _this.normalizedNames.set(key, /** @type {?} */ ((other.normalizedNames.get(key))));\n        });\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.clone = /**\n     * @param {?} update\n     * @return {?}\n     */\n    function (update) {\n        var /** @type {?} */ clone = new HttpHeaders();\n        clone.lazyInit =\n            (!!this.lazyInit && this.lazyInit instanceof HttpHeaders) ? this.lazyInit : this;\n        clone.lazyUpdate = (this.lazyUpdate || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpHeaders.prototype.applyUpdate = /**\n     * @param {?} update\n     * @return {?}\n     */\n    function (update) {\n        var /** @type {?} */ key = update.name.toLowerCase();\n        switch (update.op) {\n            case 'a':\n            case 's':\n                var /** @type {?} */ value = /** @type {?} */ ((update.value));\n                if (typeof value === 'string') {\n                    value = [value];\n                }\n                if (value.length === 0) {\n                    return;\n                }\n                this.maybeSetNormalizedName(update.name, key);\n                var /** @type {?} */ base = (update.op === 'a' ? this.headers.get(key) : undefined) || [];\n                base.push.apply(base, value);\n                this.headers.set(key, base);\n                break;\n            case 'd':\n                var /** @type {?} */ toDelete_1 = /** @type {?} */ (update.value);\n                if (!toDelete_1) {\n                    this.headers.delete(key);\n                    this.normalizedNames.delete(key);\n                }\n                else {\n                    var /** @type {?} */ existing = this.headers.get(key);\n                    if (!existing) {\n                        return;\n                    }\n                    existing = existing.filter(function (value) { return toDelete_1.indexOf(value) === -1; });\n                    if (existing.length === 0) {\n                        this.headers.delete(key);\n                        this.normalizedNames.delete(key);\n                    }\n                    else {\n                        this.headers.set(key, existing);\n                    }\n                }\n                break;\n        }\n    };\n    /**\n     * @internal\n     */\n    /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    HttpHeaders.prototype.forEach = /**\n     * \\@internal\n     * @param {?} fn\n     * @return {?}\n     */\n    function (fn) {\n        var _this = this;\n        this.init();\n        Array.from(this.normalizedNames.keys())\n            .forEach(function (key) { return fn(/** @type {?} */ ((_this.normalizedNames.get(key))), /** @type {?} */ ((_this.headers.get(key)))); });\n    };\n    return HttpHeaders;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A codec for encoding and decoding parameters in URLs.\n *\n * Used by `HttpParams`.\n *\n * \\@stable\n *\n * @record\n */\n\n/**\n * A `HttpParameterCodec` that uses `encodeURIComponent` and `decodeURIComponent` to\n * serialize and parse URL parameter keys and values.\n *\n * \\@stable\n */\nvar HttpUrlEncodingCodec = /** @class */ (function () {\n    function HttpUrlEncodingCodec() {\n    }\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeKey = /**\n     * @param {?} k\n     * @return {?}\n     */\n    function (k) { return standardEncoding(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.encodeValue = /**\n     * @param {?} v\n     * @return {?}\n     */\n    function (v) { return standardEncoding(v); };\n    /**\n     * @param {?} k\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeKey = /**\n     * @param {?} k\n     * @return {?}\n     */\n    function (k) { return decodeURIComponent(k); };\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    HttpUrlEncodingCodec.prototype.decodeValue = /**\n     * @param {?} v\n     * @return {?}\n     */\n    function (v) { return decodeURIComponent(v); };\n    return HttpUrlEncodingCodec;\n}());\n/**\n * @param {?} rawParams\n * @param {?} codec\n * @return {?}\n */\nfunction paramParser(rawParams, codec) {\n    var /** @type {?} */ map$$1 = new Map();\n    if (rawParams.length > 0) {\n        var /** @type {?} */ params = rawParams.split('&');\n        params.forEach(function (param) {\n            var /** @type {?} */ eqIdx = param.indexOf('=');\n            var _a = eqIdx == -1 ?\n                [codec.decodeKey(param), ''] :\n                [codec.decodeKey(param.slice(0, eqIdx)), codec.decodeValue(param.slice(eqIdx + 1))], key = _a[0], val = _a[1];\n            var /** @type {?} */ list = map$$1.get(key) || [];\n            list.push(val);\n            map$$1.set(key, list);\n        });\n    }\n    return map$$1;\n}\n/**\n * @param {?} v\n * @return {?}\n */\nfunction standardEncoding(v) {\n    return encodeURIComponent(v)\n        .replace(/%40/gi, '@')\n        .replace(/%3A/gi, ':')\n        .replace(/%24/gi, '$')\n        .replace(/%2C/gi, ',')\n        .replace(/%3B/gi, ';')\n        .replace(/%2B/gi, '+')\n        .replace(/%3D/gi, '=')\n        .replace(/%3F/gi, '?')\n        .replace(/%2F/gi, '/');\n}\n/**\n * Options used to construct an `HttpParams` instance.\n * @record\n */\n\n/**\n * An HTTP request/response body that represents serialized parameters,\n * per the MIME type `application/x-www-form-urlencoded`.\n *\n * This class is immutable - all mutation operations return a new instance.\n *\n * \\@stable\n */\nvar HttpParams = /** @class */ (function () {\n    function HttpParams(options) {\n        if (options === void 0) { options = /** @type {?} */ ({}); }\n        var _this = this;\n        this.updates = null;\n        this.cloneFrom = null;\n        this.encoder = options.encoder || new HttpUrlEncodingCodec();\n        if (!!options.fromString) {\n            if (!!options.fromObject) {\n                throw new Error(\"Cannot specify both fromString and fromObject.\");\n            }\n            this.map = paramParser(options.fromString, this.encoder);\n        }\n        else if (!!options.fromObject) {\n            this.map = new Map();\n            Object.keys(options.fromObject).forEach(function (key) {\n                var /** @type {?} */ value = (/** @type {?} */ (options.fromObject))[key]; /** @type {?} */\n                ((_this.map)).set(key, Array.isArray(value) ? value : [value]);\n            });\n        }\n        else {\n            this.map = null;\n        }\n    }\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     */\n    /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.has = /**\n     * Check whether the body has one or more values for the given parameter name.\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        this.init();\n        return /** @type {?} */ ((this.map)).has(param);\n    };\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     */\n    /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.get = /**\n     * Get the first value for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        this.init();\n        var /** @type {?} */ res = /** @type {?} */ ((this.map)).get(param);\n        return !!res ? res[0] : null;\n    };\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     */\n    /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    HttpParams.prototype.getAll = /**\n     * Get all values for the given parameter name, or `null` if it's not present.\n     * @param {?} param\n     * @return {?}\n     */\n    function (param) {\n        this.init();\n        return /** @type {?} */ ((this.map)).get(param) || null;\n    };\n    /**\n     * Get all the parameter names for this body.\n     */\n    /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    HttpParams.prototype.keys = /**\n     * Get all the parameter names for this body.\n     * @return {?}\n     */\n    function () {\n        this.init();\n        return Array.from(/** @type {?} */ ((this.map)).keys());\n    };\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     */\n    /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.append = /**\n     * Construct a new body with an appended value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    function (param, value) { return this.clone({ param: param, value: value, op: 'a' }); };\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     */\n    /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    HttpParams.prototype.set = /**\n     * Construct a new body with a new value for the given parameter name.\n     * @param {?} param\n     * @param {?} value\n     * @return {?}\n     */\n    function (param, value) { return this.clone({ param: param, value: value, op: 's' }); };\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     */\n    /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    HttpParams.prototype.delete = /**\n     * Construct a new body with either the given value for the given parameter\n     * removed, if a value is given, or all values for the given parameter removed\n     * if not.\n     * @param {?} param\n     * @param {?=} value\n     * @return {?}\n     */\n    function (param, value) { return this.clone({ param: param, value: value, op: 'd' }); };\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     */\n    /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    HttpParams.prototype.toString = /**\n     * Serialize the body to an encoded string, where key-value pairs (separated by `=`) are\n     * separated by `&`s.\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        this.init();\n        return this.keys()\n            .map(function (key) {\n            var /** @type {?} */ eKey = _this.encoder.encodeKey(key);\n            return /** @type {?} */ ((/** @type {?} */ ((_this.map)).get(key))).map(function (value) { return eKey + '=' + _this.encoder.encodeValue(value); }).join('&');\n        })\n            .join('&');\n    };\n    /**\n     * @param {?} update\n     * @return {?}\n     */\n    HttpParams.prototype.clone = /**\n     * @param {?} update\n     * @return {?}\n     */\n    function (update) {\n        var /** @type {?} */ clone = new HttpParams(/** @type {?} */ ({ encoder: this.encoder }));\n        clone.cloneFrom = this.cloneFrom || this;\n        clone.updates = (this.updates || []).concat([update]);\n        return clone;\n    };\n    /**\n     * @return {?}\n     */\n    HttpParams.prototype.init = /**\n     * @return {?}\n     */\n    function () {\n        var _this = this;\n        if (this.map === null) {\n            this.map = new Map();\n        }\n        if (this.cloneFrom !== null) {\n            this.cloneFrom.init();\n            this.cloneFrom.keys().forEach(function (key) { return ((_this.map)).set(key, /** @type {?} */ ((/** @type {?} */ ((/** @type {?} */ ((_this.cloneFrom)).map)).get(key)))); }); /** @type {?} */\n            ((this.updates)).forEach(function (update) {\n                switch (update.op) {\n                    case 'a':\n                    case 's':\n                        var /** @type {?} */ base = (update.op === 'a' ? /** @type {?} */ ((_this.map)).get(update.param) : undefined) || [];\n                        base.push(/** @type {?} */ ((update.value))); /** @type {?} */\n                        ((_this.map)).set(update.param, base);\n                        break;\n                    case 'd':\n                        if (update.value !== undefined) {\n                            var /** @type {?} */ base_1 = /** @type {?} */ ((_this.map)).get(update.param) || [];\n                            var /** @type {?} */ idx = base_1.indexOf(update.value);\n                            if (idx !== -1) {\n                                base_1.splice(idx, 1);\n                            }\n                            if (base_1.length > 0) {\n                                /** @type {?} */ ((_this.map)).set(update.param, base_1);\n                            }\n                            else {\n                                /** @type {?} */ ((_this.map)).delete(update.param);\n                            }\n                        }\n                        else {\n                            /** @type {?} */ ((_this.map)).delete(update.param);\n                            break;\n                        }\n                }\n            });\n            this.cloneFrom = null;\n        }\n    };\n    return HttpParams;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine whether the given HTTP method may include a body.\n * @param {?} method\n * @return {?}\n */\nfunction mightHaveBody(method) {\n    switch (method) {\n        case 'DELETE':\n        case 'GET':\n        case 'HEAD':\n        case 'OPTIONS':\n        case 'JSONP':\n            return false;\n        default:\n            return true;\n    }\n}\n/**\n * Safely assert whether the given value is an ArrayBuffer.\n *\n * In some execution environments ArrayBuffer is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isArrayBuffer(value) {\n    return typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer;\n}\n/**\n * Safely assert whether the given value is a Blob.\n *\n * In some execution environments Blob is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isBlob(value) {\n    return typeof Blob !== 'undefined' && value instanceof Blob;\n}\n/**\n * Safely assert whether the given value is a FormData instance.\n *\n * In some execution environments FormData is not defined.\n * @param {?} value\n * @return {?}\n */\nfunction isFormData(value) {\n    return typeof FormData !== 'undefined' && value instanceof FormData;\n}\n/**\n * An outgoing HTTP request with an optional typed body.\n *\n * `HttpRequest` represents an outgoing request, including URL, method,\n * headers, body, and other request configuration options. Instances should be\n * assumed to be immutable. To modify a `HttpRequest`, the `clone`\n * method should be used.\n *\n * \\@stable\n */\nvar HttpRequest = /** @class */ (function () {\n    function HttpRequest(method, url, third, fourth) {\n        this.url = url;\n        /**\n         * The request body, or `null` if one isn't set.\n         *\n         * Bodies are not enforced to be immutable, as they can include a reference to any\n         * user-defined data type. However, interceptors should take care to preserve\n         * idempotence by treating them as such.\n         */\n        this.body = null;\n        /**\n         * Whether this request should be made in a way that exposes progress events.\n         *\n         * Progress events are expensive (change detection runs on each event) and so\n         * they should only be requested if the consumer intends to monitor them.\n         */\n        this.reportProgress = false;\n        /**\n         * Whether this request should be sent with outgoing credentials (cookies).\n         */\n        this.withCredentials = false;\n        /**\n         * The expected response type of the server.\n         *\n         * This is used to parse the response appropriately before returning it to\n         * the requestee.\n         */\n        this.responseType = 'json';\n        this.method = method.toUpperCase();\n        // Next, need to figure out which argument holds the HttpRequestInit\n        // options, if any.\n        var /** @type {?} */ options;\n        // Check whether a body argument is expected. The only valid way to omit\n        // the body argument is to use a known no-body method like GET.\n        if (mightHaveBody(this.method) || !!fourth) {\n            // Body is the third argument, options are the fourth.\n            this.body = (third !== undefined) ? /** @type {?} */ (third) : null;\n            options = fourth;\n        }\n        else {\n            // No body required, options are the third argument. The body stays null.\n            options = /** @type {?} */ (third);\n        }\n        // If options have been passed, interpret them.\n        if (options) {\n            // Normalize reportProgress and withCredentials.\n            this.reportProgress = !!options.reportProgress;\n            this.withCredentials = !!options.withCredentials;\n            // Override default response type of 'json' if one is provided.\n            if (!!options.responseType) {\n                this.responseType = options.responseType;\n            }\n            // Override headers if they're provided.\n            if (!!options.headers) {\n                this.headers = options.headers;\n            }\n            if (!!options.params) {\n                this.params = options.params;\n            }\n        }\n        // If no headers have been passed in, construct a new HttpHeaders instance.\n        if (!this.headers) {\n            this.headers = new HttpHeaders();\n        }\n        // If no parameters have been passed in, construct a new HttpUrlEncodedParams instance.\n        if (!this.params) {\n            this.params = new HttpParams();\n            this.urlWithParams = url;\n        }\n        else {\n            // Encode the parameters to a string in preparation for inclusion in the URL.\n            var /** @type {?} */ params = this.params.toString();\n            if (params.length === 0) {\n                // No parameters, the visible URL is just the URL given at creation time.\n                this.urlWithParams = url;\n            }\n            else {\n                // Does the URL already have query parameters? Look for '?'.\n                var /** @type {?} */ qIdx = url.indexOf('?');\n                // There are 3 cases to handle:\n                // 1) No existing parameters -> append '?' followed by params.\n                // 2) '?' exists and is followed by existing query string ->\n                //    append '&' followed by params.\n                // 3) '?' exists at the end of the url -> append params directly.\n                // This basically amounts to determining the character, if any, with\n                // which to join the URL and parameters.\n                var /** @type {?} */ sep = qIdx === -1 ? '?' : (qIdx < url.length - 1 ? '&' : '');\n                this.urlWithParams = url + sep + params;\n            }\n        }\n    }\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     */\n    /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    HttpRequest.prototype.serializeBody = /**\n     * Transform the free-form body into a serialized format suitable for\n     * transmission to the server.\n     * @return {?}\n     */\n    function () {\n        // If no body is present, no need to serialize it.\n        if (this.body === null) {\n            return null;\n        }\n        // Check whether the body is already in a serialized form. If so,\n        // it can just be returned directly.\n        if (isArrayBuffer(this.body) || isBlob(this.body) || isFormData(this.body) ||\n            typeof this.body === 'string') {\n            return this.body;\n        }\n        // Check whether the body is an instance of HttpUrlEncodedParams.\n        if (this.body instanceof HttpParams) {\n            return this.body.toString();\n        }\n        // Check whether the body is an object or array, and serialize with JSON if so.\n        if (typeof this.body === 'object' || typeof this.body === 'boolean' ||\n            Array.isArray(this.body)) {\n            return JSON.stringify(this.body);\n        }\n        // Fall back on toString() for everything else.\n        return (/** @type {?} */ (this.body)).toString();\n    };\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     */\n    /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    HttpRequest.prototype.detectContentTypeHeader = /**\n     * Examine the body and attempt to infer an appropriate MIME type\n     * for it.\n     *\n     * If no such type can be inferred, this method will return `null`.\n     * @return {?}\n     */\n    function () {\n        // An empty body has no content type.\n        if (this.body === null) {\n            return null;\n        }\n        // FormData bodies rely on the browser's content type assignment.\n        if (isFormData(this.body)) {\n            return null;\n        }\n        // Blobs usually have their own content type. If it doesn't, then\n        // no type can be inferred.\n        if (isBlob(this.body)) {\n            return this.body.type || null;\n        }\n        // Array buffers have unknown contents and thus no type can be inferred.\n        if (isArrayBuffer(this.body)) {\n            return null;\n        }\n        // Technically, strings could be a form of JSON data, but it's safe enough\n        // to assume they're plain strings.\n        if (typeof this.body === 'string') {\n            return 'text/plain';\n        }\n        // `HttpUrlEncodedParams` has its own content-type.\n        if (this.body instanceof HttpParams) {\n            return 'application/x-www-form-urlencoded;charset=UTF-8';\n        }\n        // Arrays, objects, and numbers will be encoded as JSON.\n        if (typeof this.body === 'object' || typeof this.body === 'number' ||\n            Array.isArray(this.body)) {\n            return 'application/json';\n        }\n        // No type could be inferred.\n        return null;\n    };\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpRequest.prototype.clone = /**\n     * @param {?=} update\n     * @return {?}\n     */\n    function (update) {\n        if (update === void 0) { update = {}; }\n        // For method, url, and responseType, take the current value unless\n        // it is overridden in the update hash.\n        var /** @type {?} */ method = update.method || this.method;\n        var /** @type {?} */ url = update.url || this.url;\n        var /** @type {?} */ responseType = update.responseType || this.responseType;\n        // The body is somewhat special - a `null` value in update.body means\n        // whatever current body is present is being overridden with an empty\n        // body, whereas an `undefined` value in update.body implies no\n        // override.\n        var /** @type {?} */ body = (update.body !== undefined) ? update.body : this.body;\n        // Carefully handle the boolean options to differentiate between\n        // `false` and `undefined` in the update args.\n        var /** @type {?} */ withCredentials = (update.withCredentials !== undefined) ? update.withCredentials : this.withCredentials;\n        var /** @type {?} */ reportProgress = (update.reportProgress !== undefined) ? update.reportProgress : this.reportProgress;\n        // Headers and params may be appended to if `setHeaders` or\n        // `setParams` are used.\n        var /** @type {?} */ headers = update.headers || this.headers;\n        var /** @type {?} */ params = update.params || this.params;\n        // Check whether the caller has asked to add headers.\n        if (update.setHeaders !== undefined) {\n            // Set every requested header.\n            headers =\n                Object.keys(update.setHeaders)\n                    .reduce(function (headers, name) { return headers.set(name, /** @type {?} */ ((update.setHeaders))[name]); }, headers);\n        }\n        // Check whether the caller has asked to set params.\n        if (update.setParams) {\n            // Set every requested param.\n            params = Object.keys(update.setParams)\n                .reduce(function (params, param) { return params.set(param, /** @type {?} */ ((update.setParams))[param]); }, params);\n        }\n        // Finally, construct the new HttpRequest using the pieces from above.\n        return new HttpRequest(method, url, body, {\n            params: params, headers: headers, reportProgress: reportProgress, responseType: responseType, withCredentials: withCredentials,\n        });\n    };\n    return HttpRequest;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nvar HttpEventType = {\n    /**\n       * The request was sent out over the wire.\n       */\n    Sent: 0,\n    /**\n       * An upload progress event was received.\n       */\n    UploadProgress: 1,\n    /**\n       * The response status code and headers were received.\n       */\n    ResponseHeader: 2,\n    /**\n       * A download progress event was received.\n       */\n    DownloadProgress: 3,\n    /**\n       * The full response including the body was received.\n       */\n    Response: 4,\n    /**\n       * A custom event from an interceptor or a backend.\n       */\n    User: 5,\n};\nHttpEventType[HttpEventType.Sent] = \"Sent\";\nHttpEventType[HttpEventType.UploadProgress] = \"UploadProgress\";\nHttpEventType[HttpEventType.ResponseHeader] = \"ResponseHeader\";\nHttpEventType[HttpEventType.DownloadProgress] = \"DownloadProgress\";\nHttpEventType[HttpEventType.Response] = \"Response\";\nHttpEventType[HttpEventType.User] = \"User\";\n/**\n * Base interface for progress events.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A download progress event.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An upload progress event.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An event indicating that the request was sent to the server. Useful\n * when a request may be retried multiple times, to distinguish between\n * retries on the final event stream.\n *\n * \\@stable\n * @record\n */\n\n/**\n * A user-defined event.\n *\n * Grouping all custom events under this type ensures they will be handled\n * and forwarded by all implementations of interceptors.\n *\n * \\@stable\n * @record\n */\n\n/**\n * An error that represents a failed attempt to JSON.parse text coming back\n * from the server.\n *\n * It bundles the Error object with the actual response body that failed to parse.\n *\n * \\@stable\n * @record\n */\n\n/**\n * Base class for both `HttpResponse` and `HttpHeaderResponse`.\n *\n * \\@stable\n * @abstract\n */\nvar HttpResponseBase = /** @class */ (function () {\n    /**\n     * Super-constructor for all responses.\n     *\n     * The single parameter accepted is an initialization hash. Any properties\n     * of the response passed there will override the default values.\n     */\n    function HttpResponseBase(init, defaultStatus, defaultStatusText) {\n        if (defaultStatus === void 0) { defaultStatus = 200; }\n        if (defaultStatusText === void 0) { defaultStatusText = 'OK'; }\n        // If the hash has values passed, use them to initialize the response.\n        // Otherwise use the default values.\n        this.headers = init.headers || new HttpHeaders();\n        this.status = init.status !== undefined ? init.status : defaultStatus;\n        this.statusText = init.statusText || defaultStatusText;\n        this.url = init.url || null;\n        // Cache the ok value to avoid defining a getter.\n        this.ok = this.status >= 200 && this.status < 300;\n    }\n    return HttpResponseBase;\n}());\n/**\n * A partial HTTP response which only includes the status and header data,\n * but no response body.\n *\n * `HttpHeaderResponse` is a `HttpEvent` available on the response\n * event stream, only when progress events are requested.\n *\n * \\@stable\n */\nvar HttpHeaderResponse = /** @class */ (function (_super) {\n    __extends(HttpHeaderResponse, _super);\n    /**\n     * Create a new `HttpHeaderResponse` with the given parameters.\n     */\n    function HttpHeaderResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.ResponseHeader;\n        return _this;\n    }\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     */\n    /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpHeaderResponse.prototype.clone = /**\n     * Copy this `HttpHeaderResponse`, overriding its contents with the\n     * given parameter hash.\n     * @param {?=} update\n     * @return {?}\n     */\n    function (update) {\n        if (update === void 0) { update = {}; }\n        // Perform a straightforward initialization of the new HttpHeaderResponse,\n        // overriding the current parameters with new ones if given.\n        return new HttpHeaderResponse({\n            headers: update.headers || this.headers,\n            status: update.status !== undefined ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpHeaderResponse;\n}(HttpResponseBase));\n/**\n * A full HTTP response, including a typed response body (which may be `null`\n * if one was not returned).\n *\n * `HttpResponse` is a `HttpEvent` available on the response event\n * stream.\n *\n * \\@stable\n */\nvar HttpResponse = /** @class */ (function (_super) {\n    __extends(HttpResponse, _super);\n    /**\n     * Construct a new `HttpResponse`.\n     */\n    function HttpResponse(init) {\n        if (init === void 0) { init = {}; }\n        var _this = _super.call(this, init) || this;\n        _this.type = HttpEventType.Response;\n        _this.body = init.body !== undefined ? init.body : null;\n        return _this;\n    }\n    /**\n     * @param {?=} update\n     * @return {?}\n     */\n    HttpResponse.prototype.clone = /**\n     * @param {?=} update\n     * @return {?}\n     */\n    function (update) {\n        if (update === void 0) { update = {}; }\n        return new HttpResponse({\n            body: (update.body !== undefined) ? update.body : this.body,\n            headers: update.headers || this.headers,\n            status: (update.status !== undefined) ? update.status : this.status,\n            statusText: update.statusText || this.statusText,\n            url: update.url || this.url || undefined,\n        });\n    };\n    return HttpResponse;\n}(HttpResponseBase));\n/**\n * A response that represents an error or failure, either from a\n * non-successful HTTP status, an error while executing the request,\n * or some other failure which occurred during the parsing of the response.\n *\n * Any error returned on the `Observable` response stream will be\n * wrapped in an `HttpErrorResponse` to provide additional context about\n * the state of the HTTP layer when the error occurred. The error property\n * will contain either a wrapped Error object or the error response returned\n * from the server.\n *\n * \\@stable\n */\nvar HttpErrorResponse = /** @class */ (function (_super) {\n    __extends(HttpErrorResponse, _super);\n    function HttpErrorResponse(init) {\n        var _this = \n        // Initialize with a default status of 0 / Unknown Error.\n        _super.call(this, init, 0, 'Unknown Error') || this;\n        _this.name = 'HttpErrorResponse';\n        /**\n         * Errors are never okay, even when the status code is in the 2xx success range.\n         */\n        _this.ok = false;\n        // If the response was successful, then this was a parse error. Otherwise, it was\n        // a protocol-level failure of some sort. Either the request failed in transit\n        // or the server returned an unsuccessful status code.\n        if (_this.status >= 200 && _this.status < 300) {\n            _this.message = \"Http failure during parsing for \" + (init.url || '(unknown url)');\n        }\n        else {\n            _this.message =\n                \"Http failure response for \" + (init.url || '(unknown url)') + \": \" + init.status + \" \" + init.statusText;\n        }\n        _this.error = init.error || null;\n        return _this;\n    }\n    return HttpErrorResponse;\n}(HttpResponseBase));\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an instance of `HttpRequestOptions<T>` from a source `HttpMethodOptions` and\n * the given `body`. Basically, this clones the object and adds the body.\n * @template T\n * @param {?} options\n * @param {?} body\n * @return {?}\n */\nfunction addBody(options, body) {\n    return {\n        body: body,\n        headers: options.headers,\n        observe: options.observe,\n        params: options.params,\n        reportProgress: options.reportProgress,\n        responseType: options.responseType,\n        withCredentials: options.withCredentials,\n    };\n}\n/**\n * Perform HTTP requests.\n *\n * `HttpClient` is available as an injectable class, with methods to perform HTTP requests.\n * Each request method has multiple signatures, and the return type varies according to which\n * signature is called (mainly the values of `observe` and `responseType`).\n *\n * \\@stable\n */\nvar HttpClient = /** @class */ (function () {\n    function HttpClient(handler) {\n        this.handler = handler;\n    }\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     */\n    /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.request = /**\n     * Constructs an `Observable` for a particular HTTP request that, when subscribed,\n     * fires the request through the chain of registered interceptors and on to the\n     * server.\n     *\n     * This method can be called in one of two ways. Either an `HttpRequest`\n     * instance can be passed directly as the only parameter, or a method can be\n     * passed as the first parameter, a string URL as the second, and an\n     * options hash as the third.\n     *\n     * If a `HttpRequest` object is passed directly, an `Observable` of the\n     * raw `HttpEvent` stream will be returned.\n     *\n     * If a request is instead built by providing a URL, the options object\n     * determines the return type of `request()`. In addition to configuring\n     * request parameters such as the outgoing headers and/or the body, the options\n     * hash specifies two key pieces of information about the request: the\n     * `responseType` and what to `observe`.\n     *\n     * The `responseType` value determines how a successful response body will be\n     * parsed. If `responseType` is the default `json`, a type interface for the\n     * resulting object may be passed as a type parameter to `request()`.\n     *\n     * The `observe` value determines the return type of `request()`, based on what\n     * the consumer is interested in observing. A value of `events` will return an\n     * `Observable<HttpEvent>` representing the raw `HttpEvent` stream,\n     * including progress events by default. A value of `response` will return an\n     * `Observable<HttpResponse<T>>` where the `T` parameter of `HttpResponse`\n     * depends on the `responseType` and any optionally provided type parameter.\n     * A value of `body` will return an `Observable<T>` with the same `T` body type.\n     * @param {?} first\n     * @param {?=} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (first, url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var /** @type {?} */ req;\n        // Firstly, check whether the primary argument is an instance of `HttpRequest`.\n        if (first instanceof HttpRequest) {\n            // It is. The other arguments must be undefined (per the signatures) and can be\n            // ignored.\n            req = /** @type {?} */ (first);\n        }\n        else {\n            // It's a string, so it represents a URL. Construct a request based on it,\n            // and incorporate the remaining arguments (assuming GET unless a method is\n            // provided.\n            // Figure out the headers.\n            var /** @type {?} */ headers = undefined;\n            if (options.headers instanceof HttpHeaders) {\n                headers = options.headers;\n            }\n            else {\n                headers = new HttpHeaders(options.headers);\n            }\n            // Sort out parameters.\n            var /** @type {?} */ params = undefined;\n            if (!!options.params) {\n                if (options.params instanceof HttpParams) {\n                    params = options.params;\n                }\n                else {\n                    params = new HttpParams(/** @type {?} */ ({ fromObject: options.params }));\n                }\n            }\n            // Construct the request.\n            req = new HttpRequest(first, /** @type {?} */ ((url)), (options.body !== undefined ? options.body : null), {\n                headers: headers,\n                params: params,\n                reportProgress: options.reportProgress,\n                // By default, JSON is assumed to be returned for all calls.\n                responseType: options.responseType || 'json',\n                withCredentials: options.withCredentials,\n            });\n        }\n        // Start with an Observable.of() the initial request, and run the handler (which\n        // includes all interceptors) inside a concatMap(). This way, the handler runs\n        // inside an Observable chain, which causes interceptors to be re-run on every\n        // subscription (this also makes retries re-run the handler, including interceptors).\n        var /** @type {?} */ events$ = concatMap.call(of(req), function (req) { return _this.handler.handle(req); });\n        // If coming via the API signature which accepts a previously constructed HttpRequest,\n        // the only option is to get the event stream. Otherwise, return the event stream if\n        // that is what was requested.\n        if (first instanceof HttpRequest || options.observe === 'events') {\n            return events$;\n        }\n        // The requested stream contains either the full response or the body. In either\n        // case, the first step is to filter the event stream to extract a stream of\n        // responses(s).\n        var /** @type {?} */ res$ = filter.call(events$, function (event) { return event instanceof HttpResponse; });\n        // Decide which stream to return.\n        switch (options.observe || 'body') {\n            case 'body':\n                // The requested stream is the body. Map the response stream to the response\n                // body. This could be done more simply, but a misbehaving interceptor might\n                // transform the response body into a different format and ignore the requested\n                // responseType. Guard against this by validating that the response is of the\n                // requested type.\n                switch (req.responseType) {\n                    case 'arraybuffer':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is an ArrayBuffer.\n                            if (res.body !== null && !(res.body instanceof ArrayBuffer)) {\n                                throw new Error('Response is not an ArrayBuffer.');\n                            }\n                            return res.body;\n                        });\n                    case 'blob':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a Blob.\n                            if (res.body !== null && !(res.body instanceof Blob)) {\n                                throw new Error('Response is not a Blob.');\n                            }\n                            return res.body;\n                        });\n                    case 'text':\n                        return map.call(res$, function (res) {\n                            // Validate that the body is a string.\n                            if (res.body !== null && typeof res.body !== 'string') {\n                                throw new Error('Response is not a string.');\n                            }\n                            return res.body;\n                        });\n                    case 'json':\n                    default:\n                        // No validation needed for JSON responses, as they can be of any type.\n                        return map.call(res$, function (res) { return res.body; });\n                }\n            case 'response':\n                // The response stream was requested directly, so return it.\n                return res$;\n            default:\n                // Guard against new future observe types being added.\n                throw new Error(\"Unreachable: unhandled observe type \" + options.observe + \"}\");\n        }\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.delete = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * DELETE request to be executed on the server. See the individual overloads for\n     * details of `delete()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('DELETE', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.get = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * GET request to be executed on the server. See the individual overloads for\n     * details of `get()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('GET', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.head = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * HEAD request to be executed on the server. See the individual overloads for\n     * details of `head()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('HEAD', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    HttpClient.prototype.jsonp = /**\n     * Constructs an `Observable` which, when subscribed, will cause a request\n     * with the special method `JSONP` to be dispatched via the interceptor pipeline.\n     *\n     * A suitable interceptor must be installed (e.g. via the `HttpClientJsonpModule`).\n     * If no such interceptor is reached, then the `JSONP` request will likely be\n     * rejected by the configured backend.\n     * @template T\n     * @param {?} url\n     * @param {?} callbackParam\n     * @return {?}\n     */\n    function (url, callbackParam) {\n        return this.request('JSONP', url, {\n            params: new HttpParams().append(callbackParam, 'JSONP_CALLBACK'),\n            observe: 'body',\n            responseType: 'json',\n        });\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.options = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * OPTIONS request to be executed on the server. See the individual overloads for\n     * details of `options()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('OPTIONS', url, /** @type {?} */ (options));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.patch = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * PATCH request to be executed on the server. See the individual overloads for\n     * details of `patch()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PATCH', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.post = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('POST', url, addBody(options, body));\n    };\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     */\n    /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClient.prototype.put = /**\n     * Constructs an `Observable` which, when subscribed, will cause the configured\n     * POST request to be executed on the server. See the individual overloads for\n     * details of `post()`'s return type based on the provided options.\n     * @param {?} url\n     * @param {?} body\n     * @param {?=} options\n     * @return {?}\n     */\n    function (url, body, options) {\n        if (options === void 0) { options = {}; }\n        return this.request('PUT', url, addBody(options, body));\n    };\n    HttpClient.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    HttpClient.ctorParameters = function () { return [\n        { type: HttpHandler, },\n    ]; };\n    return HttpClient;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Intercepts `HttpRequest` and handles them.\n *\n * Most interceptors will transform the outgoing request before passing it to the\n * next interceptor in the chain, by calling `next.handle(transformedReq)`.\n *\n * In rare cases, interceptors may wish to completely handle a request themselves,\n * and not delegate to the remainder of the chain. This behavior is allowed.\n *\n * \\@stable\n * @record\n */\n\n/**\n * `HttpHandler` which applies an `HttpInterceptor` to an `HttpRequest`.\n *\n * \\@stable\n */\nvar HttpInterceptorHandler = /** @class */ (function () {\n    function HttpInterceptorHandler(next, interceptor) {\n        this.next = next;\n        this.interceptor = interceptor;\n    }\n    /**\n     * @param {?} req\n     * @return {?}\n     */\n    HttpInterceptorHandler.prototype.handle = /**\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        return this.interceptor.intercept(req, this.next);\n    };\n    return HttpInterceptorHandler;\n}());\n/**\n * A multi-provider token which represents the array of `HttpInterceptor`s that\n * are registered.\n *\n * \\@stable\n */\nvar HTTP_INTERCEPTORS = new InjectionToken('HTTP_INTERCEPTORS');\nvar NoopInterceptor = /** @class */ (function () {\n    function NoopInterceptor() {\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    NoopInterceptor.prototype.intercept = /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    function (req, next) {\n        return next.handle(req);\n    };\n    NoopInterceptor.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    NoopInterceptor.ctorParameters = function () { return []; };\n    return NoopInterceptor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Every request made through JSONP needs a callback name that's unique across the\n// whole page. Each request is assigned an id and the callback name is constructed\n// from that. The next id to be assigned is tracked in a global variable here that\n// is shared among all applications on the page.\nvar nextRequestId = 0;\n// Error text given when a JSONP script is injected, but doesn't invoke the callback\n// passed in its URL.\nvar JSONP_ERR_NO_CALLBACK = 'JSONP injected script did not invoke callback.';\n// Error text given when a request is passed to the JsonpClientBackend that doesn't\n// have a request method JSONP.\nvar JSONP_ERR_WRONG_METHOD = 'JSONP requests must use JSONP request method.';\nvar JSONP_ERR_WRONG_RESPONSE_TYPE = 'JSONP requests must use Json response type.';\n/**\n * DI token/abstract type representing a map of JSONP callbacks.\n *\n * In the browser, this should always be the `window` object.\n *\n * \\@stable\n * @abstract\n */\nvar JsonpCallbackContext = /** @class */ (function () {\n    function JsonpCallbackContext() {\n    }\n    return JsonpCallbackContext;\n}());\n/**\n * `HttpBackend` that only processes `HttpRequest` with the JSONP method,\n * by performing JSONP style requests.\n *\n * \\@stable\n */\nvar JsonpClientBackend = /** @class */ (function () {\n    function JsonpClientBackend(callbackMap, document) {\n        this.callbackMap = callbackMap;\n        this.document = document;\n    }\n    /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.nextCallback = /**\n     * Get the name of the next callback method, by incrementing the global `nextRequestId`.\n     * @return {?}\n     */\n    function () { return \"ng_jsonp_callback_\" + nextRequestId++; };\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     */\n    /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    JsonpClientBackend.prototype.handle = /**\n     * Process a JSONP request and return an event stream of the results.\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        var _this = this;\n        // Firstly, check both the method and response type. If either doesn't match\n        // then the request was improperly routed here and cannot be handled.\n        if (req.method !== 'JSONP') {\n            throw new Error(JSONP_ERR_WRONG_METHOD);\n        }\n        else if (req.responseType !== 'json') {\n            throw new Error(JSONP_ERR_WRONG_RESPONSE_TYPE);\n        }\n        // Everything else happens inside the Observable boundary.\n        return new Observable(function (observer) {\n            // The first step to make a request is to generate the callback name, and replace the\n            // callback placeholder in the URL with the name. Care has to be taken here to ensure\n            // a trailing &, if matched, gets inserted back into the URL in the correct place.\n            var /** @type {?} */ callback = _this.nextCallback();\n            var /** @type {?} */ url = req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/, \"=\" + callback + \"$1\");\n            // Construct the <script> tag and point it at the URL.\n            var /** @type {?} */ node = _this.document.createElement('script');\n            node.src = url;\n            // A JSONP request requires waiting for multiple callbacks. These variables\n            // are closed over and track state across those callbacks.\n            // The response object, if one has been received, or null otherwise.\n            var /** @type {?} */ body = null;\n            // Whether the response callback has been called.\n            var /** @type {?} */ finished = false;\n            // Whether the request has been cancelled (and thus any other callbacks)\n            // should be ignored.\n            var /** @type {?} */ cancelled = false;\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            // Set the response callback in this.callbackMap (which will be the window\n            // object in the browser. The script being loaded via the <script> tag will\n            // eventually call this callback.\n            _this.callbackMap[callback] = function (data) {\n                // Data has been received from the JSONP script. Firstly, delete this callback.\n                delete _this.callbackMap[callback];\n                // Next, make sure the request wasn't cancelled in the meantime.\n                if (cancelled) {\n                    return;\n                }\n                // Set state to indicate data was received.\n                body = data;\n                finished = true;\n            };\n            // cleanup() is a utility closure that removes the <script> from the page and\n            // the response callback from the window. This logic is used in both the\n            // success, error, and cancellation paths, so it's extracted out for convenience.\n            var /** @type {?} */ cleanup = function () {\n                // Remove the <script> tag if it's still on the page.\n                if (node.parentNode) {\n                    node.parentNode.removeChild(node);\n                }\n                // Remove the response callback from the callbackMap (window object in the\n                // browser).\n                delete _this.callbackMap[callback];\n            };\n            // onLoad() is the success callback which runs after the response callback\n            // if the JSONP script loads successfully. The event itself is unimportant.\n            // If something went wrong, onLoad() may run without the response callback\n            // having been invoked.\n            var /** @type {?} */ onLoad = function (event) {\n                // Do nothing if the request has been cancelled.\n                if (cancelled) {\n                    return;\n                }\n                // Cleanup the page.\n                cleanup();\n                // Check whether the response callback has run.\n                if (!finished) {\n                    // It hasn't, something went wrong with the request. Return an error via\n                    // the Observable error path. All JSONP errors have status 0.\n                    observer.error(new HttpErrorResponse({\n                        url: url,\n                        status: 0,\n                        statusText: 'JSONP Error',\n                        error: new Error(JSONP_ERR_NO_CALLBACK),\n                    }));\n                    return;\n                }\n                // Success. body either contains the response body or null if none was\n                // returned.\n                observer.next(new HttpResponse({\n                    body: body,\n                    status: 200,\n                    statusText: 'OK', url: url,\n                }));\n                // Complete the stream, the resposne is over.\n                observer.complete();\n            };\n            // onError() is the error callback, which runs if the script returned generates\n            // a Javascript error. It emits the error via the Observable error channel as\n            // a HttpErrorResponse.\n            var /** @type {?} */ onError = function (error) {\n                // If the request was already cancelled, no need to emit anything.\n                if (cancelled) {\n                    return;\n                }\n                cleanup();\n                // Wrap the error in a HttpErrorResponse.\n                observer.error(new HttpErrorResponse({\n                    error: error,\n                    status: 0,\n                    statusText: 'JSONP Error', url: url,\n                }));\n            };\n            // Subscribe to both the success (load) and error events on the <script> tag,\n            // and add it to the page.\n            node.addEventListener('load', onLoad);\n            node.addEventListener('error', onError);\n            _this.document.body.appendChild(node);\n            // The request has now been successfully sent.\n            observer.next({ type: HttpEventType.Sent });\n            // Cancellation handler.\n            return function () {\n                // Track the cancellation so event listeners won't do anything even if already scheduled.\n                cancelled = true;\n                // Remove the event listeners so they won't run if the events later fire.\n                node.removeEventListener('load', onLoad);\n                node.removeEventListener('error', onError);\n                // And finally, clean up the page.\n                cleanup();\n            };\n        });\n    };\n    JsonpClientBackend.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    JsonpClientBackend.ctorParameters = function () { return [\n        { type: JsonpCallbackContext, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    return JsonpClientBackend;\n}());\n/**\n * An `HttpInterceptor` which identifies requests with the method JSONP and\n * shifts them to the `JsonpClientBackend`.\n *\n * \\@stable\n */\nvar JsonpInterceptor = /** @class */ (function () {\n    function JsonpInterceptor(jsonp) {\n        this.jsonp = jsonp;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    JsonpInterceptor.prototype.intercept = /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    function (req, next) {\n        if (req.method === 'JSONP') {\n            return this.jsonp.handle(/** @type {?} */ (req));\n        }\n        // Fall through for normal HTTP requests.\n        return next.handle(req);\n    };\n    JsonpInterceptor.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    JsonpInterceptor.ctorParameters = function () { return [\n        { type: JsonpClientBackend, },\n    ]; };\n    return JsonpInterceptor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSSI_PREFIX = /^\\)\\]\\}',?\\n/;\n/**\n * Determine an appropriate URL for the response, by checking either\n * XMLHttpRequest.responseURL or the X-Request-URL header.\n * @param {?} xhr\n * @return {?}\n */\nfunction getResponseUrl(xhr) {\n    if ('responseURL' in xhr && xhr.responseURL) {\n        return xhr.responseURL;\n    }\n    if (/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())) {\n        return xhr.getResponseHeader('X-Request-URL');\n    }\n    return null;\n}\n/**\n * A wrapper around the `XMLHttpRequest` constructor.\n *\n * \\@stable\n * @abstract\n */\nvar XhrFactory = /** @class */ (function () {\n    function XhrFactory() {\n    }\n    return XhrFactory;\n}());\n/**\n * A factory for \\@{link HttpXhrBackend} that uses the `XMLHttpRequest` browser API.\n *\n * \\@stable\n */\nvar BrowserXhr = /** @class */ (function () {\n    function BrowserXhr() {\n    }\n    /**\n     * @return {?}\n     */\n    BrowserXhr.prototype.build = /**\n     * @return {?}\n     */\n    function () { return /** @type {?} */ ((new XMLHttpRequest())); };\n    BrowserXhr.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    BrowserXhr.ctorParameters = function () { return []; };\n    return BrowserXhr;\n}());\n/**\n * An `HttpBackend` which uses the XMLHttpRequest API to send\n * requests to a backend server.\n *\n * \\@stable\n */\nvar HttpXhrBackend = /** @class */ (function () {\n    function HttpXhrBackend(xhrFactory) {\n        this.xhrFactory = xhrFactory;\n    }\n    /**\n     * Process a request and return a stream of response events.\n     */\n    /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    HttpXhrBackend.prototype.handle = /**\n     * Process a request and return a stream of response events.\n     * @param {?} req\n     * @return {?}\n     */\n    function (req) {\n        var _this = this;\n        // Quick check to give a better error message when a user attempts to use\n        // HttpClient.jsonp() without installing the JsonpClientModule\n        if (req.method === 'JSONP') {\n            throw new Error(\"Attempted to construct Jsonp request without JsonpClientModule installed.\");\n        }\n        // Everything happens on Observable subscription.\n        return new Observable(function (observer) {\n            // Start by setting up the XHR object with request method, URL, and withCredentials flag.\n            var /** @type {?} */ xhr = _this.xhrFactory.build();\n            xhr.open(req.method, req.urlWithParams);\n            if (!!req.withCredentials) {\n                xhr.withCredentials = true;\n            }\n            // Add all the requested headers.\n            req.headers.forEach(function (name, values) { return xhr.setRequestHeader(name, values.join(',')); });\n            // Add an Accept header if one isn't present already.\n            if (!req.headers.has('Accept')) {\n                xhr.setRequestHeader('Accept', 'application/json, text/plain, */*');\n            }\n            // Auto-detect the Content-Type header if one isn't present already.\n            if (!req.headers.has('Content-Type')) {\n                var /** @type {?} */ detectedType = req.detectContentTypeHeader();\n                // Sometimes Content-Type detection fails.\n                if (detectedType !== null) {\n                    xhr.setRequestHeader('Content-Type', detectedType);\n                }\n            }\n            // Set the responseType if one was requested.\n            if (req.responseType) {\n                var /** @type {?} */ responseType = req.responseType.toLowerCase();\n                // JSON responses need to be processed as text. This is because if the server\n                // returns an XSSI-prefixed JSON response, the browser will fail to parse it,\n                // xhr.response will be null, and xhr.responseText cannot be accessed to\n                // retrieve the prefixed JSON data in order to strip the prefix. Thus, all JSON\n                // is parsed by first requesting text and then applying JSON.parse.\n                xhr.responseType = /** @type {?} */ (((responseType !== 'json') ? responseType : 'text'));\n            }\n            // Serialize the request body if one is present. If not, this will be set to null.\n            var /** @type {?} */ reqBody = req.serializeBody();\n            // If progress events are enabled, response headers will be delivered\n            // in two events - the HttpHeaderResponse event and the full HttpResponse\n            // event. However, since response headers don't change in between these\n            // two events, it doesn't make sense to parse them twice. So headerResponse\n            // caches the data extracted from the response whenever it's first parsed,\n            // to ensure parsing isn't duplicated.\n            var /** @type {?} */ headerResponse = null;\n            // partialFromXhr extracts the HttpHeaderResponse from the current XMLHttpRequest\n            // state, and memoizes it into headerResponse.\n            var /** @type {?} */ partialFromXhr = function () {\n                if (headerResponse !== null) {\n                    return headerResponse;\n                }\n                // Read status and normalize an IE9 bug (http://bugs.jquery.com/ticket/1450).\n                var /** @type {?} */ status = xhr.status === 1223 ? 204 : xhr.status;\n                var /** @type {?} */ statusText = xhr.statusText || 'OK';\n                // Parse headers from XMLHttpRequest - this step is lazy.\n                var /** @type {?} */ headers = new HttpHeaders(xhr.getAllResponseHeaders());\n                // Read the response URL from the XMLHttpResponse instance and fall back on the\n                // request URL.\n                var /** @type {?} */ url = getResponseUrl(xhr) || req.url;\n                // Construct the HttpHeaderResponse and memoize it.\n                headerResponse = new HttpHeaderResponse({ headers: headers, status: status, statusText: statusText, url: url });\n                return headerResponse;\n            };\n            // Next, a few closures are defined for the various events which XMLHttpRequest can\n            // emit. This allows them to be unregistered as event listeners later.\n            // First up is the load event, which represents a response being fully available.\n            var /** @type {?} */ onLoad = function () {\n                // Read response state from the memoized partial data.\n                var _a = partialFromXhr(), headers = _a.headers, status = _a.status, statusText = _a.statusText, url = _a.url;\n                // The body will be read out if present.\n                var /** @type {?} */ body = null;\n                if (status !== 204) {\n                    // Use XMLHttpRequest.response if set, responseText otherwise.\n                    body = (typeof xhr.response === 'undefined') ? xhr.responseText : xhr.response;\n                }\n                // Normalize another potential bug (this one comes from CORS).\n                if (status === 0) {\n                    status = !!body ? 200 : 0;\n                }\n                // ok determines whether the response will be transmitted on the event or\n                // error channel. Unsuccessful status codes (not 2xx) will always be errors,\n                // but a successful status code can still result in an error if the user\n                // asked for JSON data and the body cannot be parsed as such.\n                var /** @type {?} */ ok = status >= 200 && status < 300;\n                // Check whether the body needs to be parsed as JSON (in many cases the browser\n                // will have done that already).\n                if (req.responseType === 'json' && typeof body === 'string') {\n                    // Save the original body, before attempting XSSI prefix stripping.\n                    var /** @type {?} */ originalBody = body;\n                    body = body.replace(XSSI_PREFIX, '');\n                    try {\n                        // Attempt the parse. If it fails, a parse error should be delivered to the user.\n                        body = body !== '' ? JSON.parse(body) : null;\n                    }\n                    catch (/** @type {?} */ error) {\n                        // Since the JSON.parse failed, it's reasonable to assume this might not have been a\n                        // JSON response. Restore the original body (including any XSSI prefix) to deliver\n                        // a better error response.\n                        body = originalBody;\n                        // If this was an error request to begin with, leave it as a string, it probably\n                        // just isn't JSON. Otherwise, deliver the parsing error to the user.\n                        if (ok) {\n                            // Even though the response status was 2xx, this is still an error.\n                            ok = false;\n                            // The parse error contains the text of the body that failed to parse.\n                            body = /** @type {?} */ ({ error: error, text: body });\n                        }\n                    }\n                }\n                if (ok) {\n                    // A successful response is delivered on the event stream.\n                    observer.next(new HttpResponse({\n                        body: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                    // The full body has been received and delivered, no further events\n                    // are possible. This request is complete.\n                    observer.complete();\n                }\n                else {\n                    // An unsuccessful request is delivered on the error channel.\n                    observer.error(new HttpErrorResponse({\n                        // The error in this case is the response body (error from the server).\n                        error: body,\n                        headers: headers,\n                        status: status,\n                        statusText: statusText,\n                        url: url || undefined,\n                    }));\n                }\n            };\n            // The onError callback is called when something goes wrong at the network level.\n            // Connection timeout, DNS error, offline, etc. These are actual errors, and are\n            // transmitted on the error channel.\n            var /** @type {?} */ onError = function (error) {\n                var /** @type {?} */ res = new HttpErrorResponse({\n                    error: error,\n                    status: xhr.status || 0,\n                    statusText: xhr.statusText || 'Unknown Error',\n                });\n                observer.error(res);\n            };\n            // The sentHeaders flag tracks whether the HttpResponseHeaders event\n            // has been sent on the stream. This is necessary to track if progress\n            // is enabled since the event will be sent on only the first download\n            // progerss event.\n            var /** @type {?} */ sentHeaders = false;\n            // The download progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onDownProgress = function (event) {\n                // Send the HttpResponseHeaders event if it hasn't been sent already.\n                if (!sentHeaders) {\n                    observer.next(partialFromXhr());\n                    sentHeaders = true;\n                }\n                // Start building the download progress event to deliver on the response\n                // event stream.\n                var /** @type {?} */ progressEvent = {\n                    type: HttpEventType.DownloadProgress,\n                    loaded: event.loaded,\n                };\n                // Set the total number of bytes in the event if it's available.\n                if (event.lengthComputable) {\n                    progressEvent.total = event.total;\n                }\n                // If the request was for text content and a partial response is\n                // available on XMLHttpRequest, include it in the progress event\n                // to allow for streaming reads.\n                if (req.responseType === 'text' && !!xhr.responseText) {\n                    progressEvent.partialText = xhr.responseText;\n                }\n                // Finally, fire the event.\n                observer.next(progressEvent);\n            };\n            // The upload progress event handler, which is only registered if\n            // progress events are enabled.\n            var /** @type {?} */ onUpProgress = function (event) {\n                // Upload progress events are simpler. Begin building the progress\n                // event.\n                var /** @type {?} */ progress = {\n                    type: HttpEventType.UploadProgress,\n                    loaded: event.loaded,\n                };\n                // If the total number of bytes being uploaded is available, include\n                // it.\n                if (event.lengthComputable) {\n                    progress.total = event.total;\n                }\n                // Send the event.\n                observer.next(progress);\n            };\n            // By default, register for load and error events.\n            xhr.addEventListener('load', onLoad);\n            xhr.addEventListener('error', onError);\n            // Progress events are only enabled if requested.\n            if (req.reportProgress) {\n                // Download progress is always enabled if requested.\n                xhr.addEventListener('progress', onDownProgress);\n                // Upload progress depends on whether there is a body to upload.\n                if (reqBody !== null && xhr.upload) {\n                    xhr.upload.addEventListener('progress', onUpProgress);\n                }\n            }\n            // Fire the request, and notify the event stream that it was fired.\n            xhr.send(reqBody);\n            observer.next({ type: HttpEventType.Sent });\n            // This is the return from the Observable function, which is the\n            // request cancellation handler.\n            return function () {\n                // On a cancellation, remove all registered event listeners.\n                xhr.removeEventListener('error', onError);\n                xhr.removeEventListener('load', onLoad);\n                if (req.reportProgress) {\n                    xhr.removeEventListener('progress', onDownProgress);\n                    if (reqBody !== null && xhr.upload) {\n                        xhr.upload.removeEventListener('progress', onUpProgress);\n                    }\n                }\n                // Finally, abort the in-flight request.\n                xhr.abort();\n            };\n        });\n    };\n    HttpXhrBackend.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    HttpXhrBackend.ctorParameters = function () { return [\n        { type: XhrFactory, },\n    ]; };\n    return HttpXhrBackend;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar XSRF_COOKIE_NAME = new InjectionToken('XSRF_COOKIE_NAME');\nvar XSRF_HEADER_NAME = new InjectionToken('XSRF_HEADER_NAME');\n/**\n * Retrieves the current XSRF token to use with the next outgoing request.\n *\n * \\@stable\n * @abstract\n */\nvar HttpXsrfTokenExtractor = /** @class */ (function () {\n    function HttpXsrfTokenExtractor() {\n    }\n    return HttpXsrfTokenExtractor;\n}());\n/**\n * `HttpXsrfTokenExtractor` which retrieves the token from a cookie.\n */\nvar HttpXsrfCookieExtractor = /** @class */ (function () {\n    function HttpXsrfCookieExtractor(doc, platform, cookieName) {\n        this.doc = doc;\n        this.platform = platform;\n        this.cookieName = cookieName;\n        this.lastCookieString = '';\n        this.lastToken = null;\n        /**\n         * \\@internal for testing\n         */\n        this.parseCount = 0;\n    }\n    /**\n     * @return {?}\n     */\n    HttpXsrfCookieExtractor.prototype.getToken = /**\n     * @return {?}\n     */\n    function () {\n        if (this.platform === 'server') {\n            return null;\n        }\n        var /** @type {?} */ cookieString = this.doc.cookie || '';\n        if (cookieString !== this.lastCookieString) {\n            this.parseCount++;\n            this.lastToken = ɵparseCookieValue(cookieString, this.cookieName);\n            this.lastCookieString = cookieString;\n        }\n        return this.lastToken;\n    };\n    HttpXsrfCookieExtractor.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    HttpXsrfCookieExtractor.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [XSRF_COOKIE_NAME,] },] },\n    ]; };\n    return HttpXsrfCookieExtractor;\n}());\n/**\n * `HttpInterceptor` which adds an XSRF token to eligible outgoing requests.\n */\nvar HttpXsrfInterceptor = /** @class */ (function () {\n    function HttpXsrfInterceptor(tokenService, headerName) {\n        this.tokenService = tokenService;\n        this.headerName = headerName;\n    }\n    /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    HttpXsrfInterceptor.prototype.intercept = /**\n     * @param {?} req\n     * @param {?} next\n     * @return {?}\n     */\n    function (req, next) {\n        var /** @type {?} */ lcUrl = req.url.toLowerCase();\n        // Skip both non-mutating requests and absolute URLs.\n        // Non-mutating requests don't require a token, and absolute URLs require special handling\n        // anyway as the cookie set\n        // on our origin is not the same as the token expected by another origin.\n        if (req.method === 'GET' || req.method === 'HEAD' || lcUrl.startsWith('http://') ||\n            lcUrl.startsWith('https://')) {\n            return next.handle(req);\n        }\n        var /** @type {?} */ token = this.tokenService.getToken();\n        // Be careful not to overwrite an existing header of the same name.\n        if (token !== null && !req.headers.has(this.headerName)) {\n            req = req.clone({ headers: req.headers.set(this.headerName, token) });\n        }\n        return next.handle(req);\n    };\n    HttpXsrfInterceptor.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    HttpXsrfInterceptor.ctorParameters = function () { return [\n        { type: HttpXsrfTokenExtractor, },\n        { type: undefined, decorators: [{ type: Inject, args: [XSRF_HEADER_NAME,] },] },\n    ]; };\n    return HttpXsrfInterceptor;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Constructs an `HttpHandler` that applies a bunch of `HttpInterceptor`s\n * to a request before passing it to the given `HttpBackend`.\n *\n * Meant to be used as a factory function within `HttpClientModule`.\n *\n * \\@stable\n * @param {?} backend\n * @param {?=} interceptors\n * @return {?}\n */\nfunction interceptingHandler(backend, interceptors) {\n    if (interceptors === void 0) { interceptors = []; }\n    if (!interceptors) {\n        return backend;\n    }\n    return interceptors.reduceRight(function (next, interceptor) { return new HttpInterceptorHandler(next, interceptor); }, backend);\n}\n/**\n * Factory function that determines where to store JSONP callbacks.\n *\n * Ordinarily JSONP callbacks are stored on the `window` object, but this may not exist\n * in test environments. In that case, callbacks are stored on an anonymous object instead.\n *\n * \\@stable\n * @return {?}\n */\nfunction jsonpCallbackContext() {\n    if (typeof window === 'object') {\n        return window;\n    }\n    return {};\n}\n/**\n * `NgModule` which adds XSRF protection support to outgoing requests.\n *\n * Provided the server supports a cookie-based XSRF protection system, this\n * module can be used directly to configure XSRF protection with the correct\n * cookie and header names.\n *\n * If no such names are provided, the default is to use `X-XSRF-TOKEN` for\n * the header name and `XSRF-TOKEN` for the cookie name.\n *\n * \\@stable\n */\nvar HttpClientXsrfModule = /** @class */ (function () {\n    function HttpClientXsrfModule() {\n    }\n    /**\n     * Disable the default XSRF protection.\n     */\n    /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    HttpClientXsrfModule.disable = /**\n     * Disable the default XSRF protection.\n     * @return {?}\n     */\n    function () {\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                { provide: HttpXsrfInterceptor, useClass: NoopInterceptor },\n            ],\n        };\n    };\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     */\n    /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    HttpClientXsrfModule.withOptions = /**\n     * Configure XSRF protection to use the given cookie name or header name,\n     * or the default names (as described above) if not provided.\n     * @param {?=} options\n     * @return {?}\n     */\n    function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: HttpClientXsrfModule,\n            providers: [\n                options.cookieName ? { provide: XSRF_COOKIE_NAME, useValue: options.cookieName } : [],\n                options.headerName ? { provide: XSRF_HEADER_NAME, useValue: options.headerName } : [],\n            ],\n        };\n    };\n    HttpClientXsrfModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        HttpXsrfInterceptor,\n                        { provide: HTTP_INTERCEPTORS, useExisting: HttpXsrfInterceptor, multi: true },\n                        { provide: HttpXsrfTokenExtractor, useClass: HttpXsrfCookieExtractor },\n                        { provide: XSRF_COOKIE_NAME, useValue: 'XSRF-TOKEN' },\n                        { provide: XSRF_HEADER_NAME, useValue: 'X-XSRF-TOKEN' },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpClientXsrfModule.ctorParameters = function () { return []; };\n    return HttpClientXsrfModule;\n}());\n/**\n * `NgModule` which provides the `HttpClient` and associated services.\n *\n * Interceptors can be added to the chain behind `HttpClient` by binding them\n * to the multiprovider for `HTTP_INTERCEPTORS`.\n *\n * \\@stable\n */\nvar HttpClientModule = /** @class */ (function () {\n    function HttpClientModule() {\n    }\n    HttpClientModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        HttpClientXsrfModule.withOptions({\n                            cookieName: 'XSRF-TOKEN',\n                            headerName: 'X-XSRF-TOKEN',\n                        }),\n                    ],\n                    providers: [\n                        HttpClient,\n                        // HttpHandler is the backend + interceptors and is constructed\n                        // using the interceptingHandler factory function.\n                        {\n                            provide: HttpHandler,\n                            useFactory: interceptingHandler,\n                            deps: [HttpBackend, [new Optional(), new Inject(HTTP_INTERCEPTORS)]],\n                        },\n                        HttpXhrBackend,\n                        { provide: HttpBackend, useExisting: HttpXhrBackend },\n                        BrowserXhr,\n                        { provide: XhrFactory, useExisting: BrowserXhr },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpClientModule.ctorParameters = function () { return []; };\n    return HttpClientModule;\n}());\n/**\n * `NgModule` which enables JSONP support in `HttpClient`.\n *\n * Without this module, Jsonp requests will reach the backend\n * with method JSONP, where they'll be rejected.\n *\n * \\@stable\n */\nvar HttpClientJsonpModule = /** @class */ (function () {\n    function HttpClientJsonpModule() {\n    }\n    HttpClientJsonpModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        JsonpClientBackend,\n                        { provide: JsonpCallbackContext, useFactory: jsonpCallbackContext },\n                        { provide: HTTP_INTERCEPTORS, useClass: JsonpInterceptor, multi: true },\n                    ],\n                },] },\n    ];\n    /** @nocollapse */\n    HttpClientJsonpModule.ctorParameters = function () { return []; };\n    return HttpClientJsonpModule;\n}());\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { HttpBackend, HttpHandler, HttpClient, HttpHeaders, HTTP_INTERCEPTORS, JsonpClientBackend, JsonpInterceptor, HttpClientJsonpModule, HttpClientModule, HttpClientXsrfModule, interceptingHandler as ɵinterceptingHandler, HttpParams, HttpUrlEncodingCodec, HttpRequest, HttpErrorResponse, HttpEventType, HttpHeaderResponse, HttpResponse, HttpResponseBase, HttpXhrBackend, XhrFactory, HttpXsrfTokenExtractor, NoopInterceptor as ɵa, JsonpCallbackContext as ɵb, jsonpCallbackContext as ɵc, BrowserXhr as ɵd, HttpXsrfCookieExtractor as ɵg, HttpXsrfInterceptor as ɵh, XSRF_COOKIE_NAME as ɵe, XSRF_HEADER_NAME as ɵf };\n//# sourceMappingURL=http.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/common/esm5/http.js\n// module id = 183\n// module chunks = 0","var DEFAULT_KEY_PREFIX = 'async-cache-';\nvar LocalStorageDriver = (function () {\n    function LocalStorageDriver(options) {\n        if (options === void 0) { options = { keyPrefix: DEFAULT_KEY_PREFIX }; }\n        this.options = options;\n    }\n    LocalStorageDriver.prototype.has = function (key) {\n        return localStorage.hasOwnProperty(this.getInternalKey(key));\n    };\n    LocalStorageDriver.prototype.get = function (key) {\n        return JSON.parse(localStorage.getItem(this.getInternalKey(key)));\n    };\n    LocalStorageDriver.prototype.set = function (key, value) {\n        return localStorage.setItem(this.getInternalKey(key), JSON.stringify(value));\n    };\n    LocalStorageDriver.prototype.delete = function (key) {\n        return localStorage.removeItem(this.getInternalKey(key));\n    };\n    LocalStorageDriver.prototype.clear = function () {\n        for (var _i = 0, _a = this.keys(); _i < _a.length; _i++) {\n            var key = _a[_i];\n            this.delete(key);\n        }\n        return;\n    };\n    LocalStorageDriver.prototype.keys = function () {\n        var _this = this;\n        var keys = [];\n        for (var i = 0; i < localStorage.length; i++) {\n            keys.push(localStorage.key(i));\n        }\n        return keys.filter(function (key) { return key.startsWith(_this.options.keyPrefix); }).map(function (key) { return _this.getExternalKey(key); });\n    };\n    LocalStorageDriver.prototype.getInternalKey = function (suffix) {\n        return \"\" + this.options.keyPrefix + suffix;\n    };\n    LocalStorageDriver.prototype.getExternalKey = function (key) {\n        return key.replace(new RegExp('^' + this.options.keyPrefix), '');\n    };\n    return LocalStorageDriver;\n}());\nexport { LocalStorageDriver };\n//# sourceMappingURL=local-storage-driver.provider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-async-cache/drivers/local-storage-driver.provider.js\n// module id = 184\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AsyncCache } from './async-cache.provider';\nvar CachedHttp = (function () {\n    function CachedHttp(http, asyncCache) {\n        this.http = http;\n        this.asyncCache = asyncCache;\n    }\n    CachedHttp.prototype.get = function (url, options, asyncCacheOptions) {\n        var result$ = this.http.get(url, options);\n        var cacheKey = url;\n        if (options && options.params) {\n            cacheKey += '?' + options.params.toString();\n        }\n        return this.asyncCache.wrap(result$, cacheKey, asyncCacheOptions);\n    };\n    CachedHttp.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    CachedHttp.ctorParameters = function () { return [\n        { type: HttpClient, },\n        { type: AsyncCache, },\n    ]; };\n    return CachedHttp;\n}());\nexport { CachedHttp };\n//# sourceMappingURL=cached-http.provider.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-async-cache/cached-http.provider.js\n// module id = 185\n// module chunks = 0","import { NgModule } from '@angular/core';\nimport { LocalStorageDriver } from './drivers/local-storage-driver.provider';\nimport { MemoryDriver } from './drivers/memory-driver.provider';\nimport { AsyncCacheOptions } from './async-cache-options.provider';\nimport { AsyncCache } from './async-cache.provider';\nimport { AsyncCachePipe } from './async-cache.pipe';\nimport { CachedHttp } from './cached-http.provider';\nexport function memoryDriverFactory(options) {\n    return options.driver instanceof MemoryDriver ? options.driver : new MemoryDriver();\n}\nexport function localStorageDriverFactory(options) {\n    return options.driver instanceof LocalStorageDriver ? options.driver : new LocalStorageDriver();\n}\nexport function cacheOptionFactory() {\n    return new AsyncCacheOptions();\n}\nvar AsyncCacheModule = (function () {\n    function AsyncCacheModule() {\n    }\n    AsyncCacheModule.forRoot = function (cacheOptions) {\n        if (cacheOptions === void 0) { cacheOptions = {\n            provide: AsyncCacheOptions,\n            useFactory: cacheOptionFactory\n        }; }\n        return {\n            ngModule: AsyncCacheModule,\n            providers: [{\n                    provide: LocalStorageDriver,\n                    useFactory: localStorageDriverFactory,\n                    deps: [AsyncCacheOptions]\n                }, {\n                    provide: MemoryDriver,\n                    useFactory: memoryDriverFactory,\n                    deps: [AsyncCacheOptions]\n                },\n                cacheOptions,\n                AsyncCache,\n                CachedHttp\n            ]\n        };\n    };\n    AsyncCacheModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [AsyncCachePipe],\n                    exports: [AsyncCachePipe]\n                },] },\n    ];\n    /** @nocollapse */\n    AsyncCacheModule.ctorParameters = function () { return []; };\n    return AsyncCacheModule;\n}());\nexport { AsyncCacheModule };\n//# sourceMappingURL=async-cache.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-async-cache/async-cache.module.js\n// module id = null\n// module chunks = ","import { Pipe } from '@angular/core';\nimport { AsyncCache } from './async-cache.provider';\nvar AsyncCachePipe = (function () {\n    function AsyncCachePipe(asyncCache) {\n        this.asyncCache = asyncCache;\n    }\n    AsyncCachePipe.prototype.transform = function (value, cacheKey, options) {\n        return this.asyncCache.wrap(value, cacheKey, options);\n    };\n    AsyncCachePipe.decorators = [\n        { type: Pipe, args: [{\n                    name: 'asyncCache'\n                },] },\n    ];\n    /** @nocollapse */\n    AsyncCachePipe.ctorParameters = function () { return [\n        { type: AsyncCache, },\n    ]; };\n    return AsyncCachePipe;\n}());\nexport { AsyncCachePipe };\n//# sourceMappingURL=async-cache.pipe.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-async-cache/async-cache.pipe.js\n// module id = null\n// module chunks = ","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"./focus.directive\";\nimport * as i3 from \"./confirmationPopoverWindow.component\";\nimport * as i4 from \"./confirmationPopoverOptions.provider\";\nvar styles_ConfirmationPopoverWindow = [\".popover[_ngcontent-%COMP%] {\\n      display: block;\\n    }\\n    .bs-popover-top[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-popover-bottom[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%] {\\n      left: 50%;\\n    }\\n    .bs-popover-left[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%], .bs-popover-right[_ngcontent-%COMP%]   .arrow[_ngcontent-%COMP%] {\\n      top: 50%;\\n    }\\n    .btn[_ngcontent-%COMP%] {\\n      transition: none;\\n    }\"];\nvar RenderType_ConfirmationPopoverWindow = i0.ɵcrt({ encapsulation: 0, styles: styles_ConfirmationPopoverWindow, data: {} });\nexport { RenderType_ConfirmationPopoverWindow as RenderType_ConfirmationPopoverWindow };\nfunction View_ConfirmationPopoverWindow_2(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \"div\", [[\"class\", \"col-xs-6 col-6\"]], null, null, null, null, null)), i0.ɵdid(1, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵpod(2, { \"col-xs-offset-3 col-offset-3\": 0 }), (_l()(), i0.ɵted(-1, null, [\"\\n              \"])), (_l()(), i0.ɵeld(4, 0, null, null, 2, \"button\", [[\"type\", \"button\"]], [[8, \"className\", 0], [8, \"innerHTML\", 1]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (_v.parent.context.options.onConfirm({ clickEvent: $event }) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(5, 540672, null, 0, i2.Focus, [i0.ElementRef], { mwlFocus: [0, \"mwlFocus\"] }, null), (_l()(), i0.ɵted(-1, null, [\"\\n              \"])), (_l()(), i0.ɵted(-1, null, [\"\\n            \"]))], function (_ck, _v) { var currVal_0 = \"col-xs-6 col-6\"; var currVal_1 = _ck(_v, 2, 0, _v.parent.context.options.hideCancelButton); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_4 = (_v.parent.context.options.focusButton === \"confirm\"); _ck(_v, 5, 0, currVal_4); }, function (_ck, _v) { var currVal_2 = (\"btn btn-block btn-\" + _v.parent.context.options.confirmButtonType); var currVal_3 = _v.parent.context.options.confirmText; _ck(_v, 4, 0, currVal_2, currVal_3); }); }\nfunction View_ConfirmationPopoverWindow_3(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 7, \"div\", [[\"class\", \"col-xs-6 col-6\"]], null, null, null, null, null)), i0.ɵdid(1, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { klass: [0, \"klass\"], ngClass: [1, \"ngClass\"] }, null), i0.ɵpod(2, { \"col-xs-offset-3 col-offset-3\": 0 }), (_l()(), i0.ɵted(-1, null, [\"\\n              \"])), (_l()(), i0.ɵeld(4, 0, null, null, 2, \"button\", [[\"type\", \"button\"]], [[8, \"className\", 0], [8, \"innerHTML\", 1]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (_v.parent.context.options.onCancel({ clickEvent: $event }) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(5, 540672, null, 0, i2.Focus, [i0.ElementRef], { mwlFocus: [0, \"mwlFocus\"] }, null), (_l()(), i0.ɵted(-1, null, [\"\\n              \"])), (_l()(), i0.ɵted(-1, null, [\"\\n            \"]))], function (_ck, _v) { var currVal_0 = \"col-xs-6 col-6\"; var currVal_1 = _ck(_v, 2, 0, _v.parent.context.options.hideConfirmButton); _ck(_v, 1, 0, currVal_0, currVal_1); var currVal_4 = (_v.parent.context.options.focusButton === \"cancel\"); _ck(_v, 5, 0, currVal_4); }, function (_ck, _v) { var currVal_2 = (\"btn btn-block btn-\" + _v.parent.context.options.cancelButtonType); var currVal_3 = _v.parent.context.options.cancelText; _ck(_v, 4, 0, currVal_2, currVal_3); }); }\nfunction View_ConfirmationPopoverWindow_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵeld(1, 0, null, null, 21, \"div\", [], null, null, null, null, null)), i0.ɵdid(2, 278528, null, 0, i1.NgClass, [i0.IterableDiffers, i0.KeyValueDiffers, i0.ElementRef, i0.Renderer2], { ngClass: [0, \"ngClass\"] }, null), i0.ɵpad(3, 5), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"div\", [[\"class\", \"popover-arrow arrow\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵeld(7, 0, null, null, 0, \"h3\", [[\"class\", \"popover-title popover-header\"]], [[8, \"innerHTML\", 1]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵeld(9, 0, null, null, 12, \"div\", [[\"class\", \"popover-content popover-body\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(11, 0, null, null, 0, \"p\", [], [[8, \"innerHTML\", 1]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(13, 0, null, null, 7, \"div\", [[\"class\", \"row\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ConfirmationPopoverWindow_2)), i0.ɵdid(16, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵand(16777216, null, null, 1, null, View_ConfirmationPopoverWindow_3)), i0.ɵdid(19, 16384, null, 0, i1.NgIf, [i0.ViewContainerRef, i0.TemplateRef], { ngIf: [0, \"ngIf\"] }, null), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵted(-1, null, [\"\\n    \"]))], function (_ck, _v) { var currVal_0 = _ck(_v, 3, 0, \"popover\", _v.context.options.placement, (\"popover-\" + _v.context.options.placement), (\"bs-popover-\" + _v.context.options.placement), _v.context.options.popoverClass); _ck(_v, 2, 0, currVal_0); var currVal_3 = !_v.context.options.hideConfirmButton; _ck(_v, 16, 0, currVal_3); var currVal_4 = !_v.context.options.hideCancelButton; _ck(_v, 19, 0, currVal_4); }, function (_ck, _v) { var currVal_1 = _v.context.options.title; _ck(_v, 7, 0, currVal_1); var currVal_2 = _v.context.options.message; _ck(_v, 11, 0, currVal_2); }); }\nfunction View_ConfirmationPopoverWindow_4(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(-1, null, [\"\\n    \"]))], null, null); }\nexport function View_ConfirmationPopoverWindow_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵand(0, [[\"defaultTemplate\", 2]], null, 0, null, View_ConfirmationPopoverWindow_1)), (_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_ConfirmationPopoverWindow_4)), i0.ɵdid(4, 540672, null, 0, i1.NgTemplateOutlet, [i0.ViewContainerRef], { ngTemplateOutletContext: [0, \"ngTemplateOutletContext\"], ngTemplateOutlet: [1, \"ngTemplateOutlet\"] }, null), i0.ɵpod(5, { options: 0 }), (_l()(), i0.ɵted(-1, null, [\"\\n  \"]))], function (_ck, _v) { var _co = _v.component; var currVal_0 = _ck(_v, 5, 0, _co.options); var currVal_1 = (_co.options.customTemplate || i0.ɵnov(_v, 1)); _ck(_v, 4, 0, currVal_0, currVal_1); }, null); }\nexport function View_ConfirmationPopoverWindow_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"ng-component\", [], null, null, null, View_ConfirmationPopoverWindow_0, RenderType_ConfirmationPopoverWindow)), i0.ɵdid(1, 4243456, null, 0, i3.ConfirmationPopoverWindow, [i4.ConfirmationPopoverWindowOptions], null, null)], null, null); }\nvar ConfirmationPopoverWindowNgFactory = i0.ɵccf(\"ng-component\", i3.ConfirmationPopoverWindow, View_ConfirmationPopoverWindow_Host_0, {}, {}, []);\nexport { ConfirmationPopoverWindowNgFactory as ConfirmationPopoverWindowNgFactory };\n//# sourceMappingURL=confirmationPopoverWindow.component.ngfactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopoverWindow.component.ngfactory.js\n// module id = 188\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar mergeMap_1 = require('../../operator/mergeMap');\nObservable_1.Observable.prototype.mergeMap = mergeMap_1.mergeMap;\nObservable_1.Observable.prototype.flatMap = mergeMap_1.mergeMap;\n//# sourceMappingURL=mergeMap.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/operator/mergeMap.js\n// module id = 189\n// module chunks = 0","import { NgModule, InjectionToken } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Positioning } from 'positioning';\nimport { ConfirmationPopover } from './confirmationPopover.directive';\nimport { ConfirmationPopoverWindow } from './confirmationPopoverWindow.component';\nimport { Focus } from './focus.directive';\nimport { ConfirmationPopoverOptions } from './confirmationPopoverOptions.provider';\nexport var USER_OPTIONS = new InjectionToken('confirmation popover user options');\nexport function optionsFactory(userOptions) {\n    var options = new ConfirmationPopoverOptions();\n    Object.assign(options, userOptions);\n    return options;\n}\nvar ConfirmationPopoverModule = (function () {\n    function ConfirmationPopoverModule() {\n    }\n    ConfirmationPopoverModule.forRoot = function (options) {\n        if (options === void 0) { options = {}; }\n        return {\n            ngModule: ConfirmationPopoverModule,\n            providers: [{\n                    provide: USER_OPTIONS,\n                    useValue: options\n                }, {\n                    provide: ConfirmationPopoverOptions,\n                    useFactory: optionsFactory,\n                    deps: [USER_OPTIONS]\n                }, Positioning]\n        };\n    };\n    ConfirmationPopoverModule.decorators = [\n        { type: NgModule, args: [{\n                    declarations: [ConfirmationPopover, ConfirmationPopoverWindow, Focus],\n                    imports: [CommonModule],\n                    exports: [ConfirmationPopover, Focus],\n                    entryComponents: [ConfirmationPopoverWindow]\n                },] },\n    ];\n    /** @nocollapse */\n    ConfirmationPopoverModule.ctorParameters = function () { return []; };\n    return ConfirmationPopoverModule;\n}());\nexport { ConfirmationPopoverModule };\n//# sourceMappingURL=confirmationPopover.module.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopover.module.js\n// module id = 190\n// module chunks = 0","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ConfirmationPopoverModule } from 'angular-confirmation-popover';\nimport {\n  AsyncCacheModule,\n  LocalStorageDriver,\n  AsyncCacheOptions\n} from 'angular-async-cache';\nimport { OrderBy } from './order-by.pipe';\nimport { Replace } from './replace.pipe';\nimport { SortableHeaderComponent } from './sortable-header.directive';\nimport { LocalStorage } from './local-storage.provider';\nimport { TVMaze } from './tv-maze.provider';\nimport { ShowListComponent } from './show-list.component';\n\nexport function asyncCacheOptionsFactory(): AsyncCacheOptions {\n  return new AsyncCacheOptions({\n    driver: new LocalStorageDriver(),\n    fromCacheAndReplay: true\n  });\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ConfirmationPopoverModule.forRoot({\n      confirmButtonType: 'danger',\n      cancelButtonType: 'secondary'\n    }),\n    HttpClientModule,\n    AsyncCacheModule.forRoot({\n      provide: AsyncCacheOptions,\n      useFactory: asyncCacheOptionsFactory\n    })\n  ],\n  declarations: [OrderBy, Replace, SortableHeaderComponent, ShowListComponent],\n  exports: [\n    OrderBy,\n    Replace,\n    SortableHeaderComponent,\n    ShowListComponent,\n    CommonModule\n  ],\n  providers: [\n    // if these held any state they should be instantiated by the root module\n    LocalStorage,\n    TVMaze\n  ]\n})\nexport class SharedModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/shared/index.ts","import { Component, } from '@angular/core';\nimport { ConfirmationPopoverWindowOptions } from './confirmationPopoverOptions.provider';\n/**\n * @private\n */\nvar ConfirmationPopoverWindow = (function () {\n    function ConfirmationPopoverWindow(options) {\n        this.options = options;\n    }\n    ConfirmationPopoverWindow.prototype.ngAfterViewInit = function () {\n        this.options.onAfterViewInit();\n    };\n    ConfirmationPopoverWindow.decorators = [\n        { type: Component, args: [{\n                    styles: [\"\\n    .popover {\\n      display: block;\\n    }\\n    .bs-popover-top .arrow, .bs-popover-bottom .arrow {\\n      left: 50%;\\n    }\\n    .bs-popover-left .arrow, .bs-popover-right .arrow {\\n      top: 50%;\\n    }\\n    .btn {\\n      transition: none;\\n    }\\n  \"],\n                    template: \"\\n    <ng-template #defaultTemplate let-options=\\\"options\\\">\\n      <div [ngClass]=\\\"[\\n        'popover',\\n        options.placement,\\n        'popover-' + options.placement,\\n        'bs-popover-' + options.placement,\\n        options.popoverClass\\n      ]\\\">\\n        <div class=\\\"popover-arrow arrow\\\"></div>\\n        <h3 class=\\\"popover-title popover-header\\\" [innerHTML]=\\\"options.title\\\"></h3>\\n        <div class=\\\"popover-content popover-body\\\">\\n          <p [innerHTML]=\\\"options.message\\\"></p>\\n          <div class=\\\"row\\\">\\n            <div\\n              class=\\\"col-xs-6 col-6\\\"\\n              [ngClass]=\\\"{'col-xs-offset-3 col-offset-3': options.hideCancelButton}\\\"\\n              *ngIf=\\\"!options.hideConfirmButton\\\">\\n              <button\\n                type=\\\"button\\\"\\n                [mwlFocus]=\\\"options.focusButton === 'confirm'\\\"\\n                [class]=\\\"'btn btn-block btn-' + options.confirmButtonType\\\"\\n                (click)=\\\"options.onConfirm({clickEvent: $event})\\\"\\n                [innerHtml]=\\\"options.confirmText\\\">\\n              </button>\\n            </div>\\n            <div\\n              class=\\\"col-xs-6 col-6\\\"\\n              [ngClass]=\\\"{'col-xs-offset-3 col-offset-3': options.hideConfirmButton}\\\"\\n              *ngIf=\\\"!options.hideCancelButton\\\">\\n              <button\\n                type=\\\"button\\\"\\n                [mwlFocus]=\\\"options.focusButton === 'cancel'\\\"\\n                [class]=\\\"'btn btn-block btn-' + options.cancelButtonType\\\"\\n                (click)=\\\"options.onCancel({clickEvent: $event})\\\"\\n                [innerHtml]=\\\"options.cancelText\\\">\\n              </button>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"options.customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{options: options}\\\">\\n    </ng-template>\\n  \"\n                },] },\n    ];\n    /** @nocollapse */\n    ConfirmationPopoverWindow.ctorParameters = function () { return [\n        { type: ConfirmationPopoverWindowOptions, },\n    ]; };\n    return ConfirmationPopoverWindow;\n}());\nexport { ConfirmationPopoverWindow };\n//# sourceMappingURL=confirmationPopoverWindow.component.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopoverWindow.component.js\n// module id = 193\n// module chunks = 0","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'th[mwlSortableHeader]', // tslint:disable-line\n  template: `\n    <div (click)=\"headerClicked()\">\n      <i class=\"fa fa-sort\" [hidden]=\"sort.field === fieldName\"></i>\n      <i class=\"fa fa-sort-asc\" [hidden]=\"sort.field !== fieldName || sort.desc\"></i>\n      <i class=\"fa fa-sort-desc\" [hidden]=\"sort.field !== fieldName || !sort.desc\"></i>\n      <ng-content></ng-content>\n    </div>\n  `,\n  styles: [\n    `\n    div {\n      cursor: pointer;\n      width: 80px;\n    }\n  `\n  ]\n})\nexport class SortableHeaderComponent {\n  @Input('mwlSortableHeader') fieldName: string; // tslint:disable-line\n  @Input() sort: { field: string | null; desc: boolean };\n\n  headerClicked(): void {\n    if (this.sort.field === this.fieldName) {\n      if (this.sort.desc === true) {\n        this.sort.desc = false;\n        this.sort.field = null;\n      } else {\n        this.sort.desc = true;\n      }\n    } else {\n      this.sort.field = this.fieldName;\n      this.sort.desc = false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/shared/sortable-header.directive.ts","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnChanges\n} from '@angular/core';\nimport { TVMaze } from './tv-maze.provider';\nimport { LocalStorage } from './local-storage.provider';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/forkJoin';\nimport { Show, Episode } from './../../interfaces';\n\n@Component({\n  selector: 'mwl-show-list',\n  template: `\n    <table class=\"table\" [hidden]=\"!shows || shows.length === 0\">\n      <thead>\n        <tr>\n          <th mwlSortableHeader=\"name\" [sort]=\"sort\">Name</th>\n          <th>Image</th>\n          <th mwlSortableHeader=\"network.name\" [sort]=\"sort\">Network</th>\n          <th>Summary</th>\n          <th mwlSortableHeader=\"status\" [sort]=\"sort\">Status</th>\n          <th mwlSortableHeader=\"nextEpisode.airstamp\" [sort]=\"sort\">Next episode</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let show of shows | mwlOrderBy:sort.field:sort.desc\" [hidden]=\"!show.image?.medium\">\n          <td>{{ show.name }}</td>\n          <td>\n            <img [src]=\"show.image?.medium | mwlReplace:'http://':'https://'\" width=\"60\">\n          </td>\n          <td>{{ show.network?.name }}</td>\n          <td [innerHtml]=\"show.summary\"></td>\n          <td>\n            <span\n              class=\"badge\"\n              [class.badge-success]=\"show.status === 'Running'\"\n              [class.badge-danger]=\"show.status !== 'Running'\">\n               {{ show.status }}\n             </span>\n          </td>\n          <td>\n            <span [hidden]=\"!show?.nextEpisode?.airstamp\">{{ show?.nextEpisode?.airstamp | date:'fullDate' }}</span>\n            <span [hidden]=\"show?.nextEpisode?.airstamp\">Unknown</span>\n          </td>\n          <td style=\"width: 270px\">\n            <button class=\"btn btn-success\" (click)=\"subscribe(show)\" [hidden]=\"isSubscribed(show)\">\n              Subscribe\n            </button>\n            <button\n              class=\"btn btn-danger\"\n              [hidden]=\"!isSubscribed(show)\"\n              mwlConfirmationPopover\n              title=\"Unsubscribe\"\n              message=\"Are you sure you would like to unsubscribe from this show?\"\n              (confirm)=\"unsubscribeFromShow(show)\">\n              Unsubscribe\n            </button>\n            <button class=\"btn btn-info\" [routerLink]=\"['/episodes', show.id]\">\n              Episodes\n            </button>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  `\n})\nexport class ShowListComponent implements OnChanges {\n  @Input() public shows: Show[];\n  @Output() public unsubscribe: EventEmitter<any> = new EventEmitter();\n  public subscribedShows: Show[];\n  public sort: { field: string | null; desc: boolean } = {\n    field: null,\n    desc: false\n  };\n\n  constructor(private localStorage: LocalStorage, private tvMaze: TVMaze) {\n    this.subscribedShows = localStorage.getItem('subscribedShows', []);\n  }\n\n  subscribe(show: Show): void {\n    this.subscribedShows.push(show);\n    this.localStorage.setItem('subscribedShows', this.subscribedShows);\n  }\n\n  isSubscribed(show: Show): boolean {\n    return this.subscribedShows.some(\n      (subscribedShow: Show) => subscribedShow.id === show.id\n    );\n  }\n\n  unsubscribeFromShow(show: Show): void {\n    this.subscribedShows = this.subscribedShows.filter(\n      (subscribedShow: Show) => subscribedShow.id !== show.id\n    );\n    this.localStorage.setItem('subscribedShows', this.subscribedShows);\n    this.unsubscribe.emit(show);\n  }\n\n  ngOnChanges(changeRecord: any): void {\n    if (changeRecord.shows && this.shows) {\n      const episodeRequests: Array<Observable<any>> = this.shows.map(\n        (show: Show) => this.tvMaze.getEpisodes(show.id)\n      );\n\n      Observable.forkJoin(episodeRequests).subscribe(\n        (showEpisodes: Episode[][]) => {\n          showEpisodes.forEach((episodes: Episode[], showIndex: number) => {\n            this.shows[showIndex].nextEpisode = episodes.find(\n              (episode: Episode) => {\n                return new Date(episode.airstamp).getTime() > Date.now();\n              }\n            );\n          });\n        }\n      );\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/shared/show-list.component.ts","import { Directive, ElementRef, Input } from '@angular/core';\n/**\n * A helper directive to focus buttons. You will only need this if using a custom template\n */\nvar Focus = (function () {\n    function Focus(elm) {\n        this.elm = elm;\n    }\n    Focus.prototype.ngOnChanges = function (changes) {\n        if (changes.mwlFocus && this.mwlFocus === true) {\n            this.elm.nativeElement.focus();\n        }\n    };\n    Focus.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mwlFocus]'\n                },] },\n    ];\n    /** @nocollapse */\n    Focus.ctorParameters = function () { return [\n        { type: ElementRef, },\n    ]; };\n    Focus.propDecorators = {\n        'mwlFocus': [{ type: Input },],\n    };\n    return Focus;\n}());\nexport { Focus };\n//# sourceMappingURL=focus.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-confirmation-popover/dist/esm/src/focus.directive.js\n// module id = 202\n// module chunks = 0","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-confirmation-popover/dist/esm/src/confirmationPopover.directive\";\nimport * as i2 from \"angular-confirmation-popover/dist/esm/src/confirmationPopoverOptions.provider\";\nimport * as i3 from \"positioning/dist/positioning\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"./order-by.pipe\";\nimport * as i7 from \"./replace.pipe\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"./sortable-header.directive.ngfactory\";\nimport * as i10 from \"./sortable-header.directive\";\nimport * as i11 from \"./show-list.component\";\nimport * as i12 from \"./local-storage.provider\";\nimport * as i13 from \"./tv-maze.provider\";\nvar styles_ShowListComponent = [];\nvar RenderType_ShowListComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_ShowListComponent, data: {} });\nexport { RenderType_ShowListComponent as RenderType_ShowListComponent };\nfunction View_ShowListComponent_1(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 46, \"tr\", [], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(2, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(3, null, [\"\", \"\"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(5, 0, null, null, 4, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵeld(7, 0, null, null, 1, \"img\", [[\"width\", \"60\"]], [[8, \"src\", 4]], null, null, null, null)), i0.ɵppd(8, 3), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(11, 0, null, null, 1, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(12, null, [\"\", \"\"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(14, 0, null, null, 0, \"td\", [], [[8, \"innerHTML\", 1]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(16, 0, null, null, 4, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵeld(18, 0, null, null, 1, \"span\", [[\"class\", \"badge\"]], [[2, \"badge-success\", null], [2, \"badge-danger\", null]], null, null, null, null)), (_l()(), i0.ɵted(19, null, [\"\\n               \", \"\\n             \"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(22, 0, null, null, 8, \"td\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵeld(24, 0, null, null, 2, \"span\", [], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), i0.ɵted(25, null, [\"\", \"\"])), i0.ɵppd(26, 2), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵeld(28, 0, null, null, 1, \"span\", [], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Unknown\"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(32, 0, null, null, 13, \"td\", [[\"style\", \"width: 270px\"]], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵeld(34, 0, null, null, 1, \"button\", [[\"class\", \"btn btn-success\"]], [[8, \"hidden\", 0]], [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.subscribe(_v.context.$implicit) !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n              Subscribe\\n            \"])), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵeld(37, 16777216, null, null, 2, \"button\", [[\"class\", \"btn btn-danger\"], [\"message\", \"Are you sure you would like to unsubscribe from this show?\"], [\"mwlConfirmationPopover\", \"\"], [\"title\", \"Unsubscribe\"]], [[8, \"hidden\", 0]], [[null, \"confirm\"], [null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 38).togglePopover() !== false);\n        ad = (pd_0 && ad);\n    } if ((\"confirm\" === en)) {\n        var pd_1 = (_co.unsubscribeFromShow(_v.context.$implicit) !== false);\n        ad = (pd_1 && ad);\n    } return ad; }, null, null)), i0.ɵdid(38, 737280, null, 0, i1.ConfirmationPopover, [i0.ViewContainerRef, i0.ElementRef, i2.ConfirmationPopoverOptions, i0.ComponentFactoryResolver, i3.Positioning, i0.Renderer2, i4.DOCUMENT], { title: [0, \"title\"], message: [1, \"message\"] }, { confirm: \"confirm\" }), (_l()(), i0.ɵted(-1, null, [\"\\n              Unsubscribe\\n            \"])), (_l()(), i0.ɵted(-1, null, [\"\\n            \"])), (_l()(), i0.ɵeld(41, 0, null, null, 3, \"button\", [[\"class\", \"btn btn-info\"]], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; if ((\"click\" === en)) {\n        var pd_0 = (i0.ɵnov(_v, 42).onClick() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), i0.ɵdid(42, 16384, null, 0, i5.RouterLink, [i5.Router, i5.ActivatedRoute, [8, null], i0.Renderer2, i0.ElementRef], { routerLink: [0, \"routerLink\"] }, null), i0.ɵpad(43, 2), (_l()(), i0.ɵted(-1, null, [\"\\n              Episodes\\n            \"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵted(-1, null, [\"\\n        \"]))], function (_ck, _v) { var currVal_13 = \"Unsubscribe\"; var currVal_14 = \"Are you sure you would like to unsubscribe from this show?\"; _ck(_v, 38, 0, currVal_13, currVal_14); var currVal_15 = _ck(_v, 43, 0, \"/episodes\", _v.context.$implicit.id); _ck(_v, 42, 0, currVal_15); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = !((_v.context.$implicit.image == null) ? null : _v.context.$implicit.image.medium); _ck(_v, 0, 0, currVal_0); var currVal_1 = _v.context.$implicit.name; _ck(_v, 3, 0, currVal_1); var currVal_2 = i0.ɵunv(_v, 7, 0, _ck(_v, 8, 0, i0.ɵnov(_v.parent, 1), ((_v.context.$implicit.image == null) ? null : _v.context.$implicit.image.medium), \"http://\", \"https://\")); _ck(_v, 7, 0, currVal_2); var currVal_3 = ((_v.context.$implicit.network == null) ? null : _v.context.$implicit.network.name); _ck(_v, 12, 0, currVal_3); var currVal_4 = _v.context.$implicit.summary; _ck(_v, 14, 0, currVal_4); var currVal_5 = (_v.context.$implicit.status === \"Running\"); var currVal_6 = (_v.context.$implicit.status !== \"Running\"); _ck(_v, 18, 0, currVal_5, currVal_6); var currVal_7 = _v.context.$implicit.status; _ck(_v, 19, 0, currVal_7); var currVal_8 = !((_v.context.$implicit == null) ? null : ((_v.context.$implicit.nextEpisode == null) ? null : _v.context.$implicit.nextEpisode.airstamp)); _ck(_v, 24, 0, currVal_8); var currVal_9 = i0.ɵunv(_v, 25, 0, _ck(_v, 26, 0, i0.ɵnov(_v.parent, 2), ((_v.context.$implicit == null) ? null : ((_v.context.$implicit.nextEpisode == null) ? null : _v.context.$implicit.nextEpisode.airstamp)), \"fullDate\")); _ck(_v, 25, 0, currVal_9); var currVal_10 = ((_v.context.$implicit == null) ? null : ((_v.context.$implicit.nextEpisode == null) ? null : _v.context.$implicit.nextEpisode.airstamp)); _ck(_v, 28, 0, currVal_10); var currVal_11 = _co.isSubscribed(_v.context.$implicit); _ck(_v, 34, 0, currVal_11); var currVal_12 = !_co.isSubscribed(_v.context.$implicit); _ck(_v, 37, 0, currVal_12); }); }\nexport function View_ShowListComponent_0(_l) { return i0.ɵvid(0, [i0.ɵpid(0, i6.OrderBy, []), i0.ɵpid(0, i7.Replace, []), i0.ɵpid(0, i8.DatePipe, [i0.LOCALE_ID]), (_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵeld(4, 0, null, null, 38, \"table\", [[\"class\", \"table\"]], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵeld(6, 0, null, null, 28, \"thead\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵeld(8, 0, null, null, 25, \"tr\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(10, 0, null, null, 2, \"th\", [[\"mwlSortableHeader\", \"name\"]], null, null, null, i9.View_SortableHeaderComponent_0, i9.RenderType_SortableHeaderComponent)), i0.ɵdid(11, 49152, null, 0, i10.SortableHeaderComponent, [], { fieldName: [0, \"fieldName\"], sort: [1, \"sort\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Name\"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(14, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Image\"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(17, 0, null, null, 2, \"th\", [[\"mwlSortableHeader\", \"network.name\"]], null, null, null, i9.View_SortableHeaderComponent_0, i9.RenderType_SortableHeaderComponent)), i0.ɵdid(18, 49152, null, 0, i10.SortableHeaderComponent, [], { fieldName: [0, \"fieldName\"], sort: [1, \"sort\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Network\"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(21, 0, null, null, 1, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"Summary\"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(24, 0, null, null, 2, \"th\", [[\"mwlSortableHeader\", \"status\"]], null, null, null, i9.View_SortableHeaderComponent_0, i9.RenderType_SortableHeaderComponent)), i0.ɵdid(25, 49152, null, 0, i10.SortableHeaderComponent, [], { fieldName: [0, \"fieldName\"], sort: [1, \"sort\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Status\"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(28, 0, null, null, 2, \"th\", [[\"mwlSortableHeader\", \"nextEpisode.airstamp\"]], null, null, null, i9.View_SortableHeaderComponent_0, i9.RenderType_SortableHeaderComponent)), i0.ɵdid(29, 49152, null, 0, i10.SortableHeaderComponent, [], { fieldName: [0, \"fieldName\"], sort: [1, \"sort\"] }, null), (_l()(), i0.ɵted(-1, 0, [\"Next episode\"])), (_l()(), i0.ɵted(-1, null, [\"\\n          \"])), (_l()(), i0.ɵeld(32, 0, null, null, 0, \"th\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵeld(36, 0, null, null, 5, \"tbody\", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n        \"])), (_l()(), i0.ɵand(16777216, null, null, 2, null, View_ShowListComponent_1)), i0.ɵdid(39, 802816, null, 0, i8.NgForOf, [i0.ViewContainerRef, i0.TemplateRef, i0.IterableDiffers], { ngForOf: [0, \"ngForOf\"] }, null), i0.ɵppd(40, 3), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵted(-1, null, [\"\\n  \"]))], function (_ck, _v) { var _co = _v.component; var currVal_1 = \"name\"; var currVal_2 = _co.sort; _ck(_v, 11, 0, currVal_1, currVal_2); var currVal_3 = \"network.name\"; var currVal_4 = _co.sort; _ck(_v, 18, 0, currVal_3, currVal_4); var currVal_5 = \"status\"; var currVal_6 = _co.sort; _ck(_v, 25, 0, currVal_5, currVal_6); var currVal_7 = \"nextEpisode.airstamp\"; var currVal_8 = _co.sort; _ck(_v, 29, 0, currVal_7, currVal_8); var currVal_9 = i0.ɵunv(_v, 39, 0, _ck(_v, 40, 0, i0.ɵnov(_v, 0), _co.shows, _co.sort.field, _co.sort.desc)); _ck(_v, 39, 0, currVal_9); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = (!_co.shows || (_co.shows.length === 0)); _ck(_v, 4, 0, currVal_0); }); }\nexport function View_ShowListComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"mwl-show-list\", [], null, null, null, View_ShowListComponent_0, RenderType_ShowListComponent)), i0.ɵdid(1, 573440, null, 0, i11.ShowListComponent, [i12.LocalStorage, i13.TVMaze], null, null)], null, null); }\nvar ShowListComponentNgFactory = i0.ɵccf(\"mwl-show-list\", i11.ShowListComponent, View_ShowListComponent_Host_0, { shows: \"shows\" }, { unsubscribe: \"unsubscribe\" }, []);\nexport { ShowListComponentNgFactory as ShowListComponentNgFactory };\n//# sourceMappingURL=show-list.component.ngfactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/shared/show-list.component.ngfactory.js\n// module id = null\n// module chunks = ","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'mwlReplace'\n})\nexport class Replace implements PipeTransform {\n  transform(\n    input: string = '',\n    find: string = '',\n    replaceWith: string = ''\n  ): string {\n    return input.replace(find, replaceWith);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/shared/replace.pipe.ts","import { Directive, Input, Output, EventEmitter, HostListener, ViewContainerRef, ElementRef, ReflectiveInjector, ComponentFactoryResolver, Inject, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/platform-browser';\nimport { ConfirmationPopoverWindow } from './confirmationPopoverWindow.component';\nimport { ConfirmationPopoverOptions, ConfirmationPopoverWindowOptions } from './confirmationPopoverOptions.provider';\nimport { Positioning } from 'positioning';\n/**\n * All properties can be set on the directive as attributes like so (use `ConfirmationPopoverModule.forRoot()` to configure them globally):\n * ```html\n * <button\n *  class=\"btn btn-default\"\n *  mwlConfirmationPopover\n *  [title]=\"title\"\n *  [message]=\"message\"\n *  placement=\"left\"\n *  (confirm)=\"confirmClicked = true\"\n *  (cancel)=\"cancelClicked = true\"\n *  [(isOpen)]=\"isOpen\">\n *   Show confirm popover!\n * </button>\n * ```\n */\nvar ConfirmationPopover = (function () {\n    /**\n     * @private\n     */\n    function ConfirmationPopover(viewContainerRef, elm, defaultOptions, cfr, position, renderer, document //tslint:disable-line\n    ) {\n        this.viewContainerRef = viewContainerRef;\n        this.elm = elm;\n        this.defaultOptions = defaultOptions;\n        this.cfr = cfr;\n        this.position = position;\n        this.renderer = renderer;\n        this.document = document; //tslint:disable-line\n        /**\n         * Whether to disable showing the popover. Default `false`.\n         */\n        this.isDisabled = false;\n        /**\n         * Will open or show the popover when changed.\n         * Can be sugared with `isOpenChange` to emulate 2-way binding like so `[(isOpen)]=\"isOpen\"`\n         */\n        this.isOpen = false;\n        /**\n         * Will emit when the popover is opened or closed\n         */\n        this.isOpenChange = new EventEmitter(true);\n        /**\n         * An expression that is called when the confirm button is clicked.\n         */\n        this.confirm = new EventEmitter();\n        /**\n         * An expression that is called when the cancel button is clicked.\n         */\n        this.cancel = new EventEmitter();\n        /**\n         * @private\n         */\n        this.popover = null;\n        /**\n         * @private\n         */\n        this.eventListeners = [];\n    }\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.ngOnInit = function () {\n        this.isOpenChange.emit(false);\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.ngOnChanges = function (changes) {\n        if (changes.isOpen) {\n            if (changes.isOpen.currentValue === true) {\n                this.showPopover();\n            }\n            else {\n                this.hidePopover();\n            }\n        }\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.ngOnDestroy = function () {\n        this.hidePopover();\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.onConfirm = function (event) {\n        this.confirm.emit(event);\n        this.hidePopover();\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.onCancel = function (event) {\n        this.cancel.emit(event);\n        this.hidePopover();\n    };\n    /**\n     * @private\n     */\n    ConfirmationPopover.prototype.togglePopover = function () {\n        if (!this.popover) {\n            this.showPopover();\n        }\n        else {\n            this.hidePopover();\n        }\n    };\n    ConfirmationPopover.prototype.onDocumentClick = function (event) {\n        if (this.popover && !this.elm.nativeElement.contains(event.target) && !this.popover.location.nativeElement.contains(event.target)) {\n            this.hidePopover();\n        }\n    };\n    ConfirmationPopover.prototype.showPopover = function () {\n        var _this = this;\n        if (!this.popover && !this.isDisabled) {\n            this.eventListeners = [\n                this.renderer.listen('document', 'click', function (event) { return _this.onDocumentClick(event); }),\n                this.renderer.listen('document', 'touchend', function (event) { return _this.onDocumentClick(event); }),\n                this.renderer.listen('window', 'resize', function () { return _this.positionPopover(); })\n            ];\n            var options_1 = new ConfirmationPopoverWindowOptions();\n            Object.assign(options_1, this.defaultOptions, {\n                title: this.popoverTitle || this.title,\n                message: this.popoverMessage || this.message,\n                onConfirm: function (event) {\n                    _this.onConfirm(event);\n                },\n                onCancel: function (event) {\n                    _this.onCancel(event);\n                },\n                onAfterViewInit: function () {\n                    _this.positionPopover();\n                }\n            });\n            var optionalParams = [\n                'confirmText',\n                'cancelText',\n                'placement',\n                'confirmButtonType',\n                'cancelButtonType',\n                'focusButton',\n                'hideConfirmButton',\n                'hideCancelButton',\n                'popoverClass',\n                'appendToBody',\n                'customTemplate'\n            ];\n            optionalParams.forEach(function (param) {\n                if (typeof _this[param] !== 'undefined') {\n                    options_1[param] = _this[param];\n                }\n            });\n            var componentFactory = this.cfr.resolveComponentFactory(ConfirmationPopoverWindow);\n            var binding = ReflectiveInjector.resolve([{\n                    provide: ConfirmationPopoverWindowOptions,\n                    useValue: options_1\n                }]);\n            var contextInjector = this.viewContainerRef.parentInjector;\n            var childInjector = ReflectiveInjector.fromResolvedProviders(binding, contextInjector);\n            this.popover = this.viewContainerRef.createComponent(componentFactory, this.viewContainerRef.length, childInjector);\n            if (options_1.appendToBody) {\n                this.document.body.appendChild(this.popover.location.nativeElement);\n            }\n            this.isOpenChange.emit(true);\n        }\n    };\n    ConfirmationPopover.prototype.positionPopover = function () {\n        if (this.popover) {\n            var popoverElement = this.popover.location.nativeElement.children[0];\n            var popoverPosition = this.position.positionElements(this.elm.nativeElement, popoverElement, this.placement || this.defaultOptions.placement, this.appendToBody || this.defaultOptions.appendToBody);\n            this.renderer.setStyle(popoverElement, 'top', popoverPosition.top + \"px\");\n            this.renderer.setStyle(popoverElement, 'left', popoverPosition.left + \"px\");\n        }\n    };\n    ConfirmationPopover.prototype.hidePopover = function () {\n        if (this.popover) {\n            this.popover.destroy();\n            this.popover = null;\n            this.isOpenChange.emit(false);\n            this.eventListeners.forEach(function (fn) { return fn(); });\n            this.eventListeners = [];\n        }\n    };\n    ConfirmationPopover.decorators = [\n        { type: Directive, args: [{\n                    selector: '[mwlConfirmationPopover]'\n                },] },\n    ];\n    /** @nocollapse */\n    ConfirmationPopover.ctorParameters = function () { return [\n        { type: ViewContainerRef, },\n        { type: ElementRef, },\n        { type: ConfirmationPopoverOptions, },\n        { type: ComponentFactoryResolver, },\n        { type: Positioning, },\n        { type: Renderer2, },\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n    ]; };\n    ConfirmationPopover.propDecorators = {\n        'title': [{ type: Input },],\n        'popoverTitle': [{ type: Input },],\n        'message': [{ type: Input },],\n        'popoverMessage': [{ type: Input },],\n        'confirmText': [{ type: Input },],\n        'cancelText': [{ type: Input },],\n        'placement': [{ type: Input },],\n        'confirmButtonType': [{ type: Input },],\n        'cancelButtonType': [{ type: Input },],\n        'focusButton': [{ type: Input },],\n        'hideConfirmButton': [{ type: Input },],\n        'hideCancelButton': [{ type: Input },],\n        'isDisabled': [{ type: Input },],\n        'isOpen': [{ type: Input },],\n        'customTemplate': [{ type: Input },],\n        'isOpenChange': [{ type: Output },],\n        'confirm': [{ type: Output },],\n        'cancel': [{ type: Output },],\n        'popoverClass': [{ type: Input },],\n        'appendToBody': [{ type: Input },],\n        'togglePopover': [{ type: HostListener, args: ['click',] },],\n    };\n    return ConfirmationPopover;\n}());\nexport { ConfirmationPopover };\n//# sourceMappingURL=confirmationPopover.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/angular-confirmation-popover/dist/esm/src/confirmationPopover.directive.js\n// module id = 204\n// module chunks = 0","import { Pipe, PipeTransform } from '@angular/core';\nimport get from 'lodash.get';\n\n@Pipe({\n  name: 'mwlOrderBy'\n})\nexport class OrderBy implements PipeTransform {\n  transform(input: object[], field: string, desc: boolean = false): object[] {\n    if (input && field) {\n      return Array.from(input).sort((a: object, b: object) => {\n        if (get(a, field) < get(b, field)) {\n          return desc ? 1 : -1;\n        }\n        if (get(a, field) > get(b, field)) {\n          return desc ? -1 : 1;\n        }\n        return 0;\n      });\n    }\n    return input;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/modules/shared/order-by.pipe.ts","/**\n * @fileoverview This file was generated by the Angular template compiler. Do not edit.\n *\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}\n * tslint:disable\n */ \nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./sortable-header.directive\";\nvar styles_SortableHeaderComponent = [\"div[_ngcontent-%COMP%] {\\n      cursor: pointer;\\n      width: 80px;\\n    }\"];\nvar RenderType_SortableHeaderComponent = i0.ɵcrt({ encapsulation: 0, styles: styles_SortableHeaderComponent, data: {} });\nexport { RenderType_SortableHeaderComponent as RenderType_SortableHeaderComponent };\nexport function View_SortableHeaderComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵeld(1, 0, null, null, 9, \"div\", [], null, [[null, \"click\"]], function (_v, en, $event) { var ad = true; var _co = _v.component; if ((\"click\" === en)) {\n        var pd_0 = (_co.headerClicked() !== false);\n        ad = (pd_0 && ad);\n    } return ad; }, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵeld(3, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-sort\"]], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵeld(5, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-sort-asc\"]], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), (_l()(), i0.ɵeld(7, 0, null, null, 0, \"i\", [[\"class\", \"fa fa-sort-desc\"]], [[8, \"hidden\", 0]], null, null, null, null)), (_l()(), i0.ɵted(-1, null, [\"\\n      \"])), i0.ɵncd(null, 0), (_l()(), i0.ɵted(-1, null, [\"\\n    \"])), (_l()(), i0.ɵted(-1, null, [\"\\n  \"]))], null, function (_ck, _v) { var _co = _v.component; var currVal_0 = (_co.sort.field === _co.fieldName); _ck(_v, 3, 0, currVal_0); var currVal_1 = ((_co.sort.field !== _co.fieldName) || _co.sort.desc); _ck(_v, 5, 0, currVal_1); var currVal_2 = ((_co.sort.field !== _co.fieldName) || !_co.sort.desc); _ck(_v, 7, 0, currVal_2); }); }\nexport function View_SortableHeaderComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, \"th\", [[\"mwlSortableHeader\", \"\"]], null, null, null, View_SortableHeaderComponent_0, RenderType_SortableHeaderComponent)), i0.ɵdid(1, 49152, null, 0, i1.SortableHeaderComponent, [], { fieldName: [0, \"fieldName\"] }, null)], function (_ck, _v) { var currVal_0 = \"\"; _ck(_v, 1, 0, currVal_0); }, null); }\nvar SortableHeaderComponentNgFactory = i0.ɵccf(\"th[mwlSortableHeader]\", i1.SortableHeaderComponent, View_SortableHeaderComponent_Host_0, { fieldName: \"mwlSortableHeader\", sort: \"sort\" }, {}, [\"*\"]);\nexport { SortableHeaderComponentNgFactory as SortableHeaderComponentNgFactory };\n//# sourceMappingURL=sortable-header.directive.ngfactory.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/modules/shared/sortable-header.directive.ngfactory.js\n// module id = 206\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar merge_1 = require('../../observable/merge');\nObservable_1.Observable.merge = merge_1.merge;\n//# sourceMappingURL=merge.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/merge.js\n// module id = 208\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar forkJoin_1 = require('../../observable/forkJoin');\nObservable_1.Observable.forkJoin = forkJoin_1.forkJoin;\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/forkJoin.js\n// module id = 209\n// module chunks = 0","\"use strict\";\nvar ForkJoinObservable_1 = require('./ForkJoinObservable');\nexports.forkJoin = ForkJoinObservable_1.ForkJoinObservable.create;\n//# sourceMappingURL=forkJoin.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/forkJoin.js\n// module id = 210\n// module chunks = 0","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/,\n    reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar Symbol = root.Symbol,\n    splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = isKey(path, object) ? [path] : castPath(path);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value) {\n  return isArray(value) ? value : stringToPath(value);\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoize(function(string) {\n  string = toString(string);\n\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lodash.get/index.js\n// module id = 226\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar fromPromise_1 = require('../../observable/fromPromise');\nObservable_1.Observable.fromPromise = fromPromise_1.fromPromise;\n//# sourceMappingURL=fromPromise.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/fromPromise.js\n// module id = 227\n// module chunks = 0","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar of_1 = require('../../observable/of');\nObservable_1.Observable.of = of_1.of;\n//# sourceMappingURL=of.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/add/observable/of.js\n// module id = 228\n// module chunks = 0","module.exports = require('./lib/index');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/index.js\n// module id = 229\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _ponyfill = require('./ponyfill');\n\nvar _ponyfill2 = _interopRequireDefault(_ponyfill);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar root = undefined; /* global window */\n\nif (typeof global !== 'undefined') {\n\troot = global;\n} else if (typeof window !== 'undefined') {\n\troot = window;\n}\n\nvar result = (0, _ponyfill2.default)(root);\nexports.default = result;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/lib/index.js\n// module id = 230\n// module chunks = 0","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = symbolObservablePonyfill;\nfunction symbolObservablePonyfill(root) {\n\tvar result;\n\tvar _Symbol = root.Symbol;\n\n\tif (typeof _Symbol === 'function') {\n\t\tif (_Symbol.observable) {\n\t\t\tresult = _Symbol.observable;\n\t\t} else {\n\t\t\tresult = _Symbol('observable');\n\t\t\t_Symbol.observable = result;\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/symbol-observable/lib/ponyfill.js\n// module id = 231\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Observable_1 = require('../Observable');\nvar EmptyObservable_1 = require('./EmptyObservable');\nvar isArray_1 = require('../util/isArray');\nvar subscribeToResult_1 = require('../util/subscribeToResult');\nvar OuterSubscriber_1 = require('../OuterSubscriber');\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nvar ForkJoinObservable = (function (_super) {\n    __extends(ForkJoinObservable, _super);\n    function ForkJoinObservable(sources, resultSelector) {\n        _super.call(this);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n    }\n    /* tslint:enable:max-line-length */\n    /**\n     * Joins last values emitted by passed Observables.\n     *\n     * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n     *\n     * <img src=\"./img/forkJoin.png\" width=\"100%\">\n     *\n     * `forkJoin` is an operator that takes any number of Observables which can be passed either as an array\n     * or directly as arguments. If no input Observables are provided, resulting stream will complete\n     * immediately.\n     *\n     * `forkJoin` will wait for all passed Observables to complete and then it will emit an array with last\n     * values from corresponding Observables. So if you pass `n` Observables to the operator, resulting\n     * array will have `n` values, where first value is the last thing emitted by the first Observable,\n     * second value is the last thing emitted by the second Observable and so on. That means `forkJoin` will\n     * not emit more than once and it will complete after that. If you need to emit combined values not only\n     * at the end of lifecycle of passed Observables, but also throughout it, try out {@link combineLatest}\n     * or {@link zip} instead.\n     *\n     * In order for resulting array to have the same length as the number of input Observables, whenever any of\n     * that Observables completes without emitting any value, `forkJoin` will complete at that moment as well\n     * and it will not emit anything either, even if it already has some last values from other Observables.\n     * Conversely, if there is an Observable that never completes, `forkJoin` will never complete as well,\n     * unless at any point some other Observable completes without emitting value, which brings us back to\n     * the previous case. Overall, in order for `forkJoin` to emit a value, all Observables passed as arguments\n     * have to emit something at least once and complete.\n     *\n     * If any input Observable errors at some point, `forkJoin` will error as well and all other Observables\n     * will be immediately unsubscribed.\n     *\n     * Optionally `forkJoin` accepts project function, that will be called with values which normally\n     * would land in emitted array. Whatever is returned by project function, will appear in output\n     * Observable instead. This means that default project can be thought of as a function that takes\n     * all its arguments and puts them into an array. Note that project function will be called only\n     * when output Observable is supposed to emit a result.\n     *\n     * @example <caption>Use forkJoin with operator emitting immediately</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.of(1, 2, 3, 4),\n     *   Rx.Observable.of(5, 6, 7, 8)\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [4, 8]\n     * // \"This is how it ends!\"\n     *\n     *\n     * @example <caption>Use forkJoin with operator emitting after some time</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4) // emit 0, 1, 2, 3 every half a second and complete\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // [2, 3] after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     *\n     * @example <caption>Use forkJoin with project function</caption>\n     * const observable = Rx.Observable.forkJoin(\n     *   Rx.Observable.interval(1000).take(3), // emit 0, 1, 2 every second and complete\n     *   Rx.Observable.interval(500).take(4), // emit 0, 1, 2, 3 every half a second and complete\n     *   (n, m) => n + m\n     * );\n     * observable.subscribe(\n     *   value => console.log(value),\n     *   err => {},\n     *   () => console.log('This is how it ends!')\n     * );\n     *\n     * // Logs:\n     * // 5 after 3 seconds\n     * // \"This is how it ends!\" immediately after\n     *\n     * @see {@link combineLatest}\n     * @see {@link zip}\n     *\n     * @param {...SubscribableOrPromise} sources Any number of Observables provided either as an array or as an arguments\n     * passed directly to the operator.\n     * @param {function} [project] Function that takes values emitted by input Observables and returns value\n     * that will appear in resulting Observable instead of default array.\n     * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n     * or value from project function.\n     * @static true\n     * @name forkJoin\n     * @owner Observable\n     */\n    ForkJoinObservable.create = function () {\n        var sources = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sources[_i - 0] = arguments[_i];\n        }\n        if (sources === null || arguments.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        var resultSelector = null;\n        if (typeof sources[sources.length - 1] === 'function') {\n            resultSelector = sources.pop();\n        }\n        // if the first and only other argument besides the resultSelector is an array\n        // assume it's been called with `forkJoin([obs1, obs2, obs3], resultSelector)`\n        if (sources.length === 1 && isArray_1.isArray(sources[0])) {\n            sources = sources[0];\n        }\n        if (sources.length === 0) {\n            return new EmptyObservable_1.EmptyObservable();\n        }\n        return new ForkJoinObservable(sources, resultSelector);\n    };\n    ForkJoinObservable.prototype._subscribe = function (subscriber) {\n        return new ForkJoinSubscriber(subscriber, this.sources, this.resultSelector);\n    };\n    return ForkJoinObservable;\n}(Observable_1.Observable));\nexports.ForkJoinObservable = ForkJoinObservable;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ForkJoinSubscriber = (function (_super) {\n    __extends(ForkJoinSubscriber, _super);\n    function ForkJoinSubscriber(destination, sources, resultSelector) {\n        _super.call(this, destination);\n        this.sources = sources;\n        this.resultSelector = resultSelector;\n        this.completed = 0;\n        this.haveValues = 0;\n        var len = sources.length;\n        this.total = len;\n        this.values = new Array(len);\n        for (var i = 0; i < len; i++) {\n            var source = sources[i];\n            var innerSubscription = subscribeToResult_1.subscribeToResult(this, source, null, i);\n            if (innerSubscription) {\n                innerSubscription.outerIndex = i;\n                this.add(innerSubscription);\n            }\n        }\n    }\n    ForkJoinSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {\n        this.values[outerIndex] = innerValue;\n        if (!innerSub._hasValue) {\n            innerSub._hasValue = true;\n            this.haveValues++;\n        }\n    };\n    ForkJoinSubscriber.prototype.notifyComplete = function (innerSub) {\n        var destination = this.destination;\n        var _a = this, haveValues = _a.haveValues, resultSelector = _a.resultSelector, values = _a.values;\n        var len = values.length;\n        if (!innerSub._hasValue) {\n            destination.complete();\n            return;\n        }\n        this.completed++;\n        if (this.completed !== len) {\n            return;\n        }\n        if (haveValues === len) {\n            var value = resultSelector ? resultSelector.apply(this, values) : values;\n            destination.next(value);\n        }\n        destination.complete();\n    };\n    return ForkJoinSubscriber;\n}(OuterSubscriber_1.OuterSubscriber));\n//# sourceMappingURL=ForkJoinObservable.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/observable/ForkJoinObservable.js\n// module id = 232\n// module chunks = 0"],"sourceRoot":""}